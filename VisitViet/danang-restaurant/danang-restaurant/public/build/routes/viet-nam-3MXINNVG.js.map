{
  "version": 3,
  "sources": ["../../../app/routes/viet-nam.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\viet-nam.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\viet-nam.tsx\");\n  import.meta.hot.lastModified = \"1704302078275.3555\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { Category } from \"~/components/Category\";\nimport { Container } from \"~/components/Container\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { lang } from \"~/constants/lang\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport { getTypeWithRestaurantCount } from \"~/models/type.server\";\nimport { getUser } from \"~/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const user = await getUser(request);\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language = await getLanguageCookie(cookieHeader);\n  const types = await getTypeWithRestaurantCount({}); //default 1 is VN\n  return json({\n    user,\n    types,\n    language\n  });\n};\nexport const meta = ({\n  data\n}) => [{\n  title: `${lang.restaurantVie[`restaurantVie${data?.language}`]}`\n}, {\n  name: \"description\",\n  content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng Vi\u1EC7t Nam t\u1EA1i \u0110\u00E0 N\u1EB5ng\"\n}];\nexport default function KoreaIndexPage() {\n  _s();\n  const {\n    user,\n    types,\n    language\n  } = useLoaderData();\n  return <Container customClass=\"flex\">\n      <Sidebar user={user} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"lg:w-[30%] overflow-y-scroll\">\n            <Category countrySlug=\"viet-nam\" language={language} categorys={types} />\n          </div>\n          <Outlet />\n        </div>\n      </div>\n    </Container>;\n}\n_s(KoreaIndexPage, \"AwcneocR/fAW+v5vxI4tEn8oaDg=\", false, function () {\n  return [useLoaderData];\n});\n_c = KoreaIndexPage;\nvar _c;\n$RefreshReg$(_c, \"KoreaIndexPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAOrB,kBAA2C;AAC3C,qBAAwB;AA8BlB;AA1DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAyBO,IAAM,OAAO,CAAC;AAAA,EACnB;AACF,MAAM,CAAC;AAAA,EACL,OAAO,GAAG,KAAK,cAAc,gBAAgB,6BAAM,UAAU;AAC/D,GAAG;AAAA,EACD,MAAM;AAAA,EACN,SAAS;AACX,CAAC;AACc,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,aAAU,aAAY,QAC1B;AAAA,uDAAC,WAAQ,MAAY,UAAU,YAA/B;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,IACzC,mDAAC,SAAI,WAAU,0CACb,6DAAC,SAAI,WAAU,2EACb;AAAA,yDAAC,SAAI,WAAU,gCACb,6DAAC,YAAS,aAAY,YAAW,UAAoB,WAAW,SAAhE;AAAA;AAAA;AAAA;AAAA,aAAuE,KADzE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,SAJV;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
