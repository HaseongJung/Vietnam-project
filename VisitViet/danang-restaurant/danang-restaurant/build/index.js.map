{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:C:\\Users\\haseong\\Desktop\\final\\danang-restaurant\\danang-restaurant\\node_modules\\@remix-run\\css-bundle\\dist\\index.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/routes/viet-nam.$slug.$restaurant.tsx", "../app/components/SlideImages.tsx", "../app/constants/lang.ts", "../app/cookies.server.ts", "../app/helpers/cookies.ts", "../app/icons/ClockIcon.tsx", "../app/icons/HeartIcon.tsx", "../app/icons/MapPinIcon.tsx", "../app/icons/MoneyIcon.tsx", "../app/models/favorites.server.ts", "../app/models/restaurants.server.ts", "../app/models/rating.server.ts", "../app/components/RestaurantInfor.tsx", "../app/helpers/slug.ts", "../app/routes/admin.images.$restId.$id.tsx", "../app/components/Button.tsx", "../app/icons/PlusIcon.tsx", "../app/icons/CheckIcon.tsx", "../app/icons/TrashIcon.tsx", "../app/components/ActionButtons.tsx", "../app/components/FormInput.tsx", "../app/models/images.server.ts", "../app/routes/korea.$slug.$restaurant.tsx", "../app/routes/viet-nam.$slug._index.tsx", "../app/models/type.server.ts", "../app/routes/admin.category.$slug.tsx", "../app/routes/admin.images.$restId.tsx", "../app/routes/admin.restaurant.$id.tsx", "../app/models/provider.server.ts", "../app/routes/korea.$slug._index.tsx", "../app/routes/admin.restaurant.tsx", "../app/routes/admin.category.tsx", "../app/components/AdminListLayout.tsx", "../app/routes/admin.images.tsx", "../app/routes/favorite.tsx", "../app/components/Container.tsx", "../app/components/ItemRestaurant.tsx", "../app/components/Sidebar.tsx", "../app/icons/BarIcon.tsx", "../app/icons/DashboardIcon.tsx", "../app/icons/FavoriteIcon.tsx", "../app/icons/HomeIcon.tsx", "../app/icons/LogoIcon.tsx", "../app/icons/LogoutIcon.tsx", "../app/icons/ScheduleIcon.tsx", "../app/icons/SettingIcon.tsx", "../app/routes/schedule.tsx", "../app/components/ScheduleRestaurant.tsx", "../app/icons/RemoveIcon.tsx", "../app/helpers/date.ts", "../app/models/schedule.server.ts", "../app/routes/settings.tsx", "../app/routes/viet-nam.tsx", "../app/components/Category.tsx", "../app/icons/CategoryIcon.tsx", "../app/routes/logout.tsx", "../app/routes/signup.tsx", "../app/utils.ts", "../app/routes/_index.tsx", "../app/components/Slide.tsx", "../app/icons/BuildingIcon.tsx", "../app/routes/admin.tsx", "../app/icons/BriefcaseIcon.tsx", "../app/icons/RestaurantIcon.tsx", "../app/icons/PhotoIcon.tsx", "../app/routes/korea.tsx", "../app/routes/login.tsx", "../app/routes/404.tsx", "../app/icons/ArrowLongLeft.tsx", "../app/icons/ExclamationIcon.tsx", "../app/routes/$.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v1.19.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof \"/build/css-bundle-AA657SXN.css\" === \"string\" ? \"/build/css-bundle-AA657SXN.css\" : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "export * from \"@remix-run/dev/server-build\";", "/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { Response } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration\n  // useLoaderData,\n} from \"@remix-run/react\";\n\n// Models\nimport { getUser } from \"~/session.server\";\n\n// Styles\nimport \"slick-carousel/slick/slick.css?__remix_sideEffect__\";\nimport \"slick-carousel/slick/slick-theme.css?__remix_sideEffect__\";\nimport stylesheet from \"~/tailwind.css\";\nimport \"./assets/css/scrollbar.css?__remix_sideEffect__\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : [])];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await getUser(request);\n  return json({ user });\n};\n\nexport default function App() {\n  // const { user } = useLoaderData<typeof loader>();\n\n  return (\n    <html lang=\"vi\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap\"\n          rel=\"stylesheet\" />\n\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"app bg-white dark:bg-black font-quicksand\">\n        <main className=\"\">\n          <Outlet />\n        </main>\n        {/* <script async src=\"/main.js\" /> */}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\n// Models\r\nimport type { User } from \"~/models/user.server\";\r\nimport { getUserById } from \"~/models/user.server\";\r\n\r\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [process.env.SESSION_SECRET],\r\n    secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nconst USER_SESSION_KEY = \"userId\";\r\n\r\nexport async function getSession(request: Request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function getUserId(\r\n  request: Request\r\n): Promise<User[\"id\"] | undefined> {\r\n  const session = await getSession(request);\r\n  const userId = session.get(USER_SESSION_KEY);\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (userId === undefined) return null;\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const userId = await getUserId(request);\r\n  if (!userId) {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n  return userId;\r\n}\r\n\r\nexport async function requireUser(request: Request) {\r\n  const userId = await requireUserId(request);\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireManagerUser(request: Request) {\r\n  const user = await requireUser(request);\r\n\r\n  if (user.role >= 1) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireAdminUser(request: Request) {\r\n  const user = await requireUser(request);\r\n\r\n  if (user.role >=2 ) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function createUserSession({\r\n  request,\r\n  userId,\r\n  remember,\r\n  redirectTo,\r\n}: {\r\n  request: Request;\r\n  userId: string;\r\n  remember: boolean;\r\n  redirectTo: string;\r\n}) {\r\n  const session = await getSession(request);\r\n  session.set(USER_SESSION_KEY, userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\r\n        maxAge: remember\r\n          ? 60 * 60 * 24 * 7 // 7 days\r\n          : undefined,\r\n      }),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getSession(request);\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n\r\n", "import type { User } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\n// Models\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { User } from \"@prisma/client\";\r\n\r\ntype UserTypeNew = {\r\n  username: User[\"username\"];\r\n  password: string;\r\n}\r\n\r\nexport async function getUserById(id: User[\"id\"]) {\r\n  return prisma.user.findUnique({ where: { id } });\r\n}\r\n\r\nexport async function getUserByUsername(username: User[\"username\"]) {\r\n  return prisma.user.findUnique({ where: { username } });\r\n}\r\n\r\nexport async function createUser({\r\n  username, password,\r\n}: UserTypeNew) {\r\n  const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n  return prisma.user.create({\r\n    data: {\r\n      username: username.trim(),\r\n      role: 0, // Moderator\r\n      passwordHash: hashedPassword\r\n    },\r\n  });\r\n}\r\n\r\nexport async function verifyLogin(\r\n  username: User[\"username\"],\r\n  password: User[\"passwordHash\"]\r\n) {\r\n  const userWithPassword = await prisma.user.findUnique({\r\n    where: { username },\r\n  });\r\n\r\n  if (!userWithPassword || !userWithPassword.passwordHash) {\r\n    return null;\r\n  }\r\n\r\n  const isValid = await bcrypt.compare(\r\n    password,\r\n    userWithPassword.passwordHash\r\n  );\r\n\r\n  if (!isValid) {\r\n    return null;\r\n  }\r\n\r\n  const { passwordHash: _password, ...userWithoutPassword } = userWithPassword;\r\n\r\n  return userWithoutPassword;\r\n}", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet prisma: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db__: PrismaClient | undefined;\r\n}\r\n\r\n// This is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\n// In production, we'll have a single connection to the DB.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n} else {\r\n  if (!global.__db__) {\r\n    global.__db__ = new PrismaClient();\r\n  }\r\n  prisma = global.__db__;\r\n  prisma.$connect();\r\n}\r\n\r\nexport { prisma };\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport type { LoaderArgs, ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useSubmit } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport SliderImages from \"~/components/SlideImages\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\nimport { ClockIcon } from \"~/icons/ClockIcon\";\r\nimport { HeartIcon, HeartIconUsed } from \"~/icons/HeartIcon\";\r\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\r\nimport { MoneyIcon } from \"~/icons/MoneyIcon\";\r\nimport {\r\n  addToFavorites,\r\n  checkRestaurantIsFavorited,\r\n  checkRestaurantIsRatings,\r\n  removeFromFavorites,\r\n} from \"~/models/favorites.server\";\r\nimport {\r\n  getRestaurantsById,\r\n  getRestaurantsList,\r\n} from \"~/models/restaurants.server\";\r\nimport {\r\n  getValueRating,\r\n  addRatingValue,\r\n  updateRatingValue,\r\n} from \"~/models/rating.server\";\r\n\r\nimport { getUser } from \"~/session.server\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { RestaurantInfor } from \"~/components/RestaurantInfor\";\r\nimport { createRestaurantSlug } from \"~/helpers/slug\";\r\n\r\nexport const loader = async ({ request, params }: LoaderArgs) => {\r\n  const user = await getUser(request);\r\n  const slug = params.restaurant;\r\n\r\n  let restaurant;\r\n  if (slug?.length) {\r\n    restaurant = await getRestaurantsById(slug);\r\n  } else {\r\n    return redirect(\"/404\");\r\n  }\r\n\r\n  if (!restaurant) {\r\n    return redirect(\"/404\");\r\n  }\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  const restaurants = await getRestaurantsList();\r\n\r\n  let isFavorited;\r\n  let isRating;\r\n  let value_rating;\r\n  if (user) {\r\n    // Check if the restaurant is already favorited by the user\r\n    isFavorited = await checkRestaurantIsFavorited({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n\r\n    isRating = await checkRestaurantIsRatings({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n    // take rating value by user and restaurant from rating table\r\n    value_rating = await getValueRating(user.id, restaurant.id);\r\n  }\r\n\r\n  return json({\r\n    user,\r\n    language,\r\n    restaurant,\r\n    isFavorited,\r\n    isRating,\r\n    value_rating,\r\n    restaurants,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  invariant(params.restaurant, \"id not found\");\r\n  const user = await getUser(request);\r\n\r\n  const slug = params.restaurant;\r\n  const restaurant = await getRestaurantsById(slug);\r\n  if (!restaurant) {\r\n    return redirect(\"/404\");\r\n  }\r\n\r\n  const formData = await request.formData();\r\n  const rating = formData.get(\"rating\");\r\n  const favorite = formData.get(\"favorite\");\r\n  if (!user) return redirect(\"/login\");\r\n\r\n  if (favorite === \"on\") {\r\n    const isFavorite = await checkRestaurantIsFavorited({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n    if (!isFavorite) {\r\n      await addToFavorites({ userId: user.id, restaurantId: restaurant.id });\r\n    }\r\n  } else {\r\n    await removeFromFavorites({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n  }\r\n\r\n  const value_rating = await getValueRating(user.id, restaurant.id);\r\n\r\n  if (!value_rating && Number(rating) !== 0) {\r\n    await addRatingValue(user.id, restaurant.id, Number(rating) | 0);\r\n    return json({});\r\n  }\r\n\r\n  if (value_rating && Number(rating) !== 0) {\r\n    await updateRatingValue(user.id, restaurant.id, Number(rating) | 0);\r\n    return json({});\r\n  }\r\n\r\n  return json({});\r\n};\r\n\r\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\r\n  { title: `${data?.restaurant[`name${data.language}`]}` },\r\n  {\r\n    name: \"description\",\r\n    content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng H\u00E0n Qu\u1ED1c t\u1EA1i \u0110\u00E0 N\u1EB5ng\",\r\n  },\r\n];\r\n\r\nexport default function RestaurantKoreaPage() {\r\n  const { language, restaurant, isFavorited, value_rating, restaurants } =\r\n    useLoaderData<typeof loader>();\r\n  const submit = useSubmit();\r\n\r\n  const [data, setData] = useState<any>([]);\r\n  console.log(\"******************************\");\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:8080/content-based/${restaurant.nameVie}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => console.error(error));\r\n  }, [restaurant.nameVie]);\r\n  console.log(\"->>>>>>>>>>>>>>>>>>>>>>>>>\", data);\r\n\r\n  const predictRes = restaurants.filter((item) =>\r\n    data?.includes(item?.nameVie)\r\n  );\r\n\r\n  const [rating, setRating] = useState<number>(value_rating || 0);\r\n  const [hover, setHover] = useState<any>();\r\n\r\n  function handleChang(event: React.FormEvent<HTMLFormElement>) {\r\n    submit(event.currentTarget, { replace: true });\r\n  }\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    const dateTimeInput = document.getElementById(\r\n      \"dateTime\"\r\n    ) as HTMLInputElement;\r\n\r\n    if (!dateTimeInput.value) {\r\n      event.preventDefault(); // Ng\u0103n kh\u00F4ng cho submit form\r\n      dateTimeInput.focus(); // Focus l\u1EA1i v\u00E0o \u00F4 input\r\n      alert(`${lang.timeRequired[`timeRequired${language}`]}`);\r\n    }\r\n  };\r\n\r\n  console.log(\"value_rating------------>\", value_rating);\r\n  return (\r\n    <div className=\"relative rounded-2xl overflow-hidden mt-4 lg:mt-0 lg:w-[70%] lg:pl-6 lg:overflow-y-auto\">\r\n      <Form method=\"post\" onChange={handleChang}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"favorite\"\r\n          defaultChecked={Boolean(isFavorited)}\r\n          className=\"absolute right-4 top-4 z-20 w-5 h-5 opacity-0 cursor-pointer\"\r\n        />\r\n        <span className=\"absolute right-4 top-4 z-10 w-10 h-10 bg-white rounded-full flex items-center justify-center\">\r\n          {isFavorited ? <HeartIconUsed /> : <HeartIcon />}\r\n        </span>\r\n        <div className=\"h-[200px] md:h-[240px] lg:h-[320px]\">\r\n          <SliderImages images={restaurant.images} />\r\n        </div>\r\n        <div className=\"p-3 rounded-2xl\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <img\r\n              src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\r\n              alt=\"Restaurant\"\r\n              className=\"w-6 h-6\"\r\n            />\r\n            <div className=\"ml-2 flex-1\">\r\n              <p className=\"uppercase text-xs font-bold text-gray-600\">{`${\r\n                lang.restaurant[`restaurant${language}`]\r\n              }`}</p>\r\n              <h3 className=\"font-bold\">{restaurant[`name${language}`]}</h3>\r\n            </div>\r\n            <span className=\"flex items-center text-sm\">\r\n              <div className=\"flex items-center relative\">\r\n                <input\r\n                  name=\"rating\"\r\n                  type=\"text\"\r\n                  className=\"invisible\"\r\n                  value={rating}\r\n                />\r\n\r\n                {[...Array(5)].map((star, index) => {\r\n                  const ratingValue = index + 1;\r\n                  return (\r\n                    <>\r\n                      <label key={index}>\r\n                        <button>\r\n                          <FaStar\r\n                            className={`star ${\r\n                              ratingValue <= (hover || rating)\r\n                                ? \"text-orange-500\"\r\n                                : \"text-gray-500\"\r\n                            } hover:text-orange-500`}\r\n                            size={20}\r\n                            onMouseEnter={() => setHover(ratingValue)}\r\n                            onMouseLeave={() => setHover(null)}\r\n                            onClick={(e: any) => {\r\n                              setRating(ratingValue);\r\n                            }}\r\n                          />\r\n                        </button>\r\n                      </label>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <span className=\"flex items-center text-sm mb-1\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <MapPinIcon />\r\n            </span>\r\n            <span>{restaurant[`address${language}`]}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-sm mb-1 font-semibold text-[13px]\">\r\n            <span className=\"mr-1\">\r\n              <MoneyIcon />\r\n            </span>\r\n            <span>{`${\r\n              restaurant.priceLow ? `\u20A9${restaurant.priceLow}` : \"\"\r\n            } ${\r\n              restaurant.priceHigh ? `- \u20A9${restaurant.priceHigh}` : \"\"\r\n            }`}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-xs font-semibold\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <ClockIcon />\r\n            </span>\r\n            <span>{`${lang.open[`open${language}`]}: ${\r\n              restaurant.openingTime\r\n            } - ${lang.close[`close${language}`]}: ${\r\n              restaurant.closingTime\r\n            }`}</span>\r\n          </span>\r\n        </div>\r\n      </Form>\r\n\r\n      <div className=\"py-4 px-2 bg-white rounded-xl md:inline-block\">\r\n        <h4 className=\"font-semibold text-sm text-gray-600 mb-1\">\r\n          {lang.addSchedule[`addSchedule${language}`]}\r\n        </h4>\r\n        <Form\r\n          method=\"post\"\r\n          action={`/schedule?new=${restaurant.id}`}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              type=\"datetime-local\"\r\n              id=\"dateTime\"\r\n              name=\"dateTime\"\r\n              className=\"inline-flex border text-sm p-2 rounded-xl outline-none focus:border-[#1ec28b]\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-[#1ec28b] rounded-xl ml-2 text-white text-xs uppercase font-bold py-2 px-4 hover:bg-[#0aae77]\"\r\n            >\r\n              {lang.save[`save${language}`]}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n\r\n      <div className=\"p-2\">\r\n        <div className=\"pt-2 border-t\">\r\n          <h4 className=\"font-bold mb-1\">\r\n            {lang.description[`description${language}`]}\r\n          </h4>\r\n          <p className=\"text-[15px] text-justify\">\r\n            {restaurant[`description${language}`]}\r\n          </p>\r\n        </div>\r\n        <a\r\n          href={restaurant.direct || \"\"}\r\n          title={restaurant[`name${language}`] || \"\"}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          className=\"block p-3 my-4 text-center rounded-2xl bg-[#1ec28b] text-white uppercase font-bold lg:w-[40%] lg:ml-auto\"\r\n        >\r\n          {lang.direction[`direction${language}`]}\r\n        </a>\r\n      </div>\r\n\r\n      {predictRes?.length > 0 && (\r\n        <div>\r\n          <h4 className=\"text-2xl font-semibold\">Related restaurants</h4>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {predictRes?.map((restaurant) => (\r\n              <RestaurantInfor\r\n                key={restaurant.id}\r\n                link={createRestaurantSlug({\r\n                  countrySlug: restaurant?.countryType?.country?.slug,\r\n                  typeSlug: restaurant?.countryType?.type?.slug,\r\n                  id: restaurant.id,\r\n                })}\r\n                name={restaurant[`name${language}`]}\r\n                address={restaurant[`address${language}`]}\r\n                open={restaurant.openingTime}\r\n                priceLow={restaurant.priceLow || undefined}\r\n                priceHigh={restaurant.priceHigh || undefined}\r\n                close={restaurant.closingTime}\r\n                rating={restaurant.rating || 0}\r\n                images={restaurant.images[0]?.url || undefined}\r\n                language={language}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import Slider from \"react-slick\";\nimport \"../assets/css/slied.css?__remix_sideEffect__\";\n\ntype Images = {\n  url: string;\n};\n\ntype SliderImagesProps = {\n  images: Images[];\n};\n\nexport default function SliderImages({ images = [] }: SliderImagesProps) {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Slider {...settings} className=\"\">\r\n      {images.map((image, index) =>\n      <img key={index} src={image.url} alt=\"\" className=\"block h-[200px] object-cover rounded-2xl md:h-[240px] lg:h-[320px]\" />\n      )}\r\n    </Slider>);\n\n}", "export const lang = {\r\n  hello: {\r\n    helloEng: \"Hello,\",\r\n    helloKor: \"\uC548\uB155\uD558\uC138\uC694,\",\r\n    helloVie: \"Xin ch\u00E0o,\",\r\n  },\r\n  welcome: {\r\n    welcomeEng: \"Let's explore the restaurants in Da Nang together.\",\r\n    welcomeVie: \"H\u00E3y c\u00F9ng nhau kh\u00E1m ph\u00E1 c\u00E1c nh\u00E0 h\u00E0ng t\u1EA1i \u0110\u00E0 N\u1EB5ng.\",\r\n    welcomeKor: \"\uD568\uAED8 \uB2E4\uB0AD\uC758 \uB808\uC2A4\uD1A0\uB791\uC744 \uD0D0\uD5D8\uD569\uC2DC\uB2E4.\",\r\n  },\r\n  countryVN: {\r\n    countryVNEng: \"Vietnam\",\r\n    countryVNKor: \"\uBCA0\uD2B8\uB0A8\",\r\n    countryVNVie: \"Vi\u1EC7t Nam\",\r\n  },\r\n  countryKO: {\r\n    countryKOEng: \"Korea\",\r\n    countryKOKor: \"\uD55C\uAD6D\",\r\n    countryKOVie: \"H\u00E0n Qu\u1ED1c\",\r\n  },\r\n  bestResttaurant: {\r\n    bestResttaurantEng: \"Best Restaurant\",\r\n    bestResttaurantKor: \"\uC778\uAE30\uC788\uB294 \uB808\uC2A4\uD1A0\uB791\",\r\n    bestResttaurantVie: \"Nh\u00E0 h\u00E0ng \u0111\u01B0\u1EE3c y\u00EAu th\u00EDch\",\r\n  },\r\n  subBestResttaurant: {\r\n    subBestResttaurantEng: \"Top 10 best resttaurant\",\r\n    subBestResttaurantKor: \"\uC778\uAE30\uC788\uB294 \uC0C1\uC704 10\uAC1C\uC758 \uB808\uC2A4\uD1A0\uB791\",\r\n    subBestResttaurantVie: \"Top 10 nh\u00E0 h\u00E0ng \u0111\u01B0\u1EE3c y\u00EAu th\u00EDch\",\r\n  },\r\n  predictResttaurant: {\r\n    predictResttaurantEng: \"Recommend\",\r\n    predictResttaurantKor: \"\uCD94\uCC9C=\",\r\n    predictResttaurantVie: \"\u0110\u1EC1 xu\u1EA5t\",\r\n  },\r\n  subPredictResttaurant: {\r\n    subPredictResttaurantEng: \"Recommend for you\",\r\n    subPredictResttaurantKor: \"\uB2F9\uC2E0\uC5D0\uAC8C \uCD94\uCC9C\uD569\uB2C8\uB2E4\",\r\n    subPredictResttaurantVie: \"\u0110\u1EC1 xu\u1EA5t d\u00E0nh cho b\u1EA1n\",\r\n  },\r\n  titleToCountry: {\r\n    titleToCountryEng: \"Explore Cuisine\",\r\n    titleToCountryKor: \"\uC694\uB9AC \uBC1C\uACAC\",\r\n    titleToCountryVie: \"Kh\u00E1m ph\u00E1 \u1EA9m th\u1EF1c\",\r\n  },\r\n  dashboard: {\r\n    dashboardEng: \"Dashboard\",\r\n    dashboardKor: \"\uB300\uC2DC\uBCF4\uB4DC\",\r\n    dashboardVie: \"Qu\u1EA3n l\u00FD\",\r\n  },\r\n  home: {\r\n    homeEng: \"Home\",\r\n    homeKor: \"\uC9D1\",\r\n    homeVie: \"Trang ch\u1EE7\",\r\n  },\r\n  favorite: {\r\n    favoriteEng: \"Favorite\",\r\n    favoriteKor: \"\uC88B\uC544\uD558\uB294\",\r\n    favoriteVie: \"Y\u00EAu th\u00EDch\",\r\n  },\r\n  schedule: {\r\n    scheduleEng: \"Schedule\",\r\n    scheduleKor: \"\uC77C\uC815\",\r\n    scheduleVie: \"L\u1ECBch tr\u00ECnh\"\r\n  },\r\n  settings: {\r\n    settingsEng: \"Settings\",\r\n    settingsKor: \"\uC124\uC815\",\r\n    settingsVie: \"C\u00E0i \u0111\u1EB7t\",\r\n  },\r\n  login: {\r\n    loginEng: \"Login\",\r\n    loginKor: \"\uB85C\uADF8\uC778\",\r\n    loginVie: \"\u0110\u0103ng nh\u1EADp\",\r\n  },\r\n  signup: {\r\n    signupEng: \"Sign up\",\r\n    signupKor: \"\uAC00\uC785\",\r\n    signupVie: \"\u0110\u0103ng k\u00FD\",\r\n  },\r\n  logout: {\r\n    logoutEng: \"Logout\",\r\n    logoutKor: \"\uB85C\uADF8\uC544\uC6C3\",\r\n    logoutVie: \"\u0110\u0103ng xu\u1EA5t\",\r\n  },\r\n  category: {\r\n    categoryEng: \"Category\",\r\n    categoryKor: \"\uBAA9\uB85D\",\r\n    categoryVie: \"Danh m\u1EE5c\",\r\n  },\r\n  restaurant: {\r\n    restaurantEng: \"restaurant\",\r\n    restaurantKor: \"\uC2DD\uB2F9\",\r\n    restaurantVie: \"Nh\u00E0 h\u00E0ng\",\r\n  },\r\n  restaurantVie: {\r\n    restaurantVieEng: \"Vietnam Restaurant\",\r\n    restaurantVieKor: \"\uBCA0\uD2B8\uB0A8 \uB098\uD56D\",\r\n    restaurantVieVie: \"Nh\u00E0 h\u00E0ng Vi\u1EC7t Nam\",\r\n  },\r\n  restaurantKor: {\r\n    restaurantKorEng: \"Korea Restaurant\",\r\n    restaurantKorKor: \"\uB098\uD56D \uD55C\uAFB8\uC625\",\r\n    restaurantKorVie: \"Nh\u00E0 h\u00E0ng H\u00E0n Qu\u1ED1c\",\r\n  },\r\n  homePage: {\r\n    homePageEng: \"Home page\",\r\n    homePageKor: \"\uD648\uD398\uC774\uC9C0\",\r\n    homePageVie: \"Trang ch\u1EE7\",\r\n  },\r\n  open: {\r\n    openEng: \"Open\",\r\n    openKor: \"\uC5F4\uB2E4\",\r\n    openVie: \"M\u1EDF c\u1EEDa\",\r\n  },\r\n  close: {\r\n    closeEng: \"Close\",\r\n    closeKor: \"\uB2EB\uB2E4\",\r\n    closeVie: \"\u0110\u00F3ng c\u1EEDa\",\r\n  },\r\n  description: {\r\n    descriptionEng: \"Description\",\r\n    descriptionKor: \"\uC124\uBA85\",\r\n    descriptionVie: \"M\u00F4 t\u1EA3\",\r\n  },\r\n  direction: {\r\n    directionEng: \"Direction\",\r\n    directionKor: \"\uBC29\uD5A5\",\r\n    directionVie: \"\u0110\u01B0\u1EDDng \u0111i\",\r\n  },\r\n  language: {\r\n    languageEng: \"Language\",\r\n    languageKor: \"\uC5B8\uC5B4\",\r\n    languageVie: \"Ng\u00F4n ng\u1EEF\",\r\n  },\r\n  save: {\r\n    saveEng: \"Save\",\r\n    saveKor: \"\uAD6C\uD558\uB2E4\",\r\n    saveVie: \"L\u01B0u\",\r\n  },\r\n  loginTitle: {\r\n    loginTitleEng: \"Sign in to your account\",\r\n    loginTitleKor: \"\uACC4\uC815\uC5D0 \uB85C\uADF8\uC778\",\r\n    loginTitleVie: \"\u0110\u0103ng nh\u1EADp v\u00E0o t\u00E0i kho\u1EA3n c\u1EE7a b\u1EA1n\",\r\n  },\r\n  loginSubTitle: {\r\n    loginSubTitleEng: \"Don't have an account yet\",\r\n    loginSubTitleKor: \"\uC544\uC9C1 \uACC4\uC815\uC774 \uC5C6\uC2B5\uB2C8\uB2E4\",\r\n    loginSubTitleVie: \"B\u1EA1n ch\u01B0a c\u00F3 t\u00E0i kho\u1EA3n\",\r\n  },\r\n  signupTitle: {\r\n    signupTitleEng: \"Create and account\",\r\n    signupTitleKor: \"\uB9CC\uB4E4\uAE30 \uBC0F \uACC4\uC815\",\r\n    signupTitleVie: \"T\u1EA1o t\u00E0i kho\u1EA3n c\u1EE7a b\u1EA1n\",\r\n  },\r\n  signupSubTitle: {\r\n    signupSubTitleEng: \"Already have an account\",\r\n    signupSubTitleKor: \"\uC774\uBBF8 \uACC4\uC815\uC774 \uC788\uC2B5\uB2C8\uB2E4\",\r\n    signupSubTitleVie: \"B\u1EA1n \u0111\u00E3 c\u00F3 t\u00E0i kho\u1EA3n\",\r\n  },\r\n  username: {\r\n    usernameEng: \"Username\",\r\n    usernameKor: \"\uC0AC\uC6A9\uC790 \uC774\uB984\",\r\n    usernameVie: \"T\u00EAn \u0111\u0103ng nh\u1EADp\",\r\n  },\r\n  password: {\r\n    passwordEng: \"Password\",\r\n    passwordKor: \"\uBE44\uBC00\uBC88\uD638\",\r\n    passwordVie: \"M\u1EADt kh\u1EA9u\",\r\n  },\r\n  remember: {\r\n    rememberEng: \"Remember\",\r\n    rememberKor: \"\uAE30\uC5B5\uD558\uB2E4\",\r\n    rememberVie: \"Nh\u1EDB m\u1EADt kh\u1EA9u\",\r\n  },\r\n  addSchedule: {\r\n    addScheduleEng: \"Add to schedule\",\r\n    addScheduleKor: \"\uC77C\uC815\uC5D0 \uCD94\uAC00\",\r\n    addScheduleVie: \"Th\u00EAm v\u00E0o l\u1ECBch tr\u00ECnh\",\r\n  },\r\n  timeRequired: {\r\n    timeRequiredEng: \"Time is required!\",\r\n    timeRequiredKor: \"\uC2DC\uAC04\uC744 \uC120\uD0DD\uD558\uC138\uC694!\",\r\n    timeRequiredVie: \"Vui l\u00F2ng ch\u1ECDn th\u1EDDi gian!\",\r\n  },\r\n  errorLogin: {\r\n    error1: {\r\n      error1Eng: \"Username is invalid\",\r\n      error1Kor: \"\uC0AC\uC6A9\uC790 \uC774\uB984\uC774 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4\",\r\n      error1Vie: \"T\u00EAn \u0111\u0103ng nh\u1EADp kh\u00F4ng \u0111\u00FAng\",\r\n    },\r\n    error2: {\r\n      error2Eng: \"Invalid username or password\",\r\n      error2Kor: \"\uC798\uBABB\uB41C \uC0AC\uC6A9\uC790 \uC774\uB984 \uB610\uB294 \uBE44\uBC00\uBC88\uD638\",\r\n      error2Vie: \"T\u00EAn \u0111\u0103ng nh\u1EADp ho\u1EB7c m\u1EADt kh\u1EA9u kh\u00F4ng \u0111\u00FAng\",\r\n    },\r\n    error3: {\r\n      error3Eng: \"Password is required\",\r\n      error3Kor: \"\uBE44\uBC00\uBC88\uD638\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4\",\r\n      error3Vie: \"Vui l\u00F2ng nh\u1EADp m\u1EADt kh\u1EA9u\",\r\n    },\r\n    error4: {\r\n      error4Eng: \"Password is too short\",\r\n      error4Kor: \"\uBE44\uBC00\uBC88\uD638\uAC00 \uB108\uBB34 \uC9E7\uC2B5\uB2C8\uB2E4\",\r\n      error4Vie: \"M\u1EADt kh\u1EA9u qu\u00E1 ng\u1EAFn\",\r\n    },\r\n    error51: {\r\n      error51Eng: \"User with username\",\r\n      error51Kor: \"\uC0AC\uC6A9\uC790 \uC774\uB984\uC774 \uC788\uB294 \uC0AC\uC6A9\uC790\",\r\n      error51Vie: \"T\u00EAn ng\u01B0\u1EDDi d\u00F9ng\",\r\n    },\r\n    error52: {\r\n      error52Eng: \"already exists\",\r\n      error52Kor: \"\uC774\uBBF8 \uC874\uC7AC \uD568\",\r\n      error52Vie: \"\u0111\u00E3 t\u1ED3n t\u1EA1i.\",\r\n    },\r\n    error6: {\r\n      error6Eng: \"Something went wrong trying to create a new user.\",\r\n      error6Kor: \"\uC0C8 \uC0AC\uC6A9\uC790\uB97C \uB9CC\uB4DC\uB294 \uB3D9\uC548 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.\",\r\n      error6Vie: \"C\u00F3 l\u1ED7i v\u1EDBi t\u1EA1o t\u00EAn ng\u01B0\u1EDDi d\u00F9ng m\u1EDBi\",\r\n    },\r\n  },\r\n  //404\r\n  page404Title: {\r\n    page404TitleEng: \"Page not found\",\r\n    page404TitleKor: \"\uD398\uC774\uC9C0\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC74C\",\r\n    page404TitleVie: \"Kh\u00F4ng t\u00ECm th\u1EA5y trang\",\r\n  },\r\n  page404SubTitle: {\r\n    page404SubTitleEng: \"The page you are looking for does not exist. Here are some useful links:\",\r\n    page404SubTitleKor: \"\uCC3E\uC73C\uC2DC\uB294 \uD398\uC774\uC9C0\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C\uC740 \uBA87 \uAC00\uC9C0 \uC720\uC6A9\uD55C \uB9C1\uD06C\uC785\uB2C8\uB2E4.\",\r\n    page404SubTitleVie: \"Trang b\u1EA1n t\u00ECm ki\u1EBFm kh\u00F4ng t\u1ED3n t\u1EA1i. D\u01B0\u1EDBi \u0111\u00E2y l\u00E0 m\u1ED9t s\u1ED1 li\u00EAn k\u1EBFt h\u1EEFu \u00EDch:\",\r\n  },\r\n  page404TimeTitle: {\r\n    page404TimeTitleEng: \"Automatically return to the next homepage\",\r\n    page404TimeTitleKor: \"\uB2E4\uC74C \uD648\uD398\uC774\uC9C0\uB85C \uC790\uB3D9\uC73C\uB85C \uB3CC\uC544\uAC00\uAE30\",\r\n    page404TimeTitleVie: \"T\u1EF1 \u0111\u1ED9ng quay v\u1EC1 trang ch\u1EE7 sau\",\r\n  },\r\n  back: {\r\n    backEng: \"Back\",\r\n    backKor: \"\uBC18\uD488\",\r\n    backVie: \"Tr\u1EDF l\u1EA1i\",\r\n  },\r\n  minute: {\r\n    minuteEng: \"minute\",\r\n    minuteKor: \"\uBD84\",\r\n    minuteVie: \"ph\u00FAt\",\r\n  }\r\n};\r\n", "import { createCookie } from \"@remix-run/node\"; // ho\u1EB7c cloudflare/deno\r\n\r\nexport const languageCookie = createCookie(\"language\", {\r\n  maxAge: 604800, // m\u1ED9t tu\u1EA7n\r\n});\r\n", "import { languageCookie } from \"~/cookies.server\";\r\n\r\nexport async function getLanguageCookie (cookieHeader: string | null) {\r\n  const cookie = (await languageCookie.parse(cookieHeader)) || {};\r\n  const language = cookie.language || \"nameEng\"; // N\u1EBFu kh\u00F4ng c\u00F3 cookie, gi\u00E1 tr\u1ECB m\u1EB7c \u0111\u1ECBnh l\u00E0 \"1\"\r\n  return language;\r\n}\r\n\r\n", "export const ClockIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-4 h-4\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const HeartIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6 text-[#1ec28b]\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const HeartIconUsed = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"#1ec28b\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6 text-[#1ec28b]\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const MapPinIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1.5\"\n    stroke=\"currentColor\"\n    className=\"w-4 h-4\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M15 10.5a3 3 0 11-6 0 3 3 0 016 0z\"\n    />\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z\"\n    />\n  </svg>\n);\n", "export const MoneyIcon = () => (\r\n  <svg\r\n    width=\"22\"\r\n    height=\"19\"\r\n    viewBox=\"0 0 22 19\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"w-4 h-4\"\r\n  >\r\n    <path\r\n      d=\"M1.25 15.75C6.58561 15.7457 11.898 16.4522 17.047 17.851C17.774 18.049 18.5 17.509 18.5 16.755V15.75M2.75 1.5V2.25C2.75 2.44891 2.67098 2.63968 2.53033 2.78033C2.38968 2.92098 2.19891 3 2 3H1.25M1.25 3V2.625C1.25 2.004 1.754 1.5 2.375 1.5H19.25M1.25 3V12M19.25 1.5V2.25C19.25 2.664 19.586 3 20 3H20.75M19.25 1.5H19.625C20.246 1.5 20.75 2.004 20.75 2.625V12.375C20.75 12.996 20.246 13.5 19.625 13.5H19.25M1.25 12V12.375C1.25 12.6734 1.36853 12.9595 1.5795 13.1705C1.79048 13.3815 2.07663 13.5 2.375 13.5H2.75M1.25 12H2C2.19891 12 2.38968 12.079 2.53033 12.2197C2.67098 12.3603 2.75 12.5511 2.75 12.75V13.5M19.25 13.5V12.75C19.25 12.5511 19.329 12.3603 19.4697 12.2197C19.6103 12.079 19.8011 12 20 12H20.75M19.25 13.5H2.75M14 7.5C14 8.29565 13.6839 9.05871 13.1213 9.62132C12.5587 10.1839 11.7956 10.5 11 10.5C10.2044 10.5 9.44129 10.1839 8.87868 9.62132C8.31607 9.05871 8 8.29565 8 7.5C8 6.70435 8.31607 5.94129 8.87868 5.37868C9.44129 4.81607 10.2044 4.5 11 4.5C11.7956 4.5 12.5587 4.81607 13.1213 5.37868C13.6839 5.94129 14 6.70435 14 7.5ZM17 7.5H17.008V7.508H17V7.5ZM5 7.5H5.008V7.508H5V7.5Z\"\r\n      stroke=\"#1ec28b\"\r\n      strokeWidth=\"1.5\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n", "import { prisma } from \"~/db.server\";\r\n\r\ntype FavoriteType = {\r\n  userId: string;\r\n  restaurantId: string;\r\n};\r\n\r\nexport async function checkRestaurantIsFavorited({\r\n  userId,\r\n  restaurantId,\r\n}: FavoriteType) {\r\n  return prisma.favorite.count({\r\n    where: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n\r\n// Function to add a restaurant to favorites\r\nexport async function addToFavorites({ userId, restaurantId }: FavoriteType) {\r\n  return prisma.favorite.create({\r\n    data: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n\r\n// Function to remove a restaurant from favorites\r\nexport async function removeFromFavorites({\r\n  userId,\r\n  restaurantId,\r\n}: FavoriteType) {\r\n  return prisma.favorite.deleteMany({\r\n    where: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n\r\ntype RatingType = {\r\n  userId: string;\r\n  restaurantId: string;\r\n};\r\n\r\nexport async function checkRestaurantIsRatings({\r\n  userId,\r\n  restaurantId,\r\n}: RatingType) {\r\n  return prisma.rating.count({\r\n    where: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n\r\n// Function to add a restaurant to Ratings\r\nexport async function addToRatings({ userId, restaurantId }: RatingType) {\r\n  return prisma.rating.create({\r\n    data: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n\r\n// Function to remove a restaurant from Ratings\r\nexport async function removeFromRatings({ userId, restaurantId }: RatingType) {\r\n  return prisma.rating.deleteMany({\r\n    where: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n    },\r\n  });\r\n}\r\n", "import type { Restaurant } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\n\ntype TopRestaurantsByRatingType = {\n  take?: number;\n};\n\ntype RestaurantsByCountryIdAndSlugType = {\n  countryId?: string;\n  slug?: string;\n};\n\nexport async function getRestaurantsList() {\n  return prisma.restaurant.findMany({\n    include: {\n      countryType: {\n        select: {\n          country: true,\n          type: true,\n        },\n      },\n      images: {\n        select: {\n          url: true,\n        },\n      },\n    },\n  });\n}\n\nexport async function getRestaurantsById(id: string) {\n  return prisma.restaurant.findUnique({\n    where: { id },\n    include: {\n      images: {\n        select: {\n          url: true,\n        },\n      },\n    },\n  });\n}\n\n// const TopRestaurantsByRatingSelect = {\n//   id: true,\n//   slug: true,\n//   nameVie: true,\n//   descriptionVie: true,\n//   addressVie: true,\n//   nameKor: true,\n//   descriptionKor: true,\n//   addressKor: true,\n//   nameEng: true,\n//   descriptionEng: true,\n//   addressEng: true,\n//   rating: true,\n//   openingTime: true,\n//   closingTime: true,\n//   countryId: true,\n//   typeId: true,\n//   countryType: {\n//     select: {\n//       country: true,\n//       type: true,\n//     },\n//   },\n//   images: {\n//     select: {\n//       url: true,\n//     }\n//   }\n// }\nexport async function getTopRestaurantsByRating({\n  take = 10,\n}: TopRestaurantsByRatingType) {\n  return prisma.restaurant.findMany({\n    take,\n    orderBy: {\n      favorites: {\n        _count: \"desc\",\n      },\n    },\n    include: {\n      countryType: {\n        select: {\n          country: true,\n          type: true,\n        },\n      },\n      images: {\n        select: {\n          url: true,\n        },\n      },\n    },\n  });\n}\n\nexport async function getRestaurantsByCountryIdAndSlug({\n  countryId = \"1\",\n  slug,\n}: RestaurantsByCountryIdAndSlugType) {\n  return prisma.restaurant.findMany({\n    where: {\n      countryId: countryId,\n      countryType: {\n        type: {\n          slug,\n        },\n      },\n    },\n    include: {\n      images: {\n        select: {\n          url: true,\n        },\n      },\n    },\n  });\n}\n\nexport async function getRestaurantsFavoriteById(userId: string) {\n  const favoriteRestaurants = await prisma.favorite.findMany({\n    where: { userId },\n    include: {\n      restaurant: {\n        include: {\n          countryType: {\n            include: {\n              country: true,\n              type: true,\n            },\n          },\n          images: true,\n        },\n      },\n    },\n  });\n\n  return favoriteRestaurants.map((favorite) => ({\n    restaurant: favorite.restaurant,\n    countrySlug: favorite.restaurant.countryType.country.slug,\n    typeSlug: favorite.restaurant.countryType.type.slug,\n    images: favorite.restaurant.images,\n  }));\n}\n\nexport async function increaseRestaurantRating(restaurantId: string) {\n  return prisma.restaurant.update({\n    where: { id: restaurantId },\n    data: {\n      rating: {\n        increment: 1,\n      },\n    },\n  });\n}\n\nexport async function decreaseRestaurantRating(restaurantId: string) {\n  return prisma.restaurant.update({\n    where: { id: restaurantId },\n    data: {\n      rating: {\n        decrement: 1,\n      },\n    },\n  });\n}\n\nexport async function deleteRestaurantById(restaurantId: string) {\n  return prisma.restaurant.delete({\n    where: { id: restaurantId },\n  });\n}\n\nexport async function createRestaurant(data: Restaurant) {\n  return prisma.restaurant.create({\n    data: {\n      nameVie: data.nameVie,\n      descriptionVie: data.descriptionVie,\n      addressVie: data.addressVie,\n      nameKor: data.nameKor,\n      descriptionKor: data.descriptionKor,\n      addressKor: data.addressKor,\n      rating: data.rating,\n      nameEng: data.nameEng,\n      descriptionEng: data.descriptionEng,\n      addressEng: data.addressEng,\n      openingTime: data.openingTime,\n      closingTime: data.closingTime,\n      direct: data.direct,\n      priceLow: data.priceLow,\n      priceHigh: data.priceHigh,\n      countryId: data.countryId,\n      typeId: data.typeId,\n    },\n  });\n}\n\nexport async function updateRestaurant(data: Restaurant) {\n  return prisma.restaurant.update({\n    where: { id: data.id },\n    data: {\n      nameVie: data.nameVie,\n      descriptionVie: data.descriptionVie,\n      addressVie: data.addressVie,\n      nameKor: data.nameKor,\n      descriptionKor: data.descriptionKor,\n      addressKor: data.addressKor,\n      nameEng: data.nameEng,\n      descriptionEng: data.descriptionEng,\n      addressEng: data.addressEng,\n      openingTime: data.openingTime,\n      closingTime: data.closingTime,\n      direct: data.direct,\n      rating: data.rating,\n      priceLow: data.priceLow,\n      priceHigh: data.priceHigh,\n      countryId: data.countryId,\n      typeId: data.typeId,\n    },\n  });\n}\n", "import { prisma } from \"~/db.server\";\r\n\r\nexport async function getValueRating(userId: string, restaurantId: string) {\r\n  const ratingData = await prisma.rating.findFirst({\r\n    where: {\r\n      userId,\r\n      restaurantId,\r\n    },\r\n  });\r\n  return ratingData?.ratingValue;\r\n}\r\n\r\nexport async function updateRatingValue(\r\n  userId: string,\r\n  restaurantId: string,\r\n  ratingValue: number\r\n) {\r\n  return prisma.rating.updateMany({\r\n    where: { userId, restaurantId },\r\n    data: {\r\n      ratingValue: ratingValue,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function addRatingValue(\r\n  userId: string,\r\n  restaurantId: string,\r\n  ratingValue: number\r\n) {\r\n  return prisma.rating.create({\r\n    data: {\r\n      userId: userId,\r\n      restaurantId: restaurantId,\r\n      ratingValue: ratingValue,\r\n    },\r\n  });\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { ClockIcon } from \"~/icons/ClockIcon\";\r\n// import { LikeIcon } from \"~/icons/LikeIcon\";\r\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\r\nimport { MoneyIcon } from \"~/icons/MoneyIcon\";\r\n\r\ntype RestaurantInforType = {\r\n  url?: string;\r\n  name: string;\r\n  address: string;\r\n  open: string | null;\r\n  close: string | null;\r\n  rating: number;\r\n  priceLow?: number;\r\n  priceHigh?: number;\r\n  images?: string;\r\n  language: Language;\r\n  link?: string;\r\n};\r\n\r\nexport const RestaurantInfor = ({\r\n  url,\r\n  name,\r\n  address,\r\n  open,\r\n  close,\r\n  rating,\r\n  priceLow,\r\n  priceHigh,\r\n  images,\r\n  language,\r\n  link,\r\n}: RestaurantInforType) =>\r\n  !url ? (\r\n    <a href={`${link}`} className=\"\">\r\n      <div\r\n        className=\"relative mb-[80px] w-full h-[200px] rounded-2xl bg-cover bg-center bg-no-repeat md:h-[240px] lg:mb-[60px]\"\r\n        style={{\r\n          backgroundImage: `url(${images}`,\r\n        }}\r\n      >\r\n        <div className=\"absolute bg-white left-3 right-3 bottom-[-60px] p-3 rounded-2xl\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <img\r\n              src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\r\n              alt=\"Restaurant\"\r\n              className=\"w-6 h-6\"\r\n            />\r\n            <div className=\"ml-2 flex-1\">\r\n              <p className=\"uppercase text-xs font-bold\">{`${\r\n                lang.restaurant[`restaurant${language}`]\r\n              }`}</p>\r\n              <h3 className=\"font-bold\">{name}</h3>\r\n            </div>\r\n            {/* <span className=\"flex items-center text-sm\">\r\n              <span className=\"text-[#1ec28b] mr-1\">\r\n                <LikeIcon />\r\n              </span>\r\n              <span>{rating}</span>\r\n            </span> */}\r\n          </div>\r\n          <span className=\"flex items-center text-sm mb-1\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <MapPinIcon />\r\n            </span>\r\n            <span>{address}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-sm mb-1 font-semibold text-[13px]\">\r\n            <span className=\"mr-1\">\r\n              <MoneyIcon />\r\n            </span>\r\n            <span>{`${priceLow ? `\u20A9${priceLow}` : \"\"} ${\r\n              priceHigh ? `- \u20A9${priceHigh}` : \"\"\r\n            }`}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-xs font-semibold\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <ClockIcon />\r\n            </span>\r\n            <span>{`${lang.open[`open${language}`]}: ${open} - ${\r\n              lang.close[`close${language}`]\r\n            }: ${close}`}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  ) : (\r\n    <Link to={url} className=\"\">\r\n      <div\r\n        className=\"relative mb-[80px] w-full h-[200px] rounded-2xl bg-cover bg-center bg-no-repeat md:h-[240px] lg:mb-[60px]\"\r\n        style={{\r\n          backgroundImage: `url(${images}`,\r\n        }}\r\n      >\r\n        <div className=\"absolute bg-white left-3 right-3 bottom-[-60px] p-3 rounded-2xl\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <img\r\n              src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\r\n              alt=\"Restaurant\"\r\n              className=\"w-6 h-6\"\r\n            />\r\n            <div className=\"ml-2 flex-1\">\r\n              <p className=\"uppercase text-xs font-bold\">{`${\r\n                lang.restaurant[`restaurant${language}`]\r\n              }`}</p>\r\n              <h3 className=\"font-bold\">{name}</h3>\r\n            </div>\r\n            {/* <span className=\"flex items-center text-sm\">\r\n              <span className=\"text-[#1ec28b] mr-1\">\r\n                <LikeIcon />\r\n              </span>\r\n              <span>{rating}</span>\r\n            </span> */}\r\n          </div>\r\n          <span className=\"flex items-center text-sm mb-1\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <MapPinIcon />\r\n            </span>\r\n            <span>{address}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-sm mb-1 font-semibold text-[13px]\">\r\n            <span className=\"mr-1\">\r\n              <MoneyIcon />\r\n            </span>\r\n            <span>{`${priceLow ? `\u20A9${priceLow}` : \"\"} ${\r\n              priceHigh ? `- \u20A9${priceHigh}` : \"\"\r\n            }`}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-xs font-semibold\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <ClockIcon />\r\n            </span>\r\n            <span>{`${lang.open[`open${language}`]}: ${open} - ${\r\n              lang.close[`close${language}`]\r\n            }: ${close}`}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n", "type RestaurantSlugType = {\r\n  id: string;\r\n  countrySlug: string;\r\n  typeSlug: string;\r\n};\r\n\r\nexport const createRestaurantSlug = ({\r\n  countrySlug,\r\n  typeSlug,\r\n  id,\r\n}: RestaurantSlugType) => {\r\n  return `/${countrySlug}/${typeSlug}/${id}`;\r\n};\r\n", "import type { Image } from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useNavigation } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\n// Models\r\n\r\n// Components\r\nimport { ActionButtons } from \"~/components/ActionButtons\";\r\nimport { FormInput } from \"~/components/FormInput\";\r\nimport {\r\n  createImage,\r\n  deleteImage,\r\n  getImageById,\r\n  updateImage,\r\n} from \"~/models/images.server\";\r\nimport { getRestaurantsById } from \"~/models/restaurants.server\";\r\n\r\nexport const loader = async ({ params, request }: LoaderArgs) => {\r\n  invariant(params.id, \"id not found\");\r\n  const image = await getImageById(params.id);\r\n\r\n  if (params.id !== \"new\" && !image) {\r\n    throw new Response(\"Not Found\", { status: 404 });\r\n  }\r\n\r\n  if (params.id === \"new\") {\r\n    return json({ image });\r\n  }\r\n\r\n  return json({\r\n    image,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  invariant(params.id, \"id not found\");\r\n  invariant(params.restId, \"id not found\");\r\n\r\n  const restaurant = await getRestaurantsById(params.restId);\r\n\r\n  const formData = await request.formData();\r\n  const action = formData.get(\"_action\");\r\n  const url = formData.get(\"url\");\r\n\r\n  const defaultErrors = {\r\n    url: null,\r\n  };\r\n\r\n  if (typeof url !== \"string\" || url.length === 0) {\r\n    return json(\r\n      { errors: { ...defaultErrors, type: \"Symbol is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  // Handle action\r\n  if (action === \"delete\") {\r\n    const currentImage = await getImageById(params.id);\r\n\r\n    if (currentImage) {\r\n      await deleteImage(params.id);\r\n    }\r\n\r\n    return redirect(`/admin/images/${restaurant?.id}`);\r\n  }\r\n\r\n  // Prepare data\r\n  let imageSubmit;\r\n  const dataSubmit = {\r\n    url,\r\n    restaurantId: restaurant?.id,\r\n  };\r\n\r\n  if (params.id === \"new\") {\r\n    imageSubmit = await createImage(dataSubmit as Image);\r\n  } else {\r\n    imageSubmit = await updateImage({\r\n      ...dataSubmit,\r\n      id: params.id,\r\n    });\r\n  }\r\n\r\n  return redirect(`/admin/images/${restaurant?.id}/${imageSubmit.id}`);\r\n};\r\n\r\nexport default function AdminSymbolDetailPage() {\r\n  const { image } = useLoaderData<typeof loader>();\r\n  const navigation = useNavigation();\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  const isNewItem = !image;\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col max-h-[100%] p-4\">\r\n      <Form method=\"post\" className=\"w-full space-y-6\" key={image?.id ?? \"new\"}>\r\n        <div className=\"\">\r\n          {/* Left Column */}\r\n          <div className=\"\">\r\n            {/* Name */}\r\n            <FormInput\r\n              name=\"url\"\r\n              label=\"\u1EA2nh\"\r\n              placeholder=\"link \u1EA3nh\"\r\n              defaultValue={image?.url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <ActionButtons isNewItem={isNewItem} isSubmitting={isSubmitting} />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ReactNode } from \"react\";\r\n\r\ntype ButtonProps = {\r\n  children: ReactNode;\r\n  startIcon?: ReactNode;\r\n  endIcon?: ReactNode;\r\n  type?: 'button' | 'submit';\r\n  color?: 'outline' | 'primary' | 'secondary'| 'success' | 'error' | 'info' | 'warning';\r\n  customClass?: string;\r\n  name?: string;\r\n  value?: string;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n};\r\n\r\nexport const Button = ({\r\n  children,\r\n  startIcon,\r\n  endIcon,\r\n  type = 'button',\r\n  color = 'primary',\r\n  customClass,\r\n  name,\r\n  value,\r\n  disabled,\r\n  onClick,\r\n}: ButtonProps) => {\r\n  let baseClass = 'flex items-center rounded p-2';\r\n  let stateClass = '';\r\n\r\n  switch (color) {\r\n    case 'primary':\r\n      stateClass = 'bg-blue-500 text-white hover:bg-blue-600 disabled:bg-blue-300';\r\n      break;\r\n    case 'secondary':\r\n      stateClass = 'bg-gray-400 text-white hover:bg-gray-500 disabled:bg-gray-300';\r\n      break;\r\n    case 'success':\r\n      stateClass = 'bg-green-600 text-white hover:bg-green-700 disabled:bg-green-400';\r\n      break;\r\n    case 'warning':\r\n      stateClass = 'bg-amber-400 text-black hover:bg-amber-500 disabled:bg-amber-300';\r\n      break;\r\n    case 'error':\r\n      stateClass = 'bg-rose-500 text-white hover:bg-rose-600 disabled:bg-rose-300';\r\n      break;\r\n    // Outline styles\r\n    case 'outline':\r\n      stateClass = 'border border-gray-200 dark:border-gray-700 hover:bg-gray-100 hover:dark:bg-gray-800 disabled:opacity-40';\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (stateClass) {\r\n    baseClass += ` ${stateClass}`;\r\n  }\r\n\r\n  if (customClass) {\r\n    baseClass += ` ${customClass}`;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      className={baseClass}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n    >\r\n      {startIcon && <span className=\"mr-2\">{startIcon}</span>}\r\n      {children}\r\n      {endIcon && <span className=\"ml-r\">{endIcon}</span>}\r\n    </button>\r\n  );\r\n};\r\n", "export const PlusIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\r\n  </svg>\r\n);\r\n", "export const CheckIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\r\n  </svg>\r\n);\r\n", "export const TrashIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n  </svg>\r\n);\r\n", "// Components\r\nimport { Button } from \"./Button\";\r\nimport { PlusIcon } from \"~/icons/PlusIcon\";\r\nimport { CheckIcon } from \"~/icons/CheckIcon\";\r\nimport { TrashIcon } from \"~/icons/TrashIcon\";\r\n\r\ntype ActionButtonsProps = {\r\n  isNewItem: boolean;\r\n  isSubmitting: boolean;\r\n};\r\n\r\n/**\r\n * ActionButtons on Admin Detail page\r\n */\r\nexport const ActionButtons = ({\r\n  isNewItem,\r\n  isSubmitting,\r\n}: ActionButtonsProps) => (\r\n  <div className=\"flex justify-between\">\r\n    {isNewItem ? <div /> : (\r\n      <Button\r\n        color=\"error\"\r\n        type=\"submit\"\r\n        name=\"_action\"\r\n        value=\"delete\"\r\n        disabled={isSubmitting}\r\n        startIcon={<TrashIcon />}\r\n      >\r\n        {isSubmitting ? 'Deleting...' : 'Delete'}\r\n      </Button>\r\n    )}\r\n    <Button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      name=\"_action\"\r\n      value={isNewItem ? \"add\" : \"update\"}\r\n      disabled={isSubmitting}\r\n      startIcon={isNewItem ? <PlusIcon /> : <CheckIcon />}\r\n    >\r\n      {isNewItem ? (isSubmitting ? 'Creating...' : 'Create'): null}\r\n      {isNewItem ? null : (isSubmitting ? 'Updating...' : 'Update')}\r\n    </Button>\r\n  </div>\r\n);\r\n", "import type { FocusEvent } from \"react\";\r\nimport { useEffect, useState, forwardRef } from \"react\";\r\n\r\ntype FormInputProps = {\r\n  name: string;\r\n  type?: 'text' | 'number' | 'email' | 'date' | 'password';\r\n  error?: string | null | undefined;\r\n  label?: string;\r\n  required?: boolean;\r\n  defaultValue?: string;\r\n  min?: number;\r\n  max?: number;\r\n  step?: string | number | undefined;\r\n  placeholder?: string;\r\n  wrapperClass?: string;\r\n  onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst FormInput = forwardRef(({\r\n  name,\r\n  error,\r\n  type = 'text',\r\n  label = 'Label',\r\n  required = false,\r\n  defaultValue = '',\r\n  min,\r\n  max,\r\n  step,\r\n  placeholder,\r\n  wrapperClass,\r\n  onBlur,\r\n}: FormInputProps, ref: any) => {\r\n  const [warningMsg, setWarningMsg] = useState('');\r\n\r\n  // TODO: Make it more flexible\r\n  useEffect(() => {\r\n    if (name === 'seoTitle') {\r\n      const MAX_LEN = 70;\r\n      if (defaultValue.length > MAX_LEN) {\r\n        setWarningMsg(`Too long, max length should be ${MAX_LEN}`);\r\n      }\r\n    }\r\n  }, [defaultValue, name]);\r\n\r\n  return (\r\n  <div className={wrapperClass ?? ''}>\r\n    <label\r\n      htmlFor={name}\r\n      className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\r\n    >\r\n      {label}\r\n    </label>\r\n    <div className=\"mt-1\">\r\n      <input\r\n        ref={ref}\r\n        defaultValue={defaultValue}\r\n        onBlur={onBlur}\r\n        required={required}\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        autoComplete={name}\r\n        aria-invalid={error ? true : undefined}\r\n        aria-describedby={`${name}-error`}\r\n        className={`w-full rounded border border-gray-300 px-2 py-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white ${warningMsg ? 'border-amber-400' : ''}`}\r\n      />\r\n      {warningMsg && (\r\n        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3\">\r\n          <span className=\"block w-[20px] h-[20px] text-center text-black rounded-full bg-amber-400 leading-[20px]\">!</span>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"pt-1 text-red-700\" id={`${name}-error`}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n    {warningMsg && (\r\n      <div className=\"pt-1 text-xs text-amber-500\">\r\n        {warningMsg}\r\n      </div>\r\n    )}\r\n  </div>\r\n)\r\n});\r\n\r\nFormInput.displayName = 'FormInput';\r\n\r\nexport { FormInput };\r\n", "import { prisma } from \"~/db.server\";\r\n\r\nexport async function getImageById(id: string) {\r\n  return prisma.image.findUnique({\r\n    where: {\r\n      id,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function getListImagesByRestaurantId(restaurantId: string) {\r\n  return prisma.image.findMany({\r\n    where: {\r\n      restaurantId,\r\n    },\r\n    orderBy: {\r\n      createdAt: \"asc\",\r\n    },\r\n  });\r\n}\r\n\r\nexport async function createImage({\r\n  restaurantId,\r\n  url,\r\n}: {\r\n  restaurantId: string;\r\n  url: string;\r\n}) {\r\n  return prisma.image.create({\r\n    data: {\r\n      restaurantId,\r\n      url,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function updateImage({ id, url }: { id: string; url: string }) {\r\n  return prisma.image.update({\r\n    where: {\r\n      id,\r\n    },\r\n    data: {\r\n      url,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteImage(id: string) {\r\n  return prisma.image.delete({\r\n    where: {\r\n      id,\r\n    },\r\n  });\r\n}\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport type { LoaderArgs, ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useSubmit } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport SliderImages from \"~/components/SlideImages\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\nimport { ClockIcon } from \"~/icons/ClockIcon\";\r\nimport { HeartIcon, HeartIconUsed } from \"~/icons/HeartIcon\";\r\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\r\nimport { MoneyIcon } from \"~/icons/MoneyIcon\";\r\nimport {\r\n  addToFavorites,\r\n  checkRestaurantIsFavorited,\r\n  checkRestaurantIsRatings,\r\n  removeFromFavorites,\r\n} from \"~/models/favorites.server\";\r\nimport {\r\n  getRestaurantsById,\r\n  getRestaurantsList,\r\n} from \"~/models/restaurants.server\";\r\nimport {\r\n  getValueRating,\r\n  addRatingValue,\r\n  updateRatingValue,\r\n} from \"~/models/rating.server\";\r\n\r\nimport { getUser } from \"~/session.server\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RestaurantInfor } from \"~/components/RestaurantInfor\";\r\nimport { createRestaurantSlug } from \"~/helpers/slug\";\r\n\r\nexport const loader = async ({ request, params }: LoaderArgs) => {\r\n  const user = await getUser(request);\r\n\r\n  const slug = params.restaurant;\r\n\r\n  let restaurant;\r\n  if (slug?.length) {\r\n    restaurant = await getRestaurantsById(slug);\r\n  } else {\r\n    throw new Response(\"\", { status: 404 });\r\n  }\r\n\r\n  if (!restaurant) {\r\n    return redirect(\"/404\");\r\n  }\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  const restaurants = await getRestaurantsList();\r\n\r\n  let isFavorited;\r\n  let isRating;\r\n  let value_rating;\r\n  if (user) {\r\n    // Check if the restaurant is already favorited by the user\r\n    isFavorited = await checkRestaurantIsFavorited({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n    isRating = await checkRestaurantIsRatings({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n    // take rating value by user and restaurant from rating table\r\n    value_rating = await getValueRating(user.id, restaurant.id);\r\n  }\r\n\r\n  return json({\r\n    user,\r\n    language,\r\n    restaurant,\r\n    isFavorited,\r\n    isRating,\r\n    value_rating,\r\n    restaurants,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  invariant(params.restaurant, \"id not found\");\r\n  const user = await getUser(request);\r\n\r\n  const slug = params.restaurant;\r\n  const restaurant = await getRestaurantsById(slug);\r\n  if (!restaurant) {\r\n    return redirect(\"/404\");\r\n  }\r\n\r\n  const formData = await request.formData();\r\n  const rating = formData.get(\"rating\");\r\n  const favorite = formData.get(\"favorite\");\r\n\r\n  if (!user) return redirect(\"/login\");\r\n\r\n  if (favorite === \"on\") {\r\n    const isFavorite = await checkRestaurantIsFavorited({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n    if (!isFavorite) {\r\n      await addToFavorites({ userId: user.id, restaurantId: restaurant.id });\r\n    }\r\n  } else {\r\n    await removeFromFavorites({\r\n      userId: user.id,\r\n      restaurantId: restaurant.id,\r\n    });\r\n  }\r\n\r\n  const value_rating = await getValueRating(user.id, restaurant.id);\r\n\r\n  if (!value_rating && Number(rating) !== 0) {\r\n    await addRatingValue(user.id, restaurant.id, Number(rating) | 0);\r\n    return json({});\r\n  }\r\n\r\n  if (value_rating && Number(rating) !== 0) {\r\n    await updateRatingValue(user.id, restaurant.id, Number(rating) | 0);\r\n    return json({});\r\n  }\r\n  return json({});\r\n};\r\n\r\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\r\n  { title: `${data?.restaurant[`name${data.language}`]}` },\r\n  {\r\n    name: \"description\",\r\n    content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng H\u00E0n Qu\u1ED1c t\u1EA1i \u0110\u00E0 N\u1EB5ng\",\r\n  },\r\n];\r\n\r\nexport default function RestaurantKoreaPage() {\r\n  const { language, restaurant, isFavorited, value_rating, restaurants } =\r\n    useLoaderData<typeof loader>();\r\n  const submit = useSubmit();\r\n\r\n  const [data, setData] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:8080/content-based/${restaurant.nameVie}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => console.error(error));\r\n  }, [restaurant.nameVie]);\r\n  console.log(\"->>>>>>>>>>>>>>>>>>>>>>>>>\", data);\r\n\r\n  const predictRes = restaurants.filter((item) =>\r\n    data?.includes(item?.nameVie)\r\n  );\r\n\r\n  const [rating, setRating] = useState<number>(value_rating || 0);\r\n  const [hover, setHover] = useState<any>();\r\n\r\n  function handleChang(event: React.FormEvent<HTMLFormElement>) {\r\n    submit(event.currentTarget, { replace: true });\r\n  }\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    const dateTimeInput = document.getElementById(\r\n      \"dateTime\"\r\n    ) as HTMLInputElement;\r\n\r\n    if (!dateTimeInput.value) {\r\n      event.preventDefault(); // Ng\u0103n kh\u00F4ng cho submit form\r\n      dateTimeInput.focus(); // Focus l\u1EA1i v\u00E0o \u00F4 input\r\n      alert(`${lang.timeRequired[`timeRequired${language}`]}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative rounded-2xl overflow-hidden mt-4 lg:mt-0 lg:w-[70%] lg:pl-6 lg:overflow-y-auto\">\r\n      <Form method=\"post\" onChange={handleChang}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"favorite\"\r\n          defaultChecked={Boolean(isFavorited)}\r\n          className=\"absolute right-4 top-4 z-20 w-5 h-5 opacity-0 cursor-pointer\"\r\n        />\r\n        <span className=\"absolute right-4 top-4 z-10 w-10 h-10 bg-white rounded-full flex items-center justify-center\">\r\n          {isFavorited ? <HeartIconUsed /> : <HeartIcon />}\r\n        </span>\r\n        <div className=\"h-[200px] md:h-[240px] lg:h-[320px]\">\r\n          <SliderImages images={restaurant.images} />\r\n        </div>\r\n        <div className=\"p-3 rounded-2xl\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <img\r\n              src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\r\n              alt=\"Restaurant\"\r\n              className=\"w-6 h-6\"\r\n            />\r\n            <div className=\"ml-2 flex-1\">\r\n              <p className=\"uppercase text-xs font-bold text-gray-600\">{`${\r\n                lang.restaurant[`restaurant${language}`]\r\n              }`}</p>\r\n              <h3 className=\"font-bold\">{restaurant[`name${language}`]}</h3>\r\n            </div>\r\n            <span className=\"flex items-center text-sm\">\r\n              <div className=\"flex items-center relative\">\r\n                <input\r\n                  name=\"rating\"\r\n                  type=\"text\"\r\n                  className=\"invisible\"\r\n                  value={rating}\r\n                />\r\n\r\n                {[...Array(5)].map((star, index) => {\r\n                  const ratingValue = index + 1;\r\n                  return (\r\n                    <>\r\n                      <label key={index}>\r\n                        <button>\r\n                          <FaStar\r\n                            className={`star ${\r\n                              ratingValue <= (hover || rating)\r\n                                ? \"text-orange-500\"\r\n                                : \"text-gray-500\"\r\n                            } hover:text-orange-500`}\r\n                            size={20}\r\n                            onMouseEnter={() => setHover(ratingValue)}\r\n                            onMouseLeave={() => setHover(null)}\r\n                            onClick={(e: any) => {\r\n                              setRating(ratingValue);\r\n                            }}\r\n                          />\r\n                        </button>\r\n                      </label>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <span className=\"flex items-center text-sm mb-1\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <MapPinIcon />\r\n            </span>\r\n            <span>{restaurant[`address${language}`]}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-sm mb-1 font-semibold text-[13px]\">\r\n            <span className=\"mr-1\">\r\n              <MoneyIcon />\r\n            </span>\r\n            <span>{`${\r\n              restaurant.priceLow ? `\u20A9${restaurant.priceLow}` : \"\"\r\n            } ${\r\n              restaurant.priceHigh ? `- \u20A9${restaurant.priceHigh}` : \"\"\r\n            }`}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-xs font-semibold\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <ClockIcon />\r\n            </span>\r\n            <span>{`${lang.open[`open${language}`]}: ${\r\n              restaurant.openingTime\r\n            } - ${lang.close[`close${language}`]}: ${\r\n              restaurant.closingTime\r\n            }`}</span>\r\n          </span>\r\n        </div>\r\n      </Form>\r\n\r\n      <div className=\"py-4 px-2 bg-white rounded-xl md:inline-block\">\r\n        <h4 className=\"font-semibold text-sm text-gray-600 mb-1\">\r\n          {lang.addSchedule[`addSchedule${language}`]}\r\n        </h4>\r\n        <Form\r\n          method=\"post\"\r\n          action={`/schedule?new=${restaurant.id}`}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              type=\"datetime-local\"\r\n              id=\"dateTime\"\r\n              name=\"dateTime\"\r\n              className=\"inline-flex border text-sm p-2 rounded-xl outline-none focus:border-[#1ec28b]\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-[#1ec28b] rounded-xl ml-2 text-white text-xs uppercase font-bold py-2 px-4 hover:bg-[#0aae77]\"\r\n            >\r\n              {lang.save[`save${language}`]}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n\r\n      <div className=\"p-2\">\r\n        <div className=\"pt-2 border-t\">\r\n          <h4 className=\"font-bold mb-1\">\r\n            {lang.description[`description${language}`]}\r\n          </h4>\r\n          <p className=\"text-[15px] text-justify\">\r\n            {restaurant[`description${language}`]}\r\n          </p>\r\n        </div>\r\n        <a\r\n          href={restaurant.direct || \"\"}\r\n          title={restaurant[`name${language}`] || \"\"}\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          className=\"block p-3 my-4 text-center rounded-2xl bg-[#1ec28b] text-white uppercase font-bold lg:w-[40%] lg:ml-auto\"\r\n        >\r\n          {lang.direction[`direction${language}`]}\r\n        </a>\r\n      </div>\r\n\r\n      {predictRes?.length > 0 && (\r\n        <div>\r\n          <h4 className=\"text-2xl font-semibold\">Related restaurants</h4>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {predictRes?.map((restaurant) => (\r\n              <RestaurantInfor\r\n                key={restaurant.id}\r\n                link={createRestaurantSlug({\r\n                  countrySlug: restaurant?.countryType?.country?.slug,\r\n                  typeSlug: restaurant?.countryType?.type?.slug,\r\n                  id: restaurant.id,\r\n                })}\r\n                name={restaurant[`name${language}`]}\r\n                address={restaurant[`address${language}`]}\r\n                open={restaurant.openingTime}\r\n                priceLow={restaurant.priceLow || undefined}\r\n                priceHigh={restaurant.priceHigh || undefined}\r\n                close={restaurant.closingTime}\r\n                rating={restaurant.rating || 0}\r\n                images={restaurant.images[0]?.url || undefined}\r\n                language={language}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import { json, redirect, type LoaderArgs } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { RestaurantInfor } from \"~/components/RestaurantInfor\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\nimport { getRestaurantsByCountryIdAndSlug } from \"~/models/restaurants.server\";\r\nimport { getTypeByCountry } from \"~/models/type.server\";\r\nimport { getUser } from \"~/session.server\";\r\n\r\nexport const loader = async ({ request, params }: LoaderArgs) => {\r\n  const user = await getUser(request);\r\n\r\n  const slug = params.slug;\r\n  const types = await getTypeByCountry({}); //default 1 is VN\r\n  const category = types.find((it) => it.slug === slug);\r\n\r\n  let restaurants;\r\n  if (category) {\r\n    restaurants = await getRestaurantsByCountryIdAndSlug({\r\n      slug,\r\n    }); //default 1 is VN\r\n  } else {\r\n    return redirect(\"/404\");\r\n  }\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({ user, language, restaurants });\r\n};\r\n\r\nexport default function CategoryKoreaPage() {\r\n  const { language, restaurants } = useLoaderData<typeof loader>();\r\n\r\n  return (\r\n    <div className=\"lg:pl-6 lg:w-[70%] md:overflow-y-auto md:max-h-[100%]\">\r\n      <div className=\"mt-6 lg:mt-0 lg:grid lg:grid-cols-2 lg:gap-4\">\r\n        {restaurants.map((restaurant) => (\r\n          <RestaurantInfor\r\n            key={restaurant.id}\r\n            url={restaurant.id}\r\n            name={restaurant[`name${language}`]}\r\n            address={restaurant[`address${language}`]}\r\n            open={restaurant.openingTime}\r\n            priceLow={restaurant.priceLow || undefined}\r\n            priceHigh={restaurant.priceHigh || undefined}\r\n            close={restaurant.closingTime}\r\n            rating={restaurant.rating || 0}\r\n            images={restaurant.images[0]?.url || undefined}\r\n            language={language}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { prisma } from \"~/db.server\";\n\nexport async function getTypeList() {\n  return prisma.type.findMany();\n}\n\nexport async function getTypeBySlug(slug: string) {\n  return prisma.type.findUnique({\n    where: {\n      slug: slug,\n    },\n  });\n}\n\nexport async function getTypeById(id: string) {\n  return prisma.type.findUnique({\n    where: {\n      typeId: id,\n    },\n  });\n}\n\nexport async function getTypeByCountry({\n  countryId = \"1\",\n}: {\n  countryId?: string;\n}) {\n  return prisma.type.findMany({\n    where: { providers: { some: { countryId } } },\n  });\n}\n\nexport type TypeWithRestaurantCount = {\n  typeId: string;\n  nameVie: string;\n  nameKor: string;\n  nameEng: string;\n  restaurantCount: number;\n  slug: string;\n};\n\nexport async function getTypeWithRestaurantCount({\n  countryId = \"1\",\n}: {\n  countryId?: string;\n}) {\n  // L\u1EA5y th\u00F4ng tin c\u00E1c Type thu\u1ED9c countryId c\u1EE5 th\u1EC3\n  const typesWithRestaurantCount = await prisma.type.findMany({\n    where: { providers: { some: { countryId } } },\n    include: {\n      providers: {\n        where: {\n          countryId: countryId,\n        },\n        include: {\n          restaurants: true,\n        },\n      },\n    },\n  });\n\n  return typesWithRestaurantCount.map((type) => ({\n    ...type,\n    restaurantCount: type.providers.reduce(\n      (total, provider) => total + provider.restaurants.length,\n      0\n    ),\n  }));\n}\n\nexport async function deleteTypeBySlug(slug: string) {\n  return prisma.type.deleteMany({\n    where: {\n      slug,\n    },\n  });\n}\n\nexport type CreateType = {\n  typeId: string;\n  slug: string;\n  nameEng: string;\n  nameKor: string;\n  nameVie: string;\n};\nexport async function createType(dataSubmit: CreateType) {\n  return prisma.type.create({\n    data: {\n      typeId: dataSubmit.typeId,\n      slug: dataSubmit.slug,\n      nameEng: dataSubmit.nameEng,\n      nameKor: dataSubmit.nameKor,\n      nameVie: dataSubmit.nameVie,\n    },\n  });\n}\n\ntype UpdateType = {\n  typeId: string;\n  slug: string;\n  nameEng: string;\n  nameKor: string;\n  nameVie: string;\n};\n\nexport async function updateType(dataSubmit: UpdateType) {\n  return prisma.type.updateMany({\n    where: {\n      typeId: dataSubmit.typeId,\n    },\n    data: {\n      nameEng: dataSubmit.nameEng,\n      nameKor: dataSubmit.nameKor,\n      nameVie: dataSubmit.nameVie,\n    },\n  });\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport invariant from \"tiny-invariant\";\n\n// Components\nimport { ActionButtons } from \"~/components/ActionButtons\";\nimport { FormInput } from \"~/components/FormInput\";\nimport {\n  createType,\n  deleteTypeBySlug,\n  getTypeById,\n  getTypeBySlug,\n  updateType,\n} from \"~/models/type.server\";\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  invariant(params.slug, \"id not found\");\n\n  if (params.slug === \"new\") {\n    return json({ type: null });\n  }\n\n  const type = await getTypeBySlug(params.slug);\n\n  if (!type) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  return json({\n    type,\n  });\n};\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  invariant(params.slug, \"id not found\");\n\n  const formData = await request.formData();\n  const action = formData.get(\"_action\");\n  const typeId = formData.get(\"typeId\");\n  const slug = formData.get(\"slug\");\n  const nameEng = formData.get(\"nameEng\")?.toString();\n  const nameKor = formData.get(\"nameKor\")?.toString();\n  const nameVie = formData.get(\"nameVie\")?.toString();\n\n  const defaultErrors = {\n    typeId: null,\n    slug: null,\n    nameEng: null,\n    nameKor: null,\n    nameVie: null,\n  };\n\n  if (typeof typeId !== \"string\" || typeId.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, typeId: \"TypeId is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof slug !== \"string\" || slug.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, slug: \"Slug is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof nameEng !== \"string\" || nameEng.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameEng: \"Name Eng is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof nameKor !== \"string\" || nameKor.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameKor: \"Name Kor is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof nameVie !== \"string\" || nameVie.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameVie: \"Name Vie is required\" } },\n      { status: 400 }\n    );\n  }\n\n  // Handle action\n  if (action === \"delete\") {\n    await deleteTypeBySlug(params.slug);\n    return redirect(\"/admin/category\");\n  }\n\n  // Prepare data\n  const dataSubmit = {\n    typeId,\n    slug,\n    nameEng,\n    nameKor,\n    nameVie,\n  };\n\n  if (params.slug === \"new\") {\n    const existingtypeSlug = await getTypeBySlug(slug);\n\n    if (existingtypeSlug) {\n      return json(\n        {\n          errors: {\n            ...defaultErrors,\n            slug: \"A Type already exists with this slug\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    const existingtypeId = await getTypeById(typeId);\n\n    if (existingtypeId) {\n      return json(\n        {\n          errors: {\n            ...defaultErrors,\n            typeId: \"A Type ID already exists\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    await createType(dataSubmit);\n  } else {\n    console.log(dataSubmit);\n\n    await updateType({\n      ...dataSubmit,\n      typeId: typeId,\n    });\n  }\n\n  return redirect(`/admin/category`);\n};\n\nexport default function AdmintypeDetailPage() {\n  const { type } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const isNewItem = !type;\n\n  const idRef = useRef<HTMLInputElement>(null);\n  const slugRef = useRef<HTMLInputElement>(null);\n  const nameEngRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.typeId) {\n      idRef.current?.focus();\n    } else if (actionData?.errors?.slug) {\n      slugRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"min-h-full flex flex-col\">\n      <Form\n        method=\"post\"\n        className=\"w-full space-y-6\"\n        key={type?.slug ?? \"new\"}\n      >\n        <div className=\"grid grid-cols-2 gap-4\">\n          {/* Left Column */}\n          <div className=\"grid gap-4 content-start\">\n            {/* Name */}\n            <FormInput\n              name=\"typeId\"\n              ref={idRef}\n              required={true}\n              label=\"Type ID\"\n              placeholder=\"Type ID\"\n              defaultValue={type?.typeId}\n              error={actionData?.errors?.typeId}\n            />\n\n            <div className=\"grid grid-cols-[1fr_60px] gap-2\">\n              {/* Slug */}\n              <FormInput\n                name=\"slug\"\n                ref={slugRef}\n                required={true}\n                label=\"Category Slug\"\n                placeholder=\"Category Slug\"\n                defaultValue={type?.slug}\n                error={actionData?.errors?.slug}\n              />\n            </div>\n          </div>\n\n          {/* Right Column */}\n          <div className=\"grid gap-4 content-start\">\n            {/* SEO Title */}\n            <FormInput\n              name=\"nameEng\"\n              label=\"Name English\"\n              required={true}\n              placeholder=\"Type name English\"\n              ref={nameEngRef}\n              defaultValue={type?.nameEng?.toString()}\n            />\n            {/* SEO Title */}\n            <FormInput\n              name=\"nameKor\"\n              label=\"Name Korea\"\n              required={true}\n              placeholder=\"Type name of Korea\"\n              ref={nameEngRef}\n              defaultValue={type?.nameKor?.toString()}\n            />\n            {/* SEO Title */}\n            <FormInput\n              name=\"nameVie\"\n              label=\"Name VietNam\"\n              required={true}\n              placeholder=\"Type name of VietNam\"\n              ref={nameEngRef}\n              defaultValue={type?.nameVie?.toString()}\n            />\n          </div>\n        </div>\n\n        <ActionButtons isNewItem={isNewItem} isSubmitting={isSubmitting} />\n      </Form>\n    </div>\n  );\n}\n", "import type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { PlusIcon } from \"~/icons/PlusIcon\";\r\nimport { getListImagesByRestaurantId } from \"~/models/images.server\";\r\n\r\n// Models\r\n\r\n// Helpers\r\nimport { requireAdminUser } from \"~/session.server\";\r\n\r\n// Components\r\n\r\nexport const loader = async ({ request, params }: LoaderArgs) => {\r\n  await requireAdminUser(request);\r\n  invariant(params.restId, \"id not found\");\r\n\r\n  const imagesList = await getListImagesByRestaurantId(params.restId);\r\n\r\n  return json({ imagesList });\r\n};\r\n\r\nexport const meta: V2_MetaFunction = () => [{ title: \"Sector Management\" }];\r\n\r\nexport default function AdminRestaurantsListPage() {\r\n  const { imagesList } = useLoaderData<typeof loader>();\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"grid grid-cols-[200px_1fr] gap-6\">\r\n        <div>\r\n          <Link\r\n            className=\"flex block mb-4 rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-400 hover:text-white hover:no-underline\"\r\n            to={\"new\"}\r\n          >\r\n            <PlusIcon />\r\n            <span className=\"ml-2\">Add New</span>\r\n          </Link>\r\n          <Form action=\"/admin/restaurant\" method=\"get\">\r\n            <input\r\n              id=\"query\"\r\n              name=\"query\"\r\n              type=\"text\"\r\n              className=\"w-full border border-gray-200 hover:border-gray-300 rounded-lg mb-4 px-4 py-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              placeholder=\"Search...\"\r\n            />\r\n          </Form>\r\n          {imagesList.length === 0 ? (\r\n            <div className=\"text-slate-400 text-center\">No item yet</div>\r\n          ) : (\r\n            <div>\r\n              <ul>\r\n                {imagesList.map(({ id }, idx) => (\r\n                  <li key={id}>\r\n                    <NavLink\r\n                      to={id}\r\n                      className={({ isActive }) =>\r\n                        `block py-2 hover:text-sky-400 ${\r\n                          isActive ? \"text-sky-400\" : \"dark:text-white\"\r\n                        }`\r\n                      }\r\n                    >\r\n                      {idx + 1}. {id}\r\n                    </NavLink>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* TODO: Load more */}\r\n        </div>\r\n        <div>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { Restaurant } from \"@prisma/client\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport invariant from \"tiny-invariant\";\n\n// Models\n\n// Components\nimport { ActionButtons } from \"~/components/ActionButtons\";\nimport { FormInput } from \"~/components/FormInput\";\nimport {\n  countProviderById,\n  createProvider,\n} from \"~/models/provider.server\";\nimport {\n  createRestaurant,\n  deleteRestaurantById,\n  getRestaurantsById,\n  updateRestaurant,\n} from \"~/models/restaurants.server\";\nimport { getTypeList } from \"~/models/type.server\";\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  invariant(params.id, \"id not found\");\n  const restaurant = await getRestaurantsById(params.id);\n\n  if (params.id !== \"new\" && !restaurant) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  const typeList = await getTypeList();\n\n  if (params.id === \"new\") {\n    return json({ typeList, restaurant });\n  }\n\n  return json({\n    restaurant,\n    typeList,\n  });\n};\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  invariant(params.id, \"id not found\");\n\n  const formData = await request.formData();\n  const action = formData.get(\"_action\");\n  const nameVie = formData.get(\"nameVie\");\n  const nameKor = formData.get(\"nameKor\");\n  const nameEng = formData.get(\"nameEng\");\n  const addressVie = formData.get(\"addressVie\");\n  const addressKor = formData.get(\"addressKor\");\n  const addressEng = formData.get(\"addressEng\");\n  const typeId = formData.get(\"typeId\");\n  const countryId = formData.get(\"countryId\");\n  const rating = formData.get(\"rating\")?.toString() ?? null;\n  const openingTime = formData.get(\"openingTime\")?.toString() ?? null;\n  const closingTime = formData.get(\"closingTime\")?.toString() ?? null;\n  const direct = formData.get(\"direct\")?.toString() ?? null;\n  const priceLow = formData.get(\"priceLow\")?.toString() ?? null;\n  const priceHigh = formData.get(\"priceHigh\")?.toString() ?? null;\n  const descriptionVie = formData.get(\"descriptionVie\")?.toString() ?? null;\n  const descriptionKor = formData.get(\"descriptionKor\")?.toString() ?? null;\n  const descriptionEng = formData.get(\"descriptionEng\")?.toString() ?? null;\n\n  const defaultErrors = {\n    nameVie: null,\n    nameKor: null,\n    nameEng: null,\n    addressVie: null,\n    addressKor: null,\n    addressEng: null,\n    typeId: null,\n    countryId: null,\n  };\n\n  if (typeof nameVie !== \"string\" || nameVie.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameVie: \"Name is required\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof nameKor !== \"string\" || nameKor.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameKor: \"Name is required\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof nameEng !== \"string\" || nameEng.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, nameEng: \"Name is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof addressVie !== \"string\" || addressVie.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, addressVie: \"address is required\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof addressKor !== \"string\" || addressKor.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, addressKor: \"address is required\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof addressEng !== \"string\" || addressEng.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, addressEng: \"Name is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof typeId !== \"string\" || typeId.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, type: \"Symbol is required\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof countryId !== \"string\" || countryId.length === 0) {\n    return json(\n      { errors: { ...defaultErrors, country: \"Sector is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if ((await countProviderById({ countryId, typeId })) === 0) {\n    await createProvider({ countryId, typeId });\n  }\n\n  // Handle action\n  if (action === \"delete\") {\n    const currentRestaurant = await getRestaurantsById(params.id);\n\n    if (currentRestaurant) {\n      await deleteRestaurantById(params.id);\n    }\n\n    return redirect(\"/admin/restaurant\");\n  }\n\n  // Prepare data\n  let restaurantSubmit;\n  const dataSubmit = {\n    nameKor,\n    nameVie,\n    nameEng,\n    addressKor,\n    addressVie,\n    addressEng,\n    typeId,\n    countryId,\n    descriptionVie,\n    descriptionEng,\n    descriptionKor,\n    rating: Number(rating),\n    openingTime,\n    closingTime,\n    direct,\n    priceLow: Number(priceLow),\n    priceHigh: Number(priceHigh),\n  };\n\n  if (params.id === \"new\") {\n    restaurantSubmit = await createRestaurant(dataSubmit as Restaurant);\n  } else {\n    restaurantSubmit = await updateRestaurant({\n      ...(dataSubmit as Restaurant),\n      id: params.id,\n    });\n  }\n\n  return redirect(`/admin/restaurant/${restaurantSubmit.id}`);\n};\n\nexport default function AdminSymbolDetailPage() {\n  const { typeList, restaurant } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const isNewItem = !restaurant;\n\n  const nameVieRef = useRef<HTMLInputElement>(null);\n  const nameKorRef = useRef<HTMLInputElement>(null);\n  const nameEngRef = useRef<HTMLInputElement>(null);\n  const addressVieRef = useRef<HTMLInputElement>(null);\n  const addressKorRef = useRef<HTMLInputElement>(null);\n  const addressEngRef = useRef<HTMLInputElement>(null);\n  const typeIdRef = useRef<HTMLSelectElement>(null);\n  const countryIdRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.nameVie) {\n      nameVieRef.current?.focus();\n    } else if (actionData?.errors?.nameKor) {\n      nameKorRef.current?.focus();\n    } else if (actionData?.errors?.nameEng) {\n      nameEngRef.current?.focus();\n    } else if (actionData?.errors?.addressVie) {\n      addressVieRef.current?.focus();\n    } else if (actionData?.errors?.addressKor) {\n      addressKorRef.current?.focus();\n    } else if (actionData?.errors?.addressEng) {\n      addressEngRef.current?.focus();\n    } else if (actionData?.errors?.typeId) {\n      typeIdRef.current?.focus();\n    } else if (actionData?.errors?.countryId) {\n      countryIdRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col max-h-[100%]\">\n      <Form\n        method=\"post\"\n        className=\"w-full space-y-6\"\n        key={restaurant?.id ?? \"new\"}\n      >\n        <div className=\"\">\n          {/* Left Column */}\n          <div className=\"\">\n            {/* Name */}\n            <FormInput\n              name=\"nameVie\"\n              ref={nameVieRef}\n              required={true}\n              label=\"T\u00EAn Vi\u1EC7t Nam\"\n              placeholder=\"M\u1EF3 Qu\u1EA3ng B\u00E0 Mua\"\n              defaultValue={restaurant?.nameVie}\n              error={actionData?.errors?.nameVie}\n            />\n            <FormInput\n              name=\"nameKor\"\n              ref={nameKorRef}\n              required={true}\n              label=\"T\u00EAn H\u00E0n Qu\u1ED1c\"\n              placeholder=\"Quang Ba Mua Shop \uB204\uB4E4\"\n              defaultValue={restaurant?.nameKor}\n              error={actionData?.errors?.nameKor}\n            />\n            <FormInput\n              name=\"nameEng\"\n              ref={nameEngRef}\n              required={true}\n              label=\"T\u00EAn Ti\u1EBFng Anh\"\n              placeholder=\"Quang Ba Mua Shop Noodles\"\n              defaultValue={restaurant?.nameEng}\n              error={actionData?.errors?.nameEng}\n            />\n            <div className=\"\">\n              {/* Sector */}\n              <div>\n                <label\n                  htmlFor=\"sectorId\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\n                >\n                  Qu\u1ED1c Gia\n                </label>\n                <div className=\"mt-1\">\n                  <select\n                    ref={countryIdRef}\n                    defaultValue={restaurant?.countryId}\n                    id=\"countryId\"\n                    required\n                    name=\"countryId\"\n                    aria-invalid={\n                      actionData?.errors?.countryId ? true : undefined\n                    }\n                    aria-describedby=\"sectorId-error\"\n                    className=\"w-full rounded border border-gray-300 px-2 pt-2 pb-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n                  >\n                    <option value=\"\" label=\"\" />\n                    <option value=\"1\" label=\"Vi\u1EC7t Nam\" />\n                    <option value=\"2\" label=\"H\u00E0n Qu\u1ED1c\" />\n                  </select>\n                  {actionData?.errors?.countryId && (\n                    <div className=\"pt-1 text-red-700\" id=\"countryId-error\">\n                      {actionData.errors.countryId}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Stock Provider */}\n              <div>\n                <label\n                  htmlFor=\"provider\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\n                >\n                  Lo\u1EA1i Nh\u00E0 H\u00E0ng\n                </label>\n                <div className=\"mt-1\">\n                  <select\n                    ref={typeIdRef}\n                    defaultValue={restaurant?.typeId}\n                    id=\"typeId\"\n                    required\n                    name=\"typeId\"\n                    aria-invalid={actionData?.errors?.typeId ? true : undefined}\n                    aria-describedby=\"provider-error\"\n                    className=\"w-full rounded border border-gray-300 px-2 pt-2 pb-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n                  >\n                    <option value=\"\" label=\"\" />\n                    {typeList.map((type) => (\n                      <option\n                        key={type.typeId}\n                        value={type.typeId}\n                        label={type.nameVie}\n                      />\n                    ))}\n                  </select>\n                  {actionData?.errors?.typeId && (\n                    <div className=\"pt-1 text-red-700\" id=\"typeId-error\">\n                      {actionData.errors.typeId}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column */}\n          <div className=\"\">\n            {/* English Name */}\n            <FormInput\n              name=\"addressVie\"\n              ref={addressVieRef}\n              required={true}\n              label=\"\u0110\u1ECBa ch\u1EC9 ti\u1EBFng Vi\u1EC7t\"\n              placeholder=\"19 Tr\u1EA7n B\u00ECnh Tr\u1ECDng\"\n              defaultValue={restaurant?.addressVie?.toString()}\n            />\n            <FormInput\n              name=\"addressKor\"\n              ref={addressKorRef}\n              required={true}\n              label=\"\u0110\u1ECBa ch\u1EC9 ti\u1EBFng H\u00E0n\"\n              placeholder=\"19 Tran Binh Trong\"\n              defaultValue={restaurant?.addressKor?.toString()}\n            />\n            <FormInput\n              name=\"addressEng\"\n              ref={addressEngRef}\n              required={true}\n              label=\"\u0110\u1ECBa ch\u1EC9 ti\u1EBFng Anh\"\n              placeholder=\"19 Tran Binh Trong\"\n              defaultValue={restaurant?.addressEng?.toString()}\n            />\n          </div>\n          <div className=\"\">\n            {/* English Name */}\n            <FormInput\n              name=\"rating\"\n              label=\"rating\"\n              placeholder=\"0\"\n              defaultValue={restaurant?.rating?.toString()}\n            />\n            <FormInput\n              name=\"openingTime\"\n              label=\"M\u1EDF c\u1EEDa\"\n              placeholder=\"0-24\"\n              defaultValue={restaurant?.openingTime?.toString()}\n            />\n            <FormInput\n              name=\"closingTime\"\n              label=\"\u0110\u00F3ng c\u1EEDa\"\n              placeholder=\"0-24\"\n              defaultValue={restaurant?.closingTime?.toString()}\n            />\n          </div>\n          <div className=\"\">\n            {/* English Name */}\n            <FormInput\n              name=\"direct\"\n              label=\"\u0110\u01B0\u1EDDng \u0111i\"\n              placeholder=\"\"\n              defaultValue={restaurant?.direct?.toString()}\n            />\n            <FormInput\n              name=\"priceLow\"\n              label=\"Gi\u00E1 th\u1EA5p nh\u1EA5t\"\n              placeholder=\"24\"\n              defaultValue={restaurant?.priceLow?.toString()}\n            />\n            <FormInput\n              name=\"priceHigh\"\n              label=\"Gi\u00E1 Cao nh\u1EA5t\"\n              placeholder=\"48\"\n              defaultValue={restaurant?.priceHigh?.toString()}\n            />\n          </div>\n        </div>\n\n        {/* Description */}\n        <div className=\"w-full\">\n          <label\n            htmlFor=\"description\"\n            className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\n          >\n            M\u00F4 t\u1EA3 Ti\u1EBFng Vi\u1EC7t\n          </label>\n          <div className=\"mt-1\">\n            <textarea\n              defaultValue={restaurant?.descriptionVie?.toString()}\n              id=\"descriptionVie\"\n              rows={5}\n              placeholder=\"Gi\u1EDBi thi\u1EC7u ti\u1EBFng Vi\u1EC7t\"\n              name=\"descriptionVie\"\n              className=\"w-full rounded border border-gray-300 px-2 py-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n            />\n          </div>\n        </div>\n        <div className=\"w-full\">\n          <label\n            htmlFor=\"description\"\n            className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\n          >\n            M\u00F4 t\u1EA3 ti\u1EBFng H\u00E0n\n          </label>\n          <div className=\"mt-1\">\n            <textarea\n              defaultValue={restaurant?.descriptionKor?.toString()}\n              id=\"descriptionKor\"\n              rows={5}\n              placeholder=\"Gi\u1EDBi thi\u1EC7u ti\u1EBFng H\u00E0n\"\n              name=\"descriptionKor\"\n              className=\"w-full rounded border border-gray-300 px-2 py-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n            />\n          </div>\n        </div>\n        <div className=\"w-full\">\n          <label\n            htmlFor=\"description\"\n            className=\"block text-sm font-medium text-gray-700 dark:text-neutral-300\"\n          >\n            M\u00F4 t\u1EA3 ti\u1EBFng Anh\n          </label>\n          <div className=\"mt-1\">\n            <textarea\n              defaultValue={restaurant?.descriptionEng?.toString()}\n              id=\"descriptionEng\"\n              rows={5}\n              placeholder=\"Gi\u1EDBi thi\u1EC7u ti\u1EBFng Anh\"\n              name=\"descriptionEng\"\n              className=\"w-full rounded border border-gray-300 px-2 py-1 text-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n            />\n          </div>\n        </div>\n\n        <ActionButtons isNewItem={isNewItem} isSubmitting={isSubmitting} />\n      </Form>\n    </div>\n  );\n}\n", "import { prisma } from \"~/db.server\";\n\nexport async function countProviderById({\n  countryId,\n  typeId,\n}: {\n  countryId?: string;\n  typeId?: string;\n}) {\n  return prisma.provider.count({\n    where: {\n      typeId,\n      countryId,\n    },\n  });\n}\n\nexport async function createProvider({\n  countryId,\n  typeId,\n}: {\n  countryId: string;\n  typeId: string;\n}) {\n  return prisma.provider.create({\n    data: {\n      countryId,\n      typeId,\n    },\n  });\n}\n\nexport async function deleteProvider({\n  countryId,\n  typeId,\n}: {\n  countryId: string;\n  typeId: string;\n}) {\n  return prisma.provider.delete({\n    where: {\n      countryId_typeId: {\n        countryId,\n        typeId,\n      },\n    },\n  });\n}\n", "import { json, redirect, type LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { RestaurantInfor } from \"~/components/RestaurantInfor\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport { getRestaurantsByCountryIdAndSlug } from \"~/models/restaurants.server\";\nimport { getTypeByCountry } from \"~/models/type.server\";\nimport { getUser } from \"~/session.server\";\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  const user = await getUser(request);\n\n  const slug = params.slug;\n  const types = await getTypeByCountry({ countryId: \"2\" }); //default 1 is VN\n  const category = types.find((it) => it.slug === slug);\n\n  let restaurants;\n  if (category) {\n    restaurants = await getRestaurantsByCountryIdAndSlug({\n      countryId: \"2\",\n      slug,\n    }); //default 1 is VN\n  } else {\n    return redirect('/404');\n  }\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  return json({ user, language, restaurants });\n};\n\nexport default function CategoryKoreaPage() {\n  const { language, restaurants } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"lg:pl-6 lg:w-[70%] md:overflow-y-auto md:max-h-[100%]\">\n      <div className=\"mt-6 lg:mt-0 lg:grid lg:grid-cols-2 lg:gap-4\">\n        {restaurants.map((restaurant) => (\n          <RestaurantInfor\n            key={restaurant.id}\n            url={restaurant.id}\n            name={restaurant[`name${language}`]}\n            address={restaurant[`address${language}`]}\n            open={restaurant.openingTime}\n            close={restaurant.closingTime}\n            rating={restaurant.rating || 0}\n            priceLow={restaurant.priceLow || undefined}\n            priceHigh={restaurant.priceHigh || undefined}\n            images={restaurant.images[0]?.url || undefined}\n            language={language}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { PlusIcon } from \"~/icons/PlusIcon\";\nimport { getRestaurantsList } from \"~/models/restaurants.server\";\n\n// Models\n\n// Helpers\nimport { requireAdminUser } from \"~/session.server\";\n\n// Components\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await requireAdminUser(request);\n\n  const restaurantList = await getRestaurantsList();\n\n  return json({ restaurantList });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sector Management\" }];\n\nexport default function AdminRestaurantsListPage() {\n  const { restaurantList } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <div className=\"grid grid-cols-[200px_1fr] gap-6 max-h-[calc(100%-40px)] overflow-y-auto\">\n        <div>\n          <Link\n            className=\"flex block mb-4 rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-400 hover:text-white hover:no-underline\"\n            to={'new'}\n          >\n            <PlusIcon />\n            <span className=\"ml-2\">Add New</span>\n          </Link>\n          <Form action='/admin/restaurant' method=\"get\">\n            <input\n              id=\"query\"\n              name=\"query\"\n              type=\"text\"\n              className=\"w-full border border-gray-200 hover:border-gray-300 rounded-lg mb-4 px-4 py-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n              placeholder=\"Search...\"\n            />\n          </Form>\n          {restaurantList.length === 0 ? (\n            <div className=\"text-slate-400 text-center\">No item yet</div>\n          ) : (\n            <div>\n              <ul>\n                {restaurantList.map(({ id, nameVie}, idx) => (\n                  <li key={id}>\n                    <NavLink\n                      to={id}\n                      className={({ isActive }) =>\n                        `block py-2 hover:text-sky-400 ${\n                          isActive ? \"text-sky-400\" : \"dark:text-white\"\n                        }`\n                      }\n                    >\n                      {idx + 1}. {nameVie}\n                    </NavLink>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* TODO: Load more */}\n        </div>\n        <div className=\"overflow-y-auto\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { AdminListLayout } from \"~/components/AdminListLayout\";\r\nimport { getTypeList } from \"~/models/type.server\";\r\n\r\n// Models\r\n\r\n// Helpers\r\nimport { requireAdminUser } from \"~/session.server\";\r\n\r\n// Components\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  await requireAdminUser(request);\r\n\r\n  const categoryList = await getTypeList();\r\n\r\n  return json({ categoryList });\r\n};\r\n\r\nexport const meta: V2_MetaFunction = () => [{ title: \"Sector Management\" }];\r\n\r\nexport default function AdminCategoryListPage() {\r\n  const { categoryList } = useLoaderData<typeof loader>();\r\n\r\n  return <AdminListLayout dataList={categoryList} searchFormUrl=\"/admin/category\" />;\r\n}\r\n", "import { Link, Outlet, NavLink, Form } from \"@remix-run/react\";\n\n// Components\n import { PlusIcon } from \"~/icons/PlusIcon\";\n\ntype DataItem = {\n  slug: string;\n};\n\ntype LayoutProps = {\n  dataList: DataItem[];\n  searchFormUrl: string;\n  routeAddNew?: string;\n};\n\nexport const AdminListLayout = ({\n  dataList,\n  searchFormUrl,\n  routeAddNew = 'new',\n}: LayoutProps) => (\n  <div className=\"container mx-auto p-4\">\n    <div className=\"grid grid-cols-[200px_1fr] gap-6\">\n      <div>\n        <Link\n          className=\"flex block mb-4 rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-400 hover:text-white hover:no-underline\"\n          to={routeAddNew}\n        >\n          <PlusIcon />\n          <span className=\"ml-2\">Add New</span>\n        </Link>\n        <Form action={searchFormUrl} method=\"get\">\n          <input\n            id=\"query\"\n            name=\"query\"\n            type=\"text\"\n            className=\"w-full border border-gray-200 hover:border-gray-300 rounded-lg mb-4 px-4 py-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\n            placeholder=\"Search...\"\n          />\n        </Form>\n        {dataList.length === 0 ? (\n          <div className=\"text-slate-400 text-center\">No item yet</div>\n        ) : (\n          <div>\n            <ul>\n              {dataList.map(({slug }, idx) => (\n                <li key={slug}>\n                  <NavLink\n                    to={slug}\n                    className={({ isActive }) =>\n                      `block py-2 hover:text-sky-400 ${\n                        isActive ? \"text-sky-400\" : \"dark:text-white\"\n                      }`\n                    }\n                  >\n                    {idx + 1}. {slug}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* TODO: Load more */}\n      </div>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n\n", "import type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport { getRestaurantsList } from \"~/models/restaurants.server\";\r\n\r\n// Models\r\n\r\n// Helpers\r\nimport { requireAdminUser } from \"~/session.server\";\r\n\r\n// Components\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  await requireAdminUser(request);\r\n\r\n  const restaurantList = await getRestaurantsList();\r\n\r\n  return json({ restaurantList });\r\n};\r\n\r\nexport const meta: V2_MetaFunction = () => [{ title: \"Sector Management\" }];\r\n\r\nexport default function AdminRestaurantsListPage() {\r\n  const { restaurantList } = useLoaderData<typeof loader>();\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"grid grid-cols-[200px_1fr] gap-6\">\r\n        <div>\r\n          <Form action=\"/admin/restaurant\" method=\"get\">\r\n            <input\r\n              id=\"query\"\r\n              name=\"query\"\r\n              type=\"text\"\r\n              className=\"w-full border border-gray-200 hover:border-gray-300 rounded-lg mb-4 px-4 py-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n              placeholder=\"Search...\"\r\n            />\r\n          </Form>\r\n          {restaurantList.length === 0 ? (\r\n            <div className=\"text-slate-400 text-center\">No item yet</div>\r\n          ) : (\r\n            <div>\r\n              <ul>\r\n                {restaurantList.map(({ id, nameVie }, idx) => (\r\n                  <li key={id}>\r\n                    <NavLink\r\n                      to={id}\r\n                      className={({ isActive }) =>\r\n                        `block py-2 hover:text-sky-400 ${\r\n                          isActive ? \"text-sky-400\" : \"dark:text-white\"\r\n                        }`\r\n                      }\r\n                    >\r\n                      {idx + 1}. {nameVie}\r\n                    </NavLink>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* TODO: Load more */}\r\n        </div>\r\n        <div>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { User } from \"@prisma/client\";\nimport { type LoaderArgs, json, type V2_MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Container } from \"~/components/Container\";\nimport { ItemRestaurant } from \"~/components/ItemRestaurant\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport { createRestaurantSlug } from \"~/helpers/slug\";\nimport { getRestaurantsFavoriteById } from \"~/models/restaurants.server\";\nimport { getUser, requireUser } from \"~/session.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await requireUser(request);\n\n  const user = await getUser(request);\n\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  let favorites;\n  if (user) {\n    favorites = await getRestaurantsFavoriteById(user.id);\n  }\n\n  return json({ user, language, favorites });\n};\n\nexport const meta: V2_MetaFunction = ({data}) => [{ title: `${lang.favorite[`favorite${data?.language as Language}`]}` }];\n\nexport default function FavoritePage() {\n  const { user, language, favorites } = useLoaderData<typeof loader>();\n\n  return (\n    <Container customClass=\"flex\">\n      <Sidebar user={user as unknown as User} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"w-full p-6 rounded-2xl bg-white mt-10 overflow-y-auto md:mt-0\">\n            <h2 className=\"text-xl font-bold pb-4 border-b\">\n              {lang.favorite[`favorite${language}`]}\n            </h2>\n            <div className=\"lg:grid lg:grid-cols-2 lg:gap-4 pt-4\">\n              {favorites &&\n                favorites.map(\n                  ({ restaurant, countrySlug, typeSlug, ...favorite }) => (\n                    <ItemRestaurant\n                      key={restaurant.id}\n                      url={createRestaurantSlug({\n                        countrySlug,\n                        typeSlug,\n                        id: restaurant.id,\n                      })}\n                      image={restaurant.images[0].url || \"\"}\n                      name={restaurant[`name${language}`]}\n                      address={restaurant[`address${language}`]}\n                      rating={restaurant.rating || 0}\n                      customClass=\"lg:border\"\n                    />\n                  )\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n", "import type { ReactNode } from \"react\";\r\n\r\ntype ContainerProps = {\r\n  children: ReactNode;\r\n  customClass?: string;\r\n};\r\n\r\nexport const Container = ({\r\n  children,\r\n  customClass = '',\r\n}: ContainerProps) => (\r\n  <div className={['w-full min-h-screen mx-auto p-2 md:py-5 md:px-4 md:h-screen', customClass].join(' ')}>\r\n    {children}\r\n  </div>\r\n);\r\n", "import { Link } from \"@remix-run/react\";\r\n// import { LikeIcon } from \"~/icons/LikeIcon\";\r\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\r\n\r\ntype ItemRestaurantType = {\r\n  url: string;\r\n  image?: string;\r\n  name: string;\r\n  address: string;\r\n  rating?: number;\r\n  customClass?: string;\r\n};\r\n\r\nexport const ItemRestaurant = ({\r\n  url,\r\n  image,\r\n  name,\r\n  address,\r\n  rating,\r\n  customClass,\r\n}: ItemRestaurantType) => (\r\n  <Link\r\n    to={url}\r\n    className={`flex p-2 rounded-2xl hover:bg-slate-100 md:p-3 ${customClass}`}\r\n  >\r\n    <div className=\"w-16 h-16 md:w-18 md:h-18\">\r\n      <img\r\n        src={image}\r\n        alt=\"\"\r\n        className=\"w-16 h-16 md:w-18 md:h-18 rounded-xl\"\r\n      />\r\n    </div>\r\n    <div className=\"flex flex-col justify-between py-1 px-2 md:py-1 md:px-2\">\r\n      <h3 className=\"font-bold\">{name}</h3>\r\n      <div className=\"flex text-sm\">\r\n        <span className=\"flex mr-4 items-center\">\r\n          <span className=\"mr-1 text-[#1ec28b]\">\r\n            <MapPinIcon />\r\n          </span>\r\n          {address}\r\n        </span>\r\n        {/* <span className=\"flex items-center\">\r\n          <span className=\"mr-1 text-[#1ec28b]\"><LikeIcon /></span>\r\n          {rating}\r\n        </span> */}\r\n      </div>\r\n    </div>\r\n  </Link>\r\n);\r\n", "import type { User } from \"@prisma/client\";\nimport { Link, NavLink } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { BarIcon } from \"~/icons/BarIcon\";\n\n// Icons\nimport { DashboardIcon } from \"~/icons/DashboardIcon\";\nimport { FavoriteIcon } from \"~/icons/FavoriteIcon\";\nimport { HomeIcon } from \"~/icons/HomeIcon\";\nimport { LogoIcon } from \"~/icons/LogoIcon\";\nimport { LogoutIcon } from \"~/icons/LogoutIcon\";\nimport { ScheduleIcon } from \"~/icons/ScheduleIcon\";\nimport { SettingIcon } from \"~/icons/SettingIcon\";\n\ntype SidebarType = {\n  user: User | null;\n  langType: Language;\n};\n\nexport default function Sidebar({ user = null, langType }: SidebarType) {\n  let userRole;\n  if (user) {\n    user.role > 0 ? (userRole = true) : (userRole = false);\n  }\n  const [isBar, setIsBar] = useState(false);\n  const handleIsBar = () => {\n    setIsBar((prev) => !prev);\n  };\n  const SIDEBAR_LIST = [\n    {\n      name: lang.dashboard[`dashboard${langType}`],\n      url: \"/admin\",\n      Icon: DashboardIcon,\n      isShow: userRole,\n    },\n    {\n      name: lang.home[`home${langType}`],\n      url: \"/\",\n      Icon: HomeIcon,\n      isShow: true,\n    },\n    {\n      name: lang.favorite[`favorite${langType}`],\n      url: \"/favorite\",\n      Icon: FavoriteIcon,\n      isShow: true,\n    },\n    {\n      name: lang.schedule[`schedule${langType}`],\n      url: \"/schedule\",\n      Icon: ScheduleIcon,\n      isShow: true,\n    },\n    {\n      name: lang.settings[`settings${langType}`],\n      url: \"/settings\",\n      Icon: SettingIcon,\n      isShow: true,\n    },\n  ].filter((it) => it.isShow);\n\n  return (\n    <>\n      <div\n        className={`fixed z-10 top-[-1px] bottom-0 rounded-[10px] px-4 py-10 bg-white w-[240px] py-5 flex flex-col justify-between transition-all duration-500 ${\n          isBar ? \"left-1\" : \"left-[-250px]\"\n        } md:static md:w-[200px] md:px-0`}\n      >\n        <div className=\"text-center\">\n          <Link\n            to=\"/\"\n            title=\"dutago\"\n            className=\"inline-flex justify-center\"\n            onClick={handleIsBar}\n          >\n            <h1 className=\"text-2xl font-bold\">Dutago</h1>\n            <span className=\"text-[#1ec28b]\">\n              <LogoIcon />\n            </span>\n          </Link>\n          <div className=\"flex flex-col mt-20\" onClick={handleIsBar}>\n            {SIDEBAR_LIST.map(({ name, url, Icon }) => (\n              <NavLink\n                key={url}\n                to={url}\n                className={({ isActive }) =>\n                  `flex p-4 rounded-xl font-medium hover:text-white hover:bg-[#1ec28b] ${\n                    isActive\n                      ? \"bg-[#1ec28b] text-white shadow-lg shadow-[#a7e7d1]\"\n                      : \"text-slate-500\"\n                  }`\n                }\n              >\n                <Icon />\n                <span className=\"ml-2\">{name}</span>\n              </NavLink>\n            ))}\n          </div>\n        </div>\n        {user ? (\n          <form\n            action=\"/logout\"\n            method=\"post\"\n            className=\"flex justify-center text-slate-500\"\n          >\n            <button\n              type=\"submit\"\n              color=\"error\"\n              className=\"p-2 flex hover:text-[#1ec28b]\"\n            >\n              <span className=\"mr-3\">\n                <LogoutIcon />\n              </span>\n              {lang.logout[`logout${langType}`]}\n            </button>\n          </form>\n        ) : (\n          <div className=\"flex justify-center font-normal text-slate-500\">\n            <Link\n              to=\"/login\"\n              className=\"hover:text-[#1ec28b]\"\n              onClick={handleIsBar}\n            >\n              {lang.login[`login${langType}`]}\n            </Link>\n            <span className=\"mx-1\">/</span>\n            <Link\n              to=\"/signup\"\n              className=\"hover:text-[#1ec28b]\"\n              onClick={handleIsBar}\n            >\n              {lang.signup[`signup${langType}`]}\n            </Link>\n          </div>\n        )}\n      </div>\n      <button\n        className=\"absolute right-4 top-4 text-[#1ec28b] md:hidden\"\n        onClick={handleIsBar}\n      >\n        <BarIcon />\n      </button>\n    </>\n  );\n}\n", "export const BarIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-9 h-9\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const DashboardIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const FavoriteIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M16.5 3.75V16.5L12 14.25 7.5 16.5V3.75m9 0H18A2.25 2.25 0 0120.25 6v12A2.25 2.25 0 0118 20.25H6A2.25 2.25 0 013.75 18V6A2.25 2.25 0 016 3.75h1.5m9 0h-9\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const HomeIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const LogoIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M20.893 13.393l-1.135-1.135a2.252 2.252 0 01-.421-.585l-1.08-2.16a.414.414 0 00-.663-.107.827.827 0 01-.812.21l-1.273-.363a.89.89 0 00-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 01-1.81 1.025 1.055 1.055 0 01-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 01-1.383-2.46l.007-.042a2.25 2.25 0 01.29-.787l.09-.15a2.25 2.25 0 012.37-1.048l1.178.236a1.125 1.125 0 001.302-.795l.208-.73a1.125 1.125 0 00-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 01-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 01-1.458-1.137l1.411-2.353a2.25 2.25 0 00.286-.76m11.928 9.869A9 9 0 008.965 3.525m11.928 9.868A9 9 0 118.965 3.525\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const LogoutIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1.5\"\n    stroke=\"currentColor\"\n    className=\"w-6 h-6\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9\"\n    />\n  </svg>\n);\n", "export const ScheduleIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const SettingIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1.5\"\n    stroke=\"currentColor\"\n    className=\"w-6 h-6\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\"\n    />\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n    />\n  </svg>\n);\n", "import type { Restaurant, User } from \"@prisma/client\";\nimport {\n  type LoaderArgs,\n  json,\n  type ActionArgs,\n  redirect,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Container } from \"~/components/Container\";\nimport { ScheduleRestaurant } from \"~/components/ScheduleRestaurant\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport { getDateFormatVN, getHourFormatVN } from \"~/helpers/date\";\nimport { createRestaurantSlug } from \"~/helpers/slug\";\nimport {\n  createSchedule,\n  deleteScheduleById,\n  getSchedule,\n} from \"~/models/schedule.server\";\nimport { getUser, requireUser } from \"~/session.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await requireUser(request);\n\n  const user = await getUser(request);\n  if (!user) return redirect(\"/login\");\n\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  const schedules = await getSchedule(user.id);\n\n  return json({ user, language, schedules });\n};\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  await requireUser(request);\n\n  const url = new URL(request.url);\n  const query = url.searchParams;\n  const newRestaurantId = query.get(\"new\");\n  const removeRestaurantId = query.get(\"remove\");\n\n  const formData = await request.formData();\n  const dateTime = formData.get(\"dateTime\");\n\n  const user = await getUser(request);\n\n  if (!user) return redirect(\"/login\");\n\n  if (removeRestaurantId) {\n    await deleteScheduleById(removeRestaurantId);\n    return redirect(\"/schedule\");\n  }\n\n  if (typeof dateTime !== \"string\" || dateTime.length === 0) {\n    return json({});\n  }\n\n  const dataSubmit = {\n    userId: user.id,\n    restaurantId: String(newRestaurantId),\n    dateTime: new Date(dateTime),\n  };\n\n  await createSchedule(dataSubmit);\n\n  return json({});\n};\n\nexport const meta: V2_MetaFunction = ({data}) => [{ title: `${lang.schedule[`schedule${data?.language as Language}`]}` }];\n\nexport default function SchedulePage() {\n  const { user, language, schedules } = useLoaderData<typeof loader>();\n\n  return (\n    <Container customClass=\"flex\">\n      <Sidebar user={user as unknown as User} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full overflow-y-auto rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"mt-8 md:mt-0\">\n            {schedules.map((schedule, index) => {\n              if (\n                index === 0 ||\n                getDateFormatVN(schedule.dateTime) !==\n                  getDateFormatVN(schedules[index - 1].dateTime)\n              ) {\n                return (\n                  <ScheduleRestaurant\n                    key={schedule.id}\n                    id={schedule.id}\n                    url={createRestaurantSlug({\n                      countrySlug: schedule.restaurant.countryType.country.slug,\n                      typeSlug: schedule.restaurant.countryType.type.slug,\n                      id: schedule.restaurant.id,\n                    })}\n                    restaurant={schedule.restaurant as unknown as Restaurant}\n                    hour={getHourFormatVN(schedule.dateTime).slice(0, 5)}\n                    day={getDateFormatVN(schedule.dateTime)}\n                    language={language}\n                  />\n                );\n              } else {\n                return (\n                  <ScheduleRestaurant\n                    key={schedule.id}\n                    id={schedule.id}\n                    url={createRestaurantSlug({\n                      countrySlug: schedule.restaurant.countryType.country.slug,\n                      typeSlug: schedule.restaurant.countryType.type.slug,\n                      id: schedule.restaurant.id,\n                    })}\n                    restaurant={schedule.restaurant as unknown as Restaurant}\n                    hour={getHourFormatVN(schedule.dateTime).slice(0, 5)}\n                    language={language}\n                  />\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n", "import type { Restaurant } from \"@prisma/client\";\r\nimport { Form, Link } from \"@remix-run/react\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { ClockIcon } from \"~/icons/ClockIcon\";\r\nimport { LikeIcon } from \"~/icons/LikeIcon\";\r\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\r\nimport { RemoveIcon } from \"~/icons/RemoveIcon\";\r\nimport { ScheduleIcon } from \"~/icons/ScheduleIcon\";\r\n\r\ntype ScheduleRestaurantProps = {\r\n  id: string;\r\n  url: string;\r\n  restaurant: Restaurant;\r\n  day?: string;\r\n  hour: string;\r\n  language: Language;\r\n};\r\n\r\nexport const ScheduleRestaurant = ({\r\n  id,\r\n  url,\r\n  restaurant,\r\n  day,\r\n  hour,\r\n  language,\r\n}: ScheduleRestaurantProps) => {\r\n  return (\r\n    <div className=\"lg:flex lg:justify-end relative\">\r\n      {day && (\r\n        <div>\r\n          <div className=\"flex bg-[#cdd0d6] p-2 justify-center items-center rounded-xl my-2 lg:py-4 lg:px-8 lg:mr-2 pointer-events-none\">\r\n            <span className=\"mr-2 text-[#1ec28b]\">\r\n              <ScheduleIcon />\r\n            </span>\r\n            <span className=\"font-semibold\">{day}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Link\r\n        to={url}\r\n        title={restaurant[`name${language}`]}\r\n        className=\"block p-3 rounded-2xl bg-white mb-1 lg:min-w-[400px]\"\r\n      >\r\n        <span className=\"inline-flex px-3 rounded-[5px] items-center justify-center text-[#1ec28b] bg-green-100\">\r\n          <span className=\"mr-1\">\r\n            <ClockIcon />\r\n          </span>\r\n          <span className=\"text-sm\">{hour}</span>\r\n        </span>\r\n        <div className=\"flex items-center mb-2\">\r\n          <img\r\n            src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\r\n            alt=\"Restaurant\"\r\n            className=\"w-6 h-6\"\r\n          />\r\n          <div className=\"ml-2 flex-1\">\r\n            <p className=\"uppercase text-xs font-bold text-gray-600\">{`${\r\n              lang.restaurant[`restaurant${language}`]\r\n            }`}</p>\r\n            <h3 className=\"font-bold\">{restaurant[`name${language}`]}</h3>\r\n          </div>\r\n          {/* <span className=\"flex items-center text-sm\">\r\n            <span className=\"relative flex items-center text-[#1ec28b] w-6 h-6\">\r\n              <LikeIcon />\r\n            </span>\r\n            <span>{restaurant.rating}</span>\r\n          </span> */}\r\n        </div>\r\n        <div>\r\n          <span className=\"flex items-center text-sm mb-1\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <MapPinIcon />\r\n            </span>\r\n            <span>{restaurant[`address${language}`]}</span>\r\n          </span>\r\n          <span className=\"flex items-center text-xs font-semibold\">\r\n            <span className=\"text-[#1ec28b] mr-1\">\r\n              <ClockIcon />\r\n            </span>\r\n            <span>{`${lang.open[`open${language}`]}: ${\r\n              restaurant.openingTime\r\n            }H - ${lang.close[`close${language}`]}: ${\r\n              restaurant.closingTime\r\n            }H`}</span>\r\n          </span>\r\n        </div>\r\n      </Link>\r\n      <Form\r\n        method=\"post\"\r\n        action={`/schedule?remove=${id}`}\r\n        className=\"px-4 absolute right-4 bottom-4\"\r\n      >\r\n        <button type=\"submit\" className=\"text-red-500 hover:text-red-800\">\r\n          <RemoveIcon />\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n", "export const RemoveIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-4 h-4\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5m6 4.125l2.25 2.25m0 0l2.25 2.25M12 13.875l2.25-2.25M12 13.875l-2.25 2.25M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const getDateStart = (date: Date | string) => {\r\n  const DATE_START_TIME = new Date(date);\r\n  DATE_START_TIME.setUTCHours(0, 0, 0, 0);\r\n\r\n  return DATE_START_TIME;\r\n};\r\n\r\n/**\r\n * Return string format for VN\r\n * @param date\r\n * @returns\r\n */\r\nexport const getDateLocalFormatVN = (date: Date | string) => {\r\n  return new Date(date).toLocaleString(\"vi-vn\");\r\n};\r\n\r\nexport const getDateFormatVN = (date: Date | string) => {\r\n  return new Date(date).toLocaleDateString(\"vi-vn\");\r\n};\r\n\r\nexport const getHourFormatVN = (date: Date | string) => {\r\n  return new Date(date).toLocaleTimeString(\"vi-vn\");\r\n};", "import { prisma } from \"~/db.server\";\n\ntype CreateSchedule = {\n  userId: string;\n  restaurantId: string;\n  hour?: Date;\n  dateTime: Date;\n};\n\nexport async function createSchedule({\n  userId,\n  restaurantId,\n  dateTime,\n  hour,\n}: CreateSchedule) {\n  return prisma.schedule.create({\n    data: {\n      userId: userId,\n      restaurantId: restaurantId,\n      dateTime: dateTime,\n      hour: hour,\n    },\n  });\n}\n\nexport async function getSchedule(userId: string) {\n  return prisma.schedule.findMany({\n    where: {\n      userId,\n      dateTime: {\n        gte: new Date(),\n      },\n    },\n    include: {\n      restaurant: {\n        include: {\n          countryType: {\n            include: {\n              country: true,\n              type: true,\n            },\n          },\n        },\n      }, // Include the related Restaurant information\n    },\n    orderBy: {\n      dateTime: \"asc\", // Sort schedules by dateTime in ascending order\n    },\n  });\n}\n\nexport async function deleteScheduleById(scheduleId: string) {\n  return prisma.schedule.delete({\n    where: {\n      id: scheduleId,\n    },\n  });\n}\n", "import type { User } from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs, LoaderFunction, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { Container } from \"~/components/Container\";\r\nimport Sidebar from \"~/components/Sidebar\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { languageCookie } from \"~/cookies.server\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\nimport { getUser } from \"~/session.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\r\n  const user = await getUser(request);\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({ user, language });\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const cookie = (await languageCookie.parse(cookieHeader)) || {};\r\n  const bodyParams = await request.formData();\r\n\r\n  const language = bodyParams.get(\"language\") || \"Eng\"; // N\u1EBFu kh\u00F4ng c\u00F3 gi\u00E1 tr\u1ECB trong bodyParams, gi\u00E1 tr\u1ECB m\u1EB7c \u0111\u1ECBnh l\u00E0 \"1\"\r\n  cookie.language = language;\r\n\r\n  return redirect(\"/settings\", {\r\n    headers: {\r\n      \"Set-Cookie\": await languageCookie.serialize(cookie),\r\n    },\r\n  });\r\n}\r\n\r\nexport const meta: V2_MetaFunction = ({data}) => [{ title: `${lang.settings[`settings${data?.language as Language}`]}` }];\r\n\r\n\r\nexport default function SettingsPage() {\r\n  const { user, language } = useLoaderData<typeof loader>();\r\n\r\n  return (\r\n    <Container customClass=\"flex\">\r\n      <Sidebar user={user as unknown as User} langType={language} />\r\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\r\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px]\">\r\n          <div className=\"mt-12 justify-between md:mt-6\">\r\n            <h3 className=\"font-semibold mb-1\">{lang.language[`language${language as Language}`]}</h3>\r\n            <Form method=\"post\" className=\"flex items-center\">\r\n              <label\r\n                className=\"block w-[50%] text-sm font-medium text-gray-900 dark:text-white lg:w-[20%]\"\r\n                defaultValue={language}\r\n              >\r\n                <select\r\n                  name=\"language\"\r\n                  defaultValue={language}\r\n                  className=\"bg-gray-50 border border-gray-300 outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                >\r\n                  <option value=\"Eng\">English</option>\r\n                  <option value=\"Kor\">\uD55C\uAD6D\uC778</option>\r\n                  <option value=\"Vie\">Ti\u1EBFng Vi\u1EC7t</option>\r\n                </select>\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"ml-6 px-4 py-2 rounded-xl text-white font-semibold uppercase text-[14px] bg-[#1ec28b]\"\r\n              >\r\n                {lang.save[`save${language as Language}`]}\r\n              </button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n", "import type { User } from \"@prisma/client\";\nimport { json, type V2_MetaFunction, type LoaderArgs } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { Category } from \"~/components/Category\";\nimport { Container } from \"~/components/Container\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport {\n  type TypeWithRestaurantCount,\n  getTypeWithRestaurantCount,\n} from \"~/models/type.server\";\nimport { getUser } from \"~/session.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await getUser(request);\n\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  const types = await getTypeWithRestaurantCount({}); //default 1 is VN\n  return json({ user, types, language });\n};\n\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\n  {\n    title: `${\n      lang.restaurantVie[`restaurantVie${data?.language as Language}`]\n    }`,\n  },\n  {\n    name: \"description\",\n    content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng Vi\u1EC7t Nam t\u1EA1i \u0110\u00E0 N\u1EB5ng\",\n  },\n];\n\nexport default function KoreaIndexPage() {\n  const { user, types, language } = useLoaderData<typeof loader>();\n\n  return (\n    <Container customClass=\"flex\">\n      <Sidebar user={user as unknown as User} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"lg:w-[30%] overflow-y-scroll\">\n            <Category\n              countrySlug=\"viet-nam\"\n              language={language}\n              categorys={types as unknown as TypeWithRestaurantCount[]}\n            />\n          </div>\n          <Outlet />\n        </div>\n      </div>\n    </Container>\n  );\n}\n", "import { NavLink } from \"@remix-run/react\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport {\n  Category1,\n  Category2,\n  Category3,\n  Category4,\n  Category5,\n  Category6,\n  Category7,\n} from \"~/icons/CategoryIcon\";\nimport type { TypeWithRestaurantCount } from \"~/models/type.server\";\n\ntype CategoryType = {\n  countrySlug: string;\n  categorys: TypeWithRestaurantCount[];\n  language: Language;\n};\n\nconst CATEGORY_ICON = [\n  { Icon: Category1 },\n  { Icon: Category2 },\n  { Icon: Category3 },\n  { Icon: Category4 },\n  { Icon: Category5 },\n  { Icon: Category6 },\n  { Icon: Category7 },\n];\n\nexport const Category = ({ categorys, language, countrySlug }: CategoryType) => (\n  <div className=\"p-6 rounded-2xl bg-white mt-10 lg:mt-0\">\n    <h2 className=\"text-xl font-bold pb-4 border-b\">\n      {lang.category[`category${language}`]}\n    </h2>\n    <div className=\"flex flex-col mt-4\">\n      {categorys.map((category) => {\n        const Icon =\n        CATEGORY_ICON?.[(Number(category?.typeId) - 1) % CATEGORY_ICON.length]\n          ?.Icon;\n        return (\n          <NavLink\n            key={category.typeId}\n            to={`/${countrySlug}/${category.slug}`}\n            className={({ isActive }) =>\n              `flex items-center py-4 px-2 border rounded-[10px] mb-2 ${\n                isActive ? \"bg-[#e6f0e9]\" : \"\"\n              }`\n            }\n          >\n            <Icon />\n            <div className=\"flex flex-1 items-center justify-between ml-3\">\n              <span>{category[`name${language}`]}</span>\n              <span className=\"flex items-center justify-center w-6 h-6 text-[14px] bg-[#BCE3C9] rounded-full\">\n                {category.restaurantCount}\n              </span>\n            </div>\n          </NavLink>\n        );\n      })}\n    </div>\n  </div>\n);\n", "export const Category1 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M10 31L9 25.5V20.5C9.16667 19.3333 9.6 17 10 17C10.4 17 13 16 15 15.5L19 15C20 15 20.5 15 25.5 14C25.8922 13.9216 28.5 13.5 29.5 13.5L28 11.5L30 13.5L32 15.5L32.5 17C31.8333 17.1667 30.3 17.5 29.5 17.5H25.5L23.5 18.5V20C23.5 20.4 23.1667 23.8333 23 25.5L22.5 30.5L20.5 31H11H10Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M47 17.5L49 15L55.5 10.5L63 7.5C65.3333 6.83334 70.6 5.8 73 7C76 8.5 76.5 9 79 13.5C78.8333 17 78.2 24.3 77 25.5L74.5 30L73 31H65.5H54.5H51V27.5C51 27 50.5 23.5 50.5 23V20L50 18L49 17.5H47Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M57.4365 13.9525C56.7408 14.6482 56.3577 15.5731 56.3577 16.5569C56.3577 17.5406 56.7408 18.4655 57.4363 19.1612L65.9502 27.6751C66.6459 28.3707 67.5707 28.7537 68.5544 28.7537C69.5382 28.7537 70.463 28.3706 71.1585 27.6751C71.8542 26.9794 72.2373 26.0545 72.2373 25.0708C72.2373 24.087 71.8542 23.1621 71.1587 22.4664L62.6448 13.9524C61.2089 12.5165 58.8721 12.5169 57.4365 13.9525ZM69.5014 24.1239C69.7543 24.3767 69.8936 24.7131 69.8936 25.0708C69.8936 25.4284 69.7543 25.7647 69.5013 26.0177C69.2485 26.2706 68.912 26.4099 68.5544 26.4099C68.1967 26.4099 67.8604 26.2706 67.6075 26.0177L59.0935 17.5036C58.8407 17.2508 58.7013 16.9144 58.7013 16.5567C58.7013 16.199 58.8407 15.8628 59.0937 15.6098C59.3547 15.3487 59.6975 15.2182 60.0406 15.2182C60.3834 15.2182 60.7266 15.3487 60.9875 15.6098L69.5014 24.1239Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M79.7151 35.5274C79.2251 33.1065 77.4773 31.1647 75.2416 30.3405C80.7858 21.0909 81.5545 12.429 77.1191 7.9934C75.1734 6.04786 72.3554 5.05173 68.9639 5.11423C68.3168 5.12611 67.8018 5.66035 67.8137 6.3074C67.8254 6.94727 68.3478 7.45791 68.985 7.45791C68.9923 7.45791 68.9997 7.45791 69.007 7.45776C71.7817 7.40635 73.956 8.14481 75.4618 9.65065C77.7905 11.9793 77.8533 15.5174 77.4961 18.0755C76.9908 21.6931 75.3541 25.7728 72.7581 29.9089C65.999 29.78 59.2107 29.6909 52.4114 29.6422C52.3672 25.6508 52.1203 21.6108 51.6714 17.6142C51.61 17.0686 51.1781 16.6386 50.6321 16.5798C50.2826 16.5423 49.9326 16.5089 49.5829 16.4742C54.5301 12.2907 59.8192 9.34392 64.6878 8.08778C65.3146 7.92606 65.6914 7.28697 65.5297 6.66023C65.3681 6.03349 64.7286 5.65644 64.1022 5.81832C62.2365 6.29975 60.3176 7.00977 58.3834 7.92496C58.7601 6.28693 58.9396 4.32327 58.2205 2.85806C57.7874 1.97505 57.0702 1.373 56.1467 1.1169C54.7784 0.737821 52.6528 0.936891 50.2913 4.03935C50.1771 4.18951 50.0666 4.34077 49.9604 4.49124C49.9476 4.44671 49.9346 4.40233 49.9212 4.3578C49.4571 2.81368 48.2439 0.223114 45.3298 0.223114C44.3177 0.223114 43.4353 0.626567 42.7775 1.38972C41.9188 2.38616 41.5432 3.93388 41.4084 5.47643C40.3828 4.12763 39.1405 3.04353 37.7967 3.04353C36.9237 3.04353 36.1275 3.48824 35.5552 4.29577C34.0473 6.42303 34.0254 11.0332 35.4261 15.8634C35.0753 15.8678 34.7247 15.8757 34.374 15.8831C32.078 13.2039 29.3026 11.3601 28.0886 10.6223V8.0534C28.6388 7.95699 29.0571 7.47807 29.0571 6.90024V3.59152C29.0571 1.80833 27.6064 0.35765 25.8232 0.35765H18.5358C16.7526 0.35765 15.3019 1.80833 15.3019 3.59152V6.90024C15.3019 7.47807 15.7205 7.95699 16.2707 8.0534L16.2698 10.6218C14.6875 11.5828 10.4608 14.4152 8.09524 18.528C7.61272 19.3634 7.38928 20.3262 7.44975 21.3145C7.56319 23.1157 7.84492 26.6174 8.45729 29.8873C7.97743 29.8961 7.49709 29.9041 7.01755 29.9133C3.76242 29.9747 0.930757 32.3359 0.284796 35.5269C-0.0949059 37.3965 -0.0949059 39.2925 0.284639 41.1612C0.75872 43.5066 2.42019 45.4423 4.61464 46.2969C4.7434 48.6824 4.96388 52.075 5.32483 55.9308C4.35745 58.6707 3.40991 61.4116 2.49082 64.1469C1.7 66.5031 2.75879 69.118 4.95512 70.2302C5.79078 70.652 6.66941 70.9793 7.56866 71.2068C8.40916 73.5902 9.90922 75.6464 11.9418 77.1832C14.1862 78.8801 16.8607 79.777 19.6761 79.777H60.3241C63.1395 79.777 65.8139 78.8801 68.0584 77.1832C70.0911 75.6462 71.5912 73.5899 72.4317 71.2062C73.3352 70.9767 74.2136 70.649 75.0455 70.2285C77.2423 69.1183 78.3014 66.5031 77.5092 64.1453C76.5893 61.4084 75.6421 58.6676 74.6755 55.9297C75.0363 52.0741 75.2568 48.6816 75.3856 46.2962C77.5825 45.4396 79.2419 43.505 79.7152 41.1623C80.0948 39.2924 80.0948 37.3964 79.7151 35.5274ZM49.4433 18.8135C49.8184 22.4121 50.0268 26.0403 50.0677 29.6284C41.3752 29.578 32.6685 29.5922 23.9847 29.6725C24.0246 26.0705 24.2332 22.4274 24.6096 18.8133C32.8537 17.9908 41.1988 17.9908 49.4433 18.8135ZM37.4673 5.65113C37.5526 5.53081 37.679 5.38737 37.7967 5.38737C38.6404 5.38737 40.4102 7.79464 41.6688 10.6538C41.876 11.1604 42.4098 11.4582 42.9536 11.364C43.5152 11.2665 43.9252 10.7793 43.9252 10.2093C43.9252 10.138 43.9184 10.0666 43.9053 9.99629C43.3195 6.0363 43.9706 3.59543 44.5532 2.91962C44.7663 2.67227 44.9986 2.56679 45.3299 2.56679C48.0316 2.56679 48.122 7.94231 48.1222 7.99512C48.1222 8.54905 48.5102 9.02688 49.0521 9.14126C49.5949 9.25579 50.1424 8.97469 50.3663 8.46795C51.2042 6.57272 53.5641 2.83384 55.5201 3.37573C55.7986 3.45292 55.9769 3.60699 56.1159 3.89075C56.6145 4.90673 56.3477 7.15384 55.4747 9.44986C52.3753 11.2316 49.2841 13.5108 46.3528 16.1964C43.5323 15.9896 40.7036 15.8768 37.8742 15.8581C36.2413 10.7388 36.6238 6.84117 37.4673 5.65113ZM25.7448 10.1227H18.6139L18.6147 8.07215H25.745V10.1227H25.7448ZM18.5358 2.70133H25.8232C26.314 2.70133 26.7133 3.10056 26.7133 3.59136V5.72785H17.6458V3.59152C17.6458 3.10072 18.045 2.70133 18.5358 2.70133ZM10.768 29.493C10.1738 26.3374 9.89953 22.9221 9.78905 21.1694C9.75702 20.644 9.87312 20.136 10.1259 19.6984C12.3612 15.812 16.6813 13.0992 17.7548 12.4664H26.6036C27.2885 12.8695 29.2985 14.121 31.2444 15.986C28.6302 16.1045 26.0204 16.3007 23.4213 16.58C22.8752 16.6386 22.4431 17.0686 22.3819 17.6144C21.9311 21.6295 21.684 25.6877 21.6414 29.6962C18.0431 29.7345 14.4491 29.783 10.8627 29.8437C10.8242 29.7294 10.7908 29.6128 10.768 29.493ZM6.98848 46.7744C6.99833 46.7747 7.00801 46.7756 7.01786 46.7758L7.05536 46.7764C7.58085 46.7862 8.10634 46.7948 8.63198 46.8042C8.16228 48.0668 7.69585 49.3307 7.2349 50.5965C7.13161 49.1688 7.05098 47.8808 6.98848 46.7744ZM60.3239 77.433H19.676C15.5375 77.433 11.7901 74.949 10.1088 71.2432C11.6483 70.8593 12.9834 69.7512 13.5962 68.1883C14.2716 66.4668 14.8852 64.8808 15.4722 63.34C15.7027 62.7351 15.3993 62.0581 14.7944 61.8276C14.1895 61.5973 13.5125 61.9006 13.282 62.5054C12.6976 64.0392 12.0866 65.618 11.4141 67.3326C10.9285 68.5713 9.60467 69.2808 8.33181 68.9818C7.5321 68.7953 6.75129 68.5114 6.01251 68.1384C4.84825 67.5489 4.28948 66.1534 4.71262 64.893C7.71726 55.9517 10.9947 46.9472 14.4538 38.1298C14.9402 36.8909 16.2649 36.1809 17.5343 36.4782C18.3419 36.6677 19.1228 36.9521 19.8568 37.324C21.0213 37.9122 21.5796 39.3071 21.1556 40.5688C19.1892 46.4197 17.096 52.3277 14.9338 58.1289C14.7077 58.7353 15.0161 59.4101 15.6226 59.6363C16.2291 59.8625 16.9039 59.5539 17.13 58.9475C18.6034 54.994 20.0438 50.9912 21.4354 46.9905C27.5975 47.0574 33.7981 47.0919 39.9999 47.0919C46.2022 47.0919 52.4034 47.0575 58.566 46.9905C61.04 54.1034 63.6657 61.2104 66.4035 68.1872C67.0165 69.7501 68.3517 70.8582 69.8914 71.2423C68.2104 74.9485 64.4625 77.433 60.3239 77.433ZM73.9882 68.1366C73.2513 68.5089 72.4701 68.7933 71.6664 68.9816C70.3965 69.2793 69.0717 68.5697 68.5855 67.3309C65.1335 58.5337 61.8561 49.5292 58.8443 40.5674C58.4204 39.3061 58.9788 37.9111 60.1434 37.3226C60.88 36.9503 61.6613 36.6659 62.4651 36.4776C62.6599 36.432 62.856 36.4099 63.0501 36.4099C64.1219 36.4099 65.1344 37.0795 65.546 38.1283C68.998 46.9255 72.2753 55.93 75.2871 64.8919C75.711 66.1532 75.1526 67.5481 73.9882 68.1366ZM71.3688 46.8042C71.8935 46.7948 72.4184 46.7862 72.9431 46.7764L72.985 46.7756C72.9939 46.7755 73.0028 46.7745 73.0117 46.7744C72.9491 47.8803 72.8684 49.1679 72.7653 50.595C72.3043 49.3293 71.8381 48.066 71.3688 46.8042ZM77.4178 40.6968C77.0634 42.4503 75.7121 43.8621 73.968 44.2949C73.6392 44.3787 73.2917 44.4249 72.9383 44.4323L72.8994 44.433C72.0984 44.448 71.2976 44.4619 70.4966 44.4755C69.5872 42.0628 68.6645 39.6594 67.7278 37.2721C66.8195 34.9566 64.3262 33.634 61.9304 34.1956C60.9455 34.4264 59.9884 34.7747 59.086 35.231C56.8892 36.3412 55.8301 38.9564 56.6224 41.3142C56.9964 42.4272 57.3746 43.5408 57.7566 44.6546C45.9637 44.7771 34.035 44.7771 22.242 44.6546C22.6242 43.5405 23.0036 42.4269 23.3769 41.3157C24.1699 38.9572 23.1106 36.3418 20.9145 35.2325C20.0157 34.7772 19.0586 34.4286 18.0692 34.1963C15.6733 33.6351 13.1809 34.958 12.2716 37.2736C11.3346 39.6619 10.4122 42.0648 9.50358 44.4757C8.70198 44.4621 7.90023 44.448 7.09864 44.4332L7.06411 44.4326C6.70769 44.4251 6.36049 44.3788 6.02485 44.2933C4.2876 43.8622 2.93599 42.4505 2.58144 40.6959C2.26471 39.1357 2.26471 37.5536 2.5816 35.9927C3.01162 33.8689 4.89575 32.2977 7.06192 32.2568C28.9179 31.8373 51.0815 31.8373 72.9378 32.2568C75.1037 32.2977 76.9878 33.8689 77.418 35.9935C77.735 37.5534 77.735 39.1355 77.4178 40.6968Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M24.5096 51.1036H24.4305C21.7466 51.11 19.5808 53.2284 19.4998 55.9263C19.4047 59.1038 19.4047 62.3261 19.4998 65.5035C19.5808 68.2013 21.7465 70.3197 24.4314 70.3262H24.5096C27.1934 70.3197 29.3593 68.2014 29.4402 65.5035C29.5354 62.3261 29.5354 59.1038 29.4402 55.9263C29.3591 53.2282 27.1934 51.11 24.5096 51.1036ZM27.0973 65.4332C27.0553 66.8355 25.8918 67.9789 24.5049 67.9822H24.4361C23.0481 67.9789 21.8846 66.8353 21.8426 65.4332C21.7487 62.3023 21.7487 59.1274 21.8426 55.9965C21.8846 54.5942 23.0481 53.4508 24.4369 53.4475H24.503H24.5038C25.8918 53.4508 27.0553 54.5942 27.0973 55.9965C27.1912 59.1274 27.1912 62.3023 27.0973 65.4332Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M40.0393 51.1036H39.9603C37.2764 51.11 35.1106 53.2284 35.0296 55.9263C34.9345 59.1038 34.9345 62.3261 35.0296 65.5035C35.1106 68.2013 37.2763 70.3197 39.9612 70.3262H40.0393C42.7233 70.3197 44.889 68.2013 44.97 65.5035C45.0651 62.3261 45.0651 59.1038 44.97 55.9263C44.889 53.2284 42.7233 51.11 40.0393 51.1036ZM42.6271 65.4332C42.5851 66.8355 41.4217 67.9789 40.0348 67.9822H39.9661C38.578 67.9789 37.4146 66.8353 37.3725 65.4332C37.2786 62.3023 37.2786 59.1274 37.3725 55.9965C37.4146 54.5942 38.578 53.4508 39.9668 53.4475H40.0329H40.0337C41.4217 53.4508 42.5851 54.5942 42.6271 55.9965C42.721 59.1274 42.721 62.3023 42.6271 65.4332Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M55.5692 51.1036H55.4903C52.8063 51.11 50.6406 53.2284 50.5597 55.9263C50.4645 59.1038 50.4645 62.3261 50.5597 65.5035C50.6406 68.2013 52.8063 70.3198 55.4912 70.3262H55.5694C58.2534 70.3197 60.4191 68.2013 60.5 65.5035C60.5952 62.3261 60.5952 59.1038 60.5 55.9263C60.4191 53.2284 58.2534 51.11 55.5692 51.1036ZM58.1571 65.4332C58.1151 66.8355 56.9518 67.9789 55.5647 67.9822H55.4961C54.1081 67.9789 52.9447 66.8353 52.9027 65.4332C52.8086 62.3023 52.8086 59.1274 52.9027 55.9965C52.9447 54.5942 54.1081 53.4508 55.4969 53.4475H55.563H55.5639C56.9519 53.4508 58.1152 54.5942 58.1573 55.9965C58.251 59.1274 58.251 62.3023 58.1571 65.4332Z\" fill=\"#3BB77E\"/>\r\n    </svg>\r\n)\r\n\r\nexport const Category2 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0)\">\r\n    <path d=\"M64.5 35.5H34.5V37.5L35 38.5L37.5 41L39.5 42L40.5 43.5L40 45.5L36.5 47L34.5 50.5L34 61L35.5 72.5L36.5 76L38.5 78C39 78.1667 40.2 78.5 41 78.5C42 78.5 46.5 79 47.5 79H53H56.5L55.5 77C55.1667 76.1667 54.5 74.2 54.5 73C54.5 71.8 54.1667 68.5 54 67V59.5C54 58.7 55 52.8333 55.5 50V48.5C55.5 48 57 48 57.5 47.5C58 47 59.5 47 60 47C60.5 47 62 46.5 62.5 46.5C63 46.5 62 46 61.5 45.5C61 45 61.5 45 61.5 44.5C61.5 44 61.5 43 61 42.5C60.6 42.1 61.8333 41.3333 62.5 41C63 40.8333 64 40.4 64 40C64 39.6 65 39.1667 65.5 39L66.5 37.5V36L64.5 35.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M7.55737 61.5928C7.55737 64.0975 9.59503 66.1352 12.0996 66.1352C14.6042 66.1352 16.6419 64.0975 16.6419 61.5928C16.6419 59.0881 14.6042 57.0505 12.0996 57.0505C9.59503 57.0505 7.55737 59.0881 7.55737 61.5928ZM14.2983 61.5928C14.2983 62.8052 13.3121 63.7914 12.0997 63.7914C10.8874 63.7914 9.90128 62.8052 9.90128 61.5928C9.90128 60.3805 10.8875 59.3942 12.0997 59.3942C13.3119 59.3942 14.2983 60.3806 14.2983 61.5928Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M17.8742 55.3313C19.8461 55.3313 21.4504 53.727 21.4504 51.7552C21.4504 49.7833 19.8461 48.1791 17.8742 48.1791C15.9023 48.1791 14.2981 49.7833 14.2981 51.7552C14.2981 53.727 15.9023 55.3313 17.8742 55.3313ZM17.8742 50.5227C18.5539 50.5227 19.1067 51.0755 19.1067 51.755C19.1067 52.4345 18.5539 52.9874 17.8742 52.9874C17.1947 52.9874 16.6418 52.4345 16.6418 51.755C16.6418 51.0755 17.1948 50.5227 17.8742 50.5227Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M30.3449 69.9974C30.3449 68.0255 28.7405 66.4213 26.7686 66.4213C24.7968 66.4213 23.1924 68.0255 23.1924 69.9974C23.1924 71.9692 24.7968 73.5735 26.7686 73.5735C28.7405 73.5735 30.3449 71.9692 30.3449 69.9974ZM25.5363 69.9974C25.5363 69.3178 26.0891 68.765 26.7688 68.765C27.4485 68.765 28.0013 69.3178 28.0013 69.9974C28.0013 70.6769 27.4485 71.2297 26.7688 71.2297C26.0891 71.2297 25.5363 70.6769 25.5363 69.9974Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M77.4983 50.2262C77.1608 47.7714 75.0402 45.9203 72.5657 45.9203H71.7355L72.5354 43.8403C72.7677 43.2363 72.4663 42.5581 71.8621 42.3259C71.2579 42.0934 70.5799 42.3952 70.3479 42.9991L69.2246 45.9203H64.3479C64.1827 45.8411 64.0155 45.7667 63.8452 45.7031C62.6269 45.2491 62.0093 44.5417 62.0093 43.6012C62.0093 42.7248 63.491 42.0139 64.1291 41.7484C66.0224 40.9584 67.3794 39.2875 67.7591 37.2778C68.5457 33.1047 68.9029 28.6397 69.046 26.3481C69.1188 25.1581 68.8494 23.9939 68.2671 22.9814C65.2077 17.662 59.6658 14.04 57.8124 12.9313V9.18375H57.8735C58.5208 9.18375 59.0454 8.65906 59.0454 8.01188V3.79797C59.0454 1.70375 57.3415 0 55.2472 0H45.9663C43.8722 0 42.1683 1.70375 42.1683 3.79797V8.01188C42.1683 8.65906 42.6929 9.18375 43.3402 9.18375H43.4016V12.9308C42.2054 13.6463 39.4726 15.4098 36.8626 17.9995V17.1773C38.1974 16.4552 39.1062 15.0423 39.1062 13.4211C39.1062 11.0678 37.1916 9.15344 34.8383 9.15344H16.3219C13.9687 9.15344 12.0543 11.068 12.0543 13.4211C12.0543 15.0427 12.9635 16.4558 14.2988 17.1778V20.7633C12.6947 21.6991 8.33709 24.4806 4.49834 29.092C3.80865 29.9228 3.36912 30.9309 3.22725 32.008C3.03646 33.4573 2.75053 35.8236 2.47209 38.8648C2.41303 39.5094 2.88771 40.0797 3.53225 40.1387C3.5685 40.142 3.60459 40.1438 3.64037 40.1438C4.23928 40.1438 4.75037 39.6869 4.806 39.0786C5.081 36.0755 5.36271 33.7422 5.55084 32.3141C5.61209 31.8494 5.7674 31.4073 6.00365 31.0122H32.5605C32.7672 32.9616 33.056 35.1581 33.4546 37.277C33.8324 39.2867 35.1896 40.9583 37.0858 41.7487C37.7224 42.0136 39.203 42.7242 39.203 43.6011C39.203 44.542 38.586 45.2492 37.3682 45.7033C35.1815 46.52 33.6397 48.5347 33.4404 50.8356C32.9791 56.1433 32.6368 66.4137 35.5277 75.5647C35.7712 76.3358 36.1508 77.0327 36.6346 77.6342C36.4096 77.648 36.1841 77.6564 35.9577 77.6564H15.2016C9.536 77.6564 4.77287 73.2384 4.35787 67.5986C3.82193 60.3138 3.84771 52.2808 4.43475 43.7227C4.47896 43.0769 3.99146 42.5177 3.34584 42.4733C2.70068 42.4286 2.14068 42.9164 2.09646 43.5622C1.50193 52.2306 1.47631 60.3755 2.02053 67.7705C2.26584 71.1061 3.75318 74.1966 6.2085 76.473C8.66162 78.7473 11.8555 80 15.2016 80H35.9579C37.0902 80 38.2112 79.8562 39.2969 79.5738C40.0155 79.8495 40.7937 79.9992 41.6016 79.9992L72.5657 80C75.0402 80 77.1608 78.1489 77.4983 75.6939C78.6599 67.2444 78.6599 58.6759 77.4983 50.2262ZM75.9165 67.3887C74.983 67.9598 73.921 68.2602 72.814 68.2602C69.5297 68.2602 66.8579 65.5889 66.8579 62.3056C66.8579 59.0214 69.5299 56.3494 72.814 56.3494C73.8908 56.3494 74.9263 56.6336 75.8394 57.1742C76.0555 60.5755 76.0819 63.9856 75.9165 67.3887ZM66.7068 26.2033C66.5949 27.9941 66.3491 31.1444 65.864 34.4075H35.3507C34.8663 31.1473 34.6188 27.9956 34.5057 26.2047C34.461 25.4734 34.6241 24.7634 34.9783 24.1494C35.1213 23.9008 35.2712 23.6562 35.4263 23.4153H65.7871C65.9424 23.6562 66.0924 23.9009 66.2354 24.1495C66.5885 24.7633 66.7513 25.4739 66.7068 26.2033ZM16.6426 17.6889H34.5188V20.2778H16.6426V17.6889ZM44.5121 3.79797C44.5121 2.99609 45.1644 2.34375 45.9663 2.34375H55.2472C56.0491 2.34375 56.7016 2.99609 56.7016 3.79797V6.84H44.5121V3.79797ZM55.4687 9.18375V12.4367H45.7454V9.18375H55.4687ZM44.8824 14.7805H56.3313C57.3207 15.3584 61.0391 17.6506 64.0146 21.0717H37.1988C40.1743 17.65 43.8941 15.3577 44.8824 14.7805ZM16.3219 11.4972H34.8383C35.8993 11.4972 36.7624 12.3603 36.7624 13.4211C36.7624 14.4816 35.9001 15.3442 34.8397 15.345H16.3204C15.2601 15.3442 14.3979 14.4814 14.3979 13.4211C14.3979 12.3603 15.261 11.4972 16.3219 11.4972ZM8.03646 28.6684C11.4183 25.2014 14.848 23.145 15.7721 22.6219H33.1605C33.0888 22.7406 33.0169 22.8591 32.9477 22.9795C32.3638 23.9914 32.0937 25.1561 32.1666 26.3502C32.2062 26.9769 32.2621 27.7672 32.338 28.6684H8.03646ZM72.5657 77.6562H59.6124V77.6555H58.7907C57.4879 77.6477 56.3736 76.6702 56.1955 75.3748C56.011 74.0316 55.8558 72.6797 55.7343 71.3567C55.6749 70.7123 55.1046 70.237 54.4601 70.297C53.8155 70.3562 53.3411 70.9267 53.4004 71.5713C53.5252 72.9289 53.6844 74.3158 53.8736 75.6939C53.9721 76.4095 54.2229 77.0733 54.589 77.6553H41.6016C39.8337 77.6553 38.291 76.5314 37.7629 74.8586C34.9941 66.0942 35.3293 56.1725 35.7754 51.038C35.8971 49.633 36.8443 48.4008 38.1876 47.8989C40.3224 47.103 41.5468 45.5364 41.5468 43.6009C41.5468 42.4445 40.9291 40.8089 37.9869 39.585C36.8227 39.0997 35.9894 38.075 35.758 36.8438C35.7522 36.813 35.7466 36.7819 35.741 36.7511H65.473C65.4674 36.7816 65.4618 36.8123 65.456 36.8428C65.2232 38.0747 64.3897 39.0998 63.2276 39.5847C60.2832 40.8095 59.6652 42.4448 59.6652 43.6011C59.6652 44.4583 59.9066 45.2427 60.3599 45.9203H58.806C56.3315 45.9203 54.2108 47.7714 53.8733 50.2261C53.1169 55.7188 52.8513 61.3153 53.0836 66.86C53.1108 67.5067 53.6633 68.0081 54.3035 67.9817C54.9502 67.9547 55.4526 67.4084 55.4254 66.7619C55.199 61.3564 55.4579 55.9005 56.1952 50.5456C56.3743 49.245 57.4966 48.2641 58.8062 48.2641H72.5657C73.8752 48.2641 74.9976 49.245 75.1766 50.5455C75.3572 51.8591 75.5057 53.1759 75.6287 54.4945C74.7347 54.1723 73.7863 54.0056 72.814 54.0056C68.2374 54.0056 64.5141 57.7289 64.5141 62.3056C64.5141 66.8814 68.2374 70.6039 72.814 70.6039C73.829 70.6039 74.8169 70.4228 75.7447 70.0723C75.6061 71.8434 75.419 73.6117 75.1766 75.3745C74.9976 76.6753 73.8752 77.6562 72.5657 77.6562Z\" fill=\"#3BB77E\"/>\r\n    </g>\r\n    <defs>\r\n    <clipPath id=\"clip0\">\r\n    <rect width=\"80\" height=\"80\" fill=\"white\"/>\r\n    </clipPath>\r\n    </defs>\r\n    </svg>\r\n)\r\n\r\nexport const Category3 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <rect x=\"35\" y=\"54\" width=\"30\" height=\"24\" rx=\"6\" fill=\"#FDC040\"/>\r\n    <path d=\"M6 7.5L7 10L10 9L16 8.5L25.5 8L35.5 8.5L52.5 10L54 8.5L55 6C55.1667 5.33333 55.5 3.9 55.5 3.5C55.5 3.1 54.1667 3 53.5 3L52 3.5L50.5 4H47.5C47 3.5 45.9 2.5 45.5 2.5C45.1 2.5 44.3333 1.83333 44 1.5H41.5L40 3L38 4H36L33.5 2.5L31 1L28.5 1.5L27 3L24.5 4L22 3.5C21.5 3.33333 20.4 3 20 3C19.6 3 19.1667 2 19 1.5H17.5L15.5 2C15.1667 2.33333 14.4 3 14 3C13.5 3 12.5 3.5 12.5 4C12.5 4.5 11 4 10.5 4C10 4 9.5 4 9 3.5C8.6 3.1 7.83333 3 7.5 3H5.5L5 5L6 7.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M30.138 51.3666C35.4399 51.3666 40.4371 49.8171 44.2099 47.0033C48.0854 44.1127 50.2197 40.2373 50.2197 36.091C50.2197 31.9447 48.0854 28.0693 44.2099 25.1788C40.4371 22.365 35.4399 20.8154 30.138 20.8154C24.8362 20.8154 19.8389 22.365 16.0662 25.1788C12.1908 28.0693 10.0564 31.9447 10.0564 36.091C10.0564 40.2373 12.1907 44.1127 16.0662 47.0033C19.8389 49.8171 24.8362 51.3666 30.138 51.3666ZM12.4002 36.091C12.4002 28.9604 20.3574 23.1592 30.138 23.1592C39.9187 23.1592 47.8759 28.9604 47.8759 36.091C47.8759 43.2216 39.9187 49.0228 30.138 49.0228C20.3574 49.0228 12.4002 43.2216 12.4002 36.091Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M74.1882 68.7062C75.1642 67.9488 75.6953 67.0141 75.6953 65.9922C75.6953 64.9705 75.1643 64.0358 74.1882 63.2784C75.0425 62.6861 75.6223 62.0009 75.92 61.2293C76.1795 60.5567 76.345 59.4732 75.6592 58.1308C75.1246 57.085 74.2781 56.4064 73.2107 56.1681C71.5008 55.7866 69.2367 56.5566 66.4681 58.4568C65.1604 54.8953 61.8294 52.3456 57.8376 52.1648C57.0002 52.1268 56.1607 52.0971 55.3202 52.0712C56.1277 38.1217 55.8716 23.9894 54.5558 10.0343C54.9889 9.33659 55.8177 7.79187 56.3379 5.48933C56.6512 4.10336 56.0613 2.74005 54.8357 2.01613C53.6286 1.30346 52.1734 1.44253 51.1286 2.37067C50.604 2.83662 50.1084 3.12537 49.2593 3.12537C48.1441 3.12537 47.6461 2.63708 46.8924 1.89801C46.03 1.05221 44.9569 0 42.8845 0C40.8123 0 39.7393 1.05221 38.8771 1.89769C38.1233 2.63677 37.6253 3.12506 36.5105 3.12506C35.3954 3.12506 34.8976 2.63677 34.1439 1.89769C33.2815 1.05221 32.2083 0 30.1361 0C28.0639 0 26.9909 1.05221 26.1289 1.89769C25.3751 2.63677 24.8771 3.12506 23.7622 3.12506C22.6474 3.12506 22.1496 2.63677 21.3956 1.89769C20.5336 1.05221 19.4606 0 17.3884 0C15.3163 0 14.2435 1.05221 13.3814 1.89769C12.6276 2.63677 12.1298 3.12506 11.0153 3.12506C10.1665 3.12506 9.67087 2.83631 9.14649 2.37052C8.10209 1.44253 6.64738 1.30331 5.44001 2.01566C4.2142 2.73927 3.62451 4.10242 3.93764 5.48839C4.45796 7.79187 5.28719 9.3369 5.72033 10.0344C5.51767 12.1831 5.33579 14.3743 5.18157 16.5608C5.13594 17.2064 5.62236 17.7668 6.26799 17.8122C6.9166 17.8572 7.47396 17.3713 7.51958 16.7256C7.66318 14.6903 7.82974 12.6492 8.01615 10.6443C22.6999 8.87627 37.5766 8.87627 52.2611 10.6443C53.5366 24.3814 53.7747 38.2873 52.9759 52.0146C49.2715 51.9495 45.5533 51.9976 41.8706 52.1645C37.8788 52.3454 34.5478 54.895 33.2401 58.4565C30.4716 56.5563 28.2072 55.7861 26.4974 56.1678C25.4301 56.4061 24.5835 57.0847 24.049 58.1307C23.3632 59.4729 23.5286 60.5563 23.788 61.229C24.0072 61.7973 24.3807 62.3181 24.9027 62.79C19.2951 62.6315 13.6274 62.2129 8.01615 61.5367C6.77785 48.2017 6.51331 34.6976 7.2302 21.3845C7.26504 20.7382 6.76925 20.186 6.12299 20.1513C5.47282 20.1157 4.92469 20.6123 4.88969 21.2585C4.15717 34.861 4.44218 48.6594 5.73314 62.279C5.30344 62.9667 4.46296 64.5191 3.93811 66.8435C3.62435 68.2299 4.21405 69.5937 5.44032 70.3178C6.64722 71.0306 8.10256 70.8909 9.14649 69.9632C9.67165 69.4973 10.1676 69.2085 11.0156 69.2085C12.1308 69.2085 12.6289 69.6968 13.3828 70.4361C14.2452 71.2816 15.3183 72.3336 17.3906 72.3336C19.4631 72.3336 20.5362 71.2814 21.3986 70.4361C22.1524 69.6968 22.6507 69.2085 23.7657 69.2085C24.1437 69.2085 24.4512 69.266 24.7198 69.3684C24.2929 69.7936 23.9802 70.2561 23.7876 70.7554C23.5282 71.4281 23.3627 72.5116 24.0485 73.8539C24.583 74.8997 25.4296 75.5784 26.497 75.8166C26.7811 75.8801 27.0803 75.9116 27.3948 75.9116C28.9728 75.9116 30.9311 75.1108 33.2391 73.5269C34.5465 77.089 37.8778 79.6391 41.8701 79.8198C44.5191 79.9398 47.1863 79.9998 49.854 79.9998C52.5211 79.9998 55.1888 79.9398 57.8373 79.8198C61.8295 79.6389 65.1607 77.0889 66.4681 73.5267C68.7761 75.1108 70.7344 75.9115 72.3124 75.9115C72.6268 75.9115 72.9263 75.8798 73.2102 75.8165C74.2776 75.5782 75.1242 74.8996 75.6587 73.8536C76.3445 72.5114 76.179 71.428 75.9195 70.7553C75.6223 69.9836 75.0425 69.2984 74.1882 68.7062ZM7.45552 8.35282C7.09504 7.68468 6.57909 6.54466 6.22378 4.97197C6.09487 4.40118 6.50347 4.10961 6.6316 4.03399C6.78644 3.94258 7.1902 3.76773 7.59005 4.12289C8.29553 4.74947 9.32243 5.46886 11.0153 5.46886C13.0873 5.46886 14.1602 4.41665 15.0224 3.57116C15.776 2.83209 16.274 2.3438 17.3885 2.3438C18.5032 2.3438 19.0011 2.83209 19.755 3.57116C20.6169 4.41665 21.69 5.46886 23.7622 5.46886C25.8345 5.46886 26.9076 4.41665 27.7697 3.57116C28.5234 2.83209 29.0214 2.3438 30.1361 2.3438C31.251 2.3438 31.749 2.83209 32.5027 3.57116C33.3651 4.41665 34.4382 5.46886 36.5105 5.46886C38.5827 5.46886 39.6557 4.41665 40.5179 3.57116C41.2716 2.83209 41.7696 2.3438 42.8845 2.3438C43.9997 2.3438 44.4976 2.83209 45.2514 3.57116C46.1139 4.41665 47.1871 5.46886 49.2595 5.46886C50.9523 5.46886 51.9794 4.74962 52.6851 4.12289C53.0845 3.76789 53.4891 3.94242 53.6441 4.03414C53.7724 4.10992 54.1811 4.40149 54.0519 4.97244C53.6966 6.5456 53.1803 7.68578 52.8208 8.35266C37.7647 6.517 22.51 6.517 7.45552 8.35282ZM56.4354 77.5298C54.8575 77.5893 53.2747 77.6292 51.6898 77.6457C52.3905 72.505 53.6908 67.3152 55.5646 62.1986C55.7871 61.5907 55.4749 60.9178 54.8671 60.6951C54.2591 60.4726 53.5864 60.7849 53.3636 61.3926C51.3928 66.7746 50.0354 72.2395 49.3231 77.6531C47.7477 77.6482 46.1735 77.622 44.603 77.5748C46.1913 66.0239 50.4279 57.1438 51.8911 54.3403C53.3656 54.3575 54.8383 54.395 56.3066 54.4493C55.9679 55.1414 55.5688 55.9905 55.1363 56.9786C54.8768 57.5714 55.1468 58.2625 55.7397 58.5221C55.8927 58.5891 56.0521 58.6208 56.2091 58.6208C56.6605 58.6208 57.0907 58.3585 57.2832 57.9186C57.9007 56.5084 58.4446 55.3962 58.8326 54.6389C60.2206 54.9114 61.4625 55.57 62.4442 56.4995C60.5826 60.6673 57.6695 68.3049 56.4354 77.5298ZM19.7581 68.7621C19.0042 69.5012 18.5059 69.9896 17.3909 69.9896C16.2758 69.9896 15.7777 69.5014 15.0239 68.7623C14.1614 67.9168 13.0883 66.8646 11.0159 66.8646C9.32462 66.8646 8.29741 67.5835 7.59052 68.2106C7.19082 68.5656 6.78707 68.391 6.63238 68.2995C6.50394 68.2237 6.09518 67.932 6.22456 67.3602C6.60644 65.6688 7.17504 64.4767 7.53536 63.8361C13.0541 64.5072 18.6285 64.938 24.1504 65.1147C24.0605 65.3983 24.0132 65.6914 24.0132 65.9924C24.0132 66.2964 24.0613 66.5927 24.1532 66.879C24.0277 66.8705 23.8996 66.8647 23.7663 66.8647C21.6936 66.8646 20.6205 67.9168 19.7581 68.7621ZM27.0081 73.5291C26.7492 73.4713 26.4159 73.3347 26.1362 72.7874C25.8198 72.1678 25.8924 71.8123 25.9749 71.5989C26.2176 70.97 27.1026 70.3389 28.467 69.8218C28.9267 69.6476 29.2289 69.2051 29.2238 68.7135C29.2186 68.222 28.9072 67.7859 28.4439 67.6215C27.01 67.1124 26.357 66.4201 26.357 65.9921C26.357 65.5641 27.0101 64.8717 28.4439 64.3627C28.9072 64.1983 29.2186 63.7622 29.2238 63.2706C29.2288 62.779 28.9267 62.3365 28.467 62.1625C27.1026 61.6454 26.2176 61.0145 25.9749 60.3854C25.8926 60.172 25.8198 59.8165 26.1362 59.1971C26.4159 58.6496 26.7492 58.513 27.0081 58.4552C27.5601 58.3319 29.19 58.348 32.6854 60.9396C32.6749 61.0571 32.6646 61.1746 32.6584 61.2934C32.4938 64.4111 32.4938 67.5727 32.6584 70.6904C32.6646 70.8092 32.6749 70.9267 32.6854 71.0442C29.1903 73.636 27.5609 73.6522 27.0081 73.5291ZM34.9987 61.4171C35.1975 57.6483 38.1975 54.6772 41.9767 54.5061C42.0154 54.5043 42.0545 54.5033 42.0932 54.5014C40.4852 57.8057 37.4827 64.7533 35.7983 73.5358C35.3373 72.641 35.0551 71.6364 34.9987 70.5675C34.8387 67.5316 34.8387 64.453 34.9987 61.4171ZM37.7569 75.911C39.4947 65.2297 43.409 57.0166 44.763 54.405C46.2624 54.3612 47.7654 54.3365 49.2691 54.3315C47.4194 58.0914 43.6997 66.6841 42.2496 77.4893C42.1587 77.4854 42.0676 77.4826 41.9767 77.4785C40.3798 77.4062 38.923 76.8324 37.7569 75.911ZM64.7094 70.5673C64.5304 73.9633 62.0763 76.7107 58.8276 77.3464C59.939 69.4814 62.2883 62.8464 64.038 58.7118C64.4226 59.539 64.6585 60.4515 64.7094 61.417C64.8694 64.453 64.8694 67.5315 64.7094 70.5673ZM73.5721 72.7872C73.2924 73.3347 72.9591 73.4713 72.7002 73.5291C72.1479 73.6521 70.5182 73.6361 67.0229 71.0447C67.0334 70.9272 67.0437 70.8095 67.05 70.6908C67.2145 67.573 67.2145 64.4114 67.05 61.2937C67.0437 61.1749 67.0334 61.0574 67.0229 60.9399C70.5178 58.3485 72.1474 58.3321 72.7002 58.4555C72.9591 58.5133 73.2924 58.6499 73.5721 59.1971C73.8885 59.8166 73.8157 60.1721 73.7332 60.3856C73.4906 61.0145 72.6055 61.6456 71.2411 62.1625C70.7816 62.3367 70.4794 62.7792 70.4844 63.2708C70.4896 63.7623 70.801 64.1984 71.2643 64.3628C72.6983 64.8719 73.3513 65.5643 73.3513 65.9922C73.3513 66.4202 72.6982 67.1126 71.2643 67.6216C70.801 67.786 70.4896 68.2221 70.4844 68.7137C70.4792 69.2053 70.7814 69.6478 71.2411 69.822C72.6055 70.3389 73.4906 70.97 73.7334 71.5991C73.8156 71.8123 73.8885 72.1678 73.5721 72.7872Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M22.2968 32.2231C27.5 31.532 32.7757 31.532 37.9786 32.2231C38.031 32.23 38.083 32.2334 38.1344 32.2334C38.713 32.2334 39.2163 31.805 39.2946 31.2158C39.3799 30.5742 38.9288 29.985 38.2872 29.8998C32.8801 29.1817 27.3961 29.1817 21.9882 29.8998C21.3466 29.985 20.8955 30.5742 20.9808 31.2158C21.0661 31.8573 21.6552 32.3081 22.2968 32.2231Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M39.2946 41.2714C39.2095 40.6299 38.6198 40.1792 37.9786 40.2641C32.7757 40.9552 27.5 40.9552 22.2968 40.2641C21.6555 40.1789 21.066 40.6299 20.9808 41.2714C20.8955 41.913 21.3466 42.5022 21.9882 42.5874C24.692 42.9465 27.4147 43.126 30.1376 43.126C32.8606 43.126 35.5834 42.9465 38.2871 42.5874C38.929 42.5022 39.3799 41.913 39.2946 41.2714Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M42.4695 36.2435C42.4695 35.5963 41.9449 35.0716 41.2976 35.0716H18.9785C18.3312 35.0716 17.8066 35.5963 17.8066 36.2435C17.8066 36.8907 18.3312 37.4154 18.9785 37.4154H41.2976C41.9448 37.4154 42.4695 36.8907 42.4695 36.2435Z\" fill=\"#3BB77E\"/>\r\n    </svg>\r\n)\r\n\r\nexport const Category4 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0)\">\r\n    <path d=\"M52.5 50.5L50.5 55L52 58V59.5L52.5 61.5C53.1667 61.8333 54.6 62.5 55 62.5C55.4 62.5 56.5 62.8333 57 63C57 63.5 56.9 64.6 56.5 65C56.1 65.4 55.3333 65.5 55 65.5C54.6667 66.1667 54 67.6 54 68C54 68.5 53.5 70 53.5 70.5C53.5 70.9 52.5 72.6667 52 73.5L52.5 78C54 78.1667 57.1 78.5 57.5 78.5H65.5C68.1667 77.6667 73.5 75.9 73.5 75.5C73.5 75.1 75.5 74.3333 76.5 74L78.5 70L76.5 65.5L71 54.5L70 54C69.3333 54.1667 67.9 54.4 67.5 54C67 53.5 65.5 53.5 65.5 53C65.5 52.5 64.5 52.5 64.5 52C64.5 51.5 64 51 64 50.5V48.5C64 48 64.5 47.5 64.5 47C64.5 46.6 65.5 46.1667 66 46V44.5C65.6667 43.8333 65 42.4 65 42C65 41.5 63.5 40.5 63 40.5C62.5 40.5 61 40 60.5 40C60.1 40 58.6667 40.6667 58 41L56 44.5L52.5 50.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M32.5 30L24 29.5L23.5 31.5V36L24 43C24.5 43.1667 25.7 43.6 26.5 44C27.5 44.5 30.5 44 31 44C31.5 44 38 43.5 38.5 43C39 42.5 39.5 41.5 40 41C40.5 40.5 40.5 39 40.5 38.5V34.5C40.5 33.5 40 32 40 31.5C40 31.1 39 30.3333 38.5 30H32.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M79.4871 68.1252L71.687 52.6062C71.5223 52.2786 71.2137 52.0469 70.8532 51.9801C70.4926 51.9134 70.1215 52.0194 69.8506 52.2664C69.2998 52.7684 68.5829 53.045 67.8323 53.045C66.1737 53.045 64.8244 51.695 64.8244 50.0356C64.8244 48.6018 65.8441 47.3606 67.2493 47.0838C67.6087 47.0131 67.9143 46.7784 68.0754 46.4495C68.2365 46.1205 68.2345 45.7352 68.0701 45.4079L66.1059 41.498C65.1633 39.6239 63.2746 38.4597 61.1769 38.4595C61.1767 38.4595 61.1766 38.4595 61.1764 38.4595C60.9736 38.4595 60.7738 38.4736 60.5755 38.495C60.5241 35.6001 60.4495 32.7015 60.3506 29.8575C60.2514 26.9842 59.4066 24.1778 57.9072 21.7415C57.5679 21.1902 56.8461 21.0184 56.295 21.3578C55.7439 21.697 55.572 22.4189 55.9112 22.97C57.1979 25.0608 57.9231 27.4705 58.0083 29.9388C58.1156 33.019 58.1944 36.1637 58.2454 39.298C57.4087 39.8222 56.7129 40.5725 56.2479 41.4967L50.5146 52.9045C48.295 49.4551 45.1873 46.7793 41.5618 46.7793C35.238 46.7793 30.489 54.9185 29.2831 61.1071H29.2073C28.5889 57.9336 27.0387 54.2481 24.8222 51.4092C24.8063 49.1762 24.806 46.933 24.8196 44.6852C26.0304 44.7093 27.244 44.7251 28.4609 44.7251C31.5015 44.7251 34.5545 44.6502 37.5833 44.5011C39.6366 44.4001 41.3031 42.845 41.5459 40.8036C41.8737 38.047 41.8737 35.2515 41.5459 32.4949C41.3031 30.4535 39.6368 28.8985 37.584 28.7975C33.4856 28.596 29.3353 28.5317 25.2268 28.6033C25.8377 23.7922 28.8189 19.6548 33.2528 17.561H49.8727C51.0382 18.1113 52.1258 18.8182 53.107 19.669C53.3287 19.8613 53.602 19.9555 53.8741 19.9555C54.2022 19.9555 54.5284 19.8187 54.7601 19.5515C55.184 19.0626 55.1314 18.3224 54.6424 17.8983C54.1145 17.4405 53.5585 17.02 52.9807 16.6344C53.9941 15.8386 54.6471 14.6035 54.6471 13.218C54.6471 11.2292 53.303 9.54964 51.476 9.03682V4.89271C51.4755 2.19487 49.2808 0 46.5828 0H36.5419C33.8441 0 31.6492 2.19487 31.6492 4.89271V9.03714C29.822 9.54996 28.4779 11.2295 28.4779 13.2183C28.4779 14.6036 29.1306 15.8385 30.1437 16.6343C28.3745 17.8143 26.8396 19.3285 25.6307 21.1049C23.8705 23.6914 22.8828 26.7181 22.7746 29.8575C22.5547 36.202 22.4514 42.6153 22.4658 48.9629C20.8255 47.6193 18.9583 46.7795 16.9284 46.7795C14.079 46.7795 11.1957 48.524 8.80956 51.6917C8.42002 52.2086 8.52346 52.9434 9.0405 53.3328C9.55753 53.7223 10.2922 53.6189 10.6816 53.1019C11.801 51.6159 14.101 49.1232 16.9286 49.1232C19.1309 49.1232 21.4445 50.6656 23.4435 53.4659C25.0263 55.6835 26.2404 58.4577 26.8157 61.1073H7.04016C7.33954 59.7323 7.81564 58.3074 8.44315 56.9204C8.70987 56.3307 8.44815 55.6364 7.85845 55.3696C7.26891 55.1028 6.57453 55.3646 6.30765 55.9543C5.53811 57.6554 4.97529 59.4166 4.65123 61.1071H3.04215C1.36572 61.1071 0.00195312 62.4709 0.00195312 64.1473C0.00195312 65.8236 1.36588 67.1875 3.04215 67.1875H3.61809C3.81262 68.9828 4.1406 70.7721 4.46138 72.5118C4.68998 73.7515 4.92639 75.0335 5.10608 76.2829C5.34952 77.97 6.69828 79.2826 8.38674 79.4753C11.4593 79.8245 14.1924 79.9992 16.9267 79.9992C19.6569 79.9992 22.3882 79.8252 25.4583 79.4769C26.0187 79.4131 26.5401 79.225 26.9981 78.9436C28.194 79.6366 29.5415 79.9997 30.9445 79.9997H41.5634L41.5604 79.9989C44.2954 79.9991 47.03 79.8245 50.1041 79.4752C50.9182 79.3823 51.6518 79.0272 52.2223 78.497C55.1217 79.498 58.1376 79.99 61.1402 79.99C67.2471 79.99 73.2961 77.9614 78.1833 74.0749C79.9605 72.6629 80.509 70.1607 79.4871 68.1252ZM33.993 4.89271C33.993 3.48723 35.1364 2.34378 36.5419 2.34378H46.5828C47.9883 2.34378 49.1317 3.48723 49.1317 4.89271V8.8751H33.993V4.89271ZM32.8211 11.2189H50.3036C51.4062 11.2189 52.3029 12.1158 52.3029 13.2181C52.3029 14.3206 51.406 15.2175 50.3036 15.2175H32.8211C31.7186 15.2175 30.8217 14.3206 30.8217 13.2181C30.8217 12.1158 31.7187 11.2189 32.8211 11.2189ZM37.4685 31.1388C38.3751 31.1833 39.111 31.8702 39.2182 32.7719C39.5241 35.3449 39.5241 37.9542 39.2182 40.527C39.111 41.4288 38.3749 42.1158 37.4679 42.1603C33.2717 42.3669 29.0296 42.4272 24.8388 42.3436C24.879 38.5428 24.961 34.7362 25.0847 30.9505C29.201 30.8749 33.3609 30.9369 37.4685 31.1388ZM58.3414 42.5499C58.8917 41.4563 59.9513 40.8034 61.1761 40.8034H61.1764C62.4014 40.8036 63.4614 41.4569 64.0116 42.5508L65.3816 45.2777C63.6397 46.1779 62.4807 47.9976 62.4807 50.0357C62.4807 52.9875 64.8813 55.3889 67.8323 55.3889C68.6587 55.3889 69.4628 55.2002 70.1886 54.8438L76.7452 67.8886C76.7382 67.8942 76.7318 67.9005 76.7247 67.9061C73.4284 70.5279 69.4868 72.2815 65.3262 72.9774C61.5755 73.6048 57.7059 73.3654 54.0701 72.2929C54.3779 70.6218 54.6862 68.9077 54.8723 67.1875H55.4489C57.1253 67.1875 58.489 65.8237 58.489 64.1473C58.489 62.4709 57.1253 61.1071 55.4489 61.1071H53.8401C53.484 59.2798 52.8191 57.2827 51.8957 55.3749L58.3414 42.5499ZM35.0463 53.4663C37.0454 50.6656 39.3593 49.1232 41.5615 49.1232C43.7643 49.1232 46.0783 50.6656 48.0772 53.4663C49.6599 55.6836 50.8738 58.4579 51.449 61.1074H31.674C32.2492 58.4582 33.4633 55.6839 35.0463 53.4663ZM2.34573 64.1476C2.34573 63.7636 2.65823 63.4512 3.04215 63.4512H55.4489C55.8329 63.4512 56.1453 63.7636 56.1453 64.1476C56.1453 64.5315 55.8329 64.844 55.4489 64.844H3.04215C2.65808 64.8439 2.34573 64.5315 2.34573 64.1476ZM28.5328 77.1062C28.6345 76.8447 28.7101 76.5698 28.7514 76.2828C28.8609 75.5145 28.9909 74.599 29.1268 73.6221C29.1362 73.5559 29.1412 73.5193 29.2451 73.5193C29.3492 73.5193 29.3542 73.5559 29.3634 73.6212C29.4995 74.5992 29.6295 75.5146 29.7392 76.2842C29.8078 76.7606 29.9675 77.2056 30.1961 77.6056C29.6161 77.5279 29.0568 77.36 28.5328 77.1062ZM49.8388 77.1468C43.8879 77.8231 39.2499 77.8236 33.2972 77.1484C32.6592 77.0757 32.15 76.5832 32.0592 75.952C31.95 75.1859 31.8205 74.2732 31.6845 73.297C31.5095 72.0479 30.5062 71.1755 29.245 71.1757C27.9837 71.1757 26.9806 72.048 26.8055 73.298C26.6698 74.2732 26.5402 75.186 26.4312 75.9507C26.3402 76.5832 25.831 77.0757 25.1935 77.1484C19.2397 77.8236 14.6017 77.8231 8.6519 77.1468C8.02142 77.075 7.5172 76.5821 7.42579 75.9489C7.23954 74.6542 6.99891 73.349 6.76609 72.0869C6.46875 70.4747 6.16546 68.8192 5.9764 67.1877H52.5138C52.3244 68.8236 52.0204 70.4836 51.7224 72.1002C51.4905 73.3584 51.2507 74.6592 51.0644 75.9498C50.9732 76.5828 50.469 77.075 49.8388 77.1468ZM76.7247 72.2405C70.1628 77.4586 61.3102 79.0098 53.3615 76.4061C53.3687 76.3654 53.3784 76.3257 53.3843 76.2848C53.4641 75.7318 53.5559 75.1724 53.6521 74.6132C56.1006 75.3104 58.642 75.664 61.188 75.664C62.7011 75.664 64.2158 75.5395 65.7129 75.2892C70.0426 74.5649 74.1541 72.7918 77.651 70.1504C77.696 70.9393 77.3682 71.7293 76.7247 72.2405Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M62.2685 67.7178C63.0582 68.8663 64.2479 69.6385 65.6183 69.8923C65.939 69.9517 66.2604 69.981 66.5794 69.981C67.6247 69.981 68.6449 69.6663 69.5249 69.0613C70.6735 68.2717 71.4457 67.082 71.6994 65.7115C71.9533 64.341 71.658 62.9537 70.8685 61.8051C70.0788 60.6565 68.8891 59.8843 67.5186 59.6306C66.1477 59.3768 64.7608 59.672 63.6122 60.4615C62.4636 61.2512 61.6915 62.4409 61.4377 63.8113C61.1836 65.182 61.4788 66.5693 62.2685 67.7178ZM63.7421 64.2381C63.8819 63.4831 64.3074 62.8277 64.94 62.3927C65.4247 62.0595 65.9866 61.8862 66.5624 61.8862C66.7382 61.8862 66.9154 61.9024 67.0918 61.9351C67.8468 62.0749 68.5021 62.5002 68.9372 63.1331C69.3722 63.7657 69.5347 64.5299 69.395 65.2849C69.2552 66.0399 68.8297 66.6952 68.1971 67.1302C67.5643 67.5652 66.7999 67.7277 66.0454 67.5881C65.2904 67.4482 64.635 67.0229 64.1999 66.3901C63.7649 65.7573 63.6022 64.9931 63.7421 64.2381Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M57.3469 60.6886C57.5806 60.7319 57.815 60.7533 58.0477 60.7533C58.8097 60.7533 59.5534 60.5237 60.195 60.0828C61.0323 59.507 61.5953 58.6397 61.7803 57.6406C61.9655 56.6414 61.7502 55.63 61.1745 54.7925C60.5989 53.955 59.7314 53.392 58.7323 53.207C56.6697 52.8253 54.6808 54.1925 54.2989 56.2551C53.9167 58.3178 55.2842 60.3067 57.3469 60.6886ZM56.6033 56.6819C56.7499 55.89 57.5136 55.3647 58.3055 55.5117C58.6891 55.5828 59.022 55.7989 59.2431 56.1205C59.4642 56.442 59.5467 56.8303 59.4758 57.2139C59.4047 57.5975 59.1886 57.9306 58.867 58.1515C58.5456 58.3726 58.1577 58.4553 57.7736 58.3842C56.9817 58.2373 56.4567 57.4737 56.6033 56.6819Z\" fill=\"#3BB77E\"/>\r\n    </g>\r\n    <defs>\r\n    <clipPath id=\"clip0\">\r\n    <rect width=\"80\" height=\"80\" fill=\"white\"/>\r\n    </clipPath>\r\n    </defs>\r\n    </svg>\r\n)\r\n\r\nexport const Category5 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"70\" cy=\"69\" r=\"9\" fill=\"#FDC040\"/>\r\n    <path d=\"M2 35L3 50.5L12 59.5L13 55L14 38.5V23.5L12 21.5L10 20.5H5L2 22.5V26V35Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M49.7556 31.3671L50.4734 30.0005L48.1166 28.7625L47.3988 30.1298C46.0926 32.6213 43.9276 34.5548 41.3055 35.573V23.7452C44.3885 22.7927 46.9775 20.6732 48.5197 17.8385L49.1354 16.6988L46.7915 15.4336L46.1765 16.572C45.105 18.5413 43.3834 20.0777 41.3055 20.9183V12.0716H38.6424V20.9183C36.5645 20.0777 34.8428 18.5413 33.772 16.572L33.157 15.4336L30.8131 16.6988L31.4282 17.8385C32.9704 20.6732 35.5593 22.7927 38.6424 23.7452V35.573C36.0203 34.5548 33.8559 32.6213 32.5497 30.1298L31.8319 28.7625L29.4751 30.0005L30.1929 31.3671C31.9607 34.7408 35.0028 37.2699 38.6424 38.3921V50.2199C36.0203 49.2017 33.8559 47.2681 32.5497 44.7767L31.8319 43.4094L29.4751 44.6473L30.1929 46.014C31.9607 49.3877 35.0028 51.9168 38.6424 53.039V71.9906H41.3055V53.039C44.9457 51.9168 47.9872 49.3877 49.7556 46.014L50.4734 44.6473L48.1166 43.4094L47.3988 44.7767C46.0926 47.2681 43.9276 49.2017 41.3055 50.2199V38.3921C44.9457 37.2699 47.9872 34.7408 49.7556 31.3671Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M72.9964 59.3612C74.3142 58.2221 75.3038 56.7508 75.8616 55.1L73.3318 54.2587C72.839 55.73 71.88 57.0004 70.5992 57.8762V52.0176H67.9362V57.8762C66.6573 57.0017 65.6989 55.7339 65.2055 54.2652L62.6757 55.1072C63.2335 56.7573 64.2231 58.2286 65.541 59.3677C60.7128 61.1693 57.8671 66.169 58.7825 71.2403C59.6979 76.3109 64.1119 79.9999 69.2651 79.9999C74.4183 79.9999 78.8329 76.3109 79.7483 71.2403C80.6637 66.169 77.8173 61.1693 72.9892 59.3677L72.9964 59.3612ZM69.2677 77.3167C64.8557 77.3167 61.2785 73.7402 61.2785 69.3275C61.2785 64.9155 64.8557 61.3383 69.2677 61.3383C73.6803 61.3383 77.2569 64.9155 77.2569 69.3275C77.253 73.7382 73.6784 77.3122 69.2677 77.3167Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M75.915 1.58444C75.9625 1.2054 75.8448 0.824403 75.5919 0.538331C75.3396 0.25226 74.9762 0.0877686 74.5939 0.0877686H70.5993C69.9589 0.0877686 69.4089 0.544183 69.2905 1.17419L69.2678 1.29577L69.2457 1.17419C69.1273 0.544183 68.5773 0.0877686 67.9362 0.0877686H63.9416C63.56 0.0877686 63.1966 0.25226 62.9436 0.538331C62.6914 0.824403 62.5737 1.2054 62.6212 1.58444L65.2732 22.8064V33.6427C65.1808 36.4137 64.779 39.1658 64.0749 41.8477C63.9169 42.5401 63.9 43.2586 64.0255 43.9581C64.428 46.1446 66.1379 47.8572 68.3237 48.2629C68.6319 48.3162 68.9433 48.3435 69.2561 48.3441C70.6702 48.3461 72.0264 47.7856 73.027 46.787C74.0276 45.7877 74.59 44.4321 74.59 43.018C74.59 42.7592 74.5711 42.5011 74.5341 42.2456L74.2467 40.3497C73.6726 37.1672 73.3436 33.9456 73.2624 30.713V22.8064L75.915 1.58444ZM65.4507 2.75083H66.831L70.5993 22.848V27.0312L67.8927 22.2954L65.4507 2.75083ZM70.9803 45.055C70.3704 45.5686 69.5623 45.7818 68.7782 45.6356C67.6983 45.423 66.855 44.5764 66.6476 43.4959C66.5826 43.1428 66.5904 42.7807 66.6704 42.4309C67.4213 39.5585 67.8459 36.61 67.9362 33.6427V27.7372L70.6624 32.5068C70.8373 35.27 71.1565 38.0215 71.6181 40.7515L71.9029 42.6331C71.9217 42.7592 71.9315 42.8873 71.9308 43.0154C71.9308 43.8021 71.583 44.5491 70.9803 45.055ZM71.6649 14.0942L70.5798 8.30712L70.6565 8.32208L71.7046 2.75083H73.0855L71.6649 14.0942Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M61.2785 22.7238C61.2934 19.1525 59.2513 15.8913 56.031 14.3458C55.403 14.0637 55.1045 13.3407 55.3509 12.6977C56.8301 8.76679 55.4979 4.33203 52.0969 1.86726C48.6959 -0.597503 44.0667 -0.483075 40.7919 2.14618C40.3159 2.53563 39.632 2.53563 39.1567 2.14618C37.1971 0.564337 34.679 -0.154092 32.1791 0.156035C29.3412 0.505172 26.8212 2.13773 25.3414 4.58494C23.8623 7.0315 23.5879 10.0223 24.5976 12.6977C24.844 13.3407 24.5449 14.0637 23.9169 14.3458C21.3533 15.5902 19.5003 17.9393 18.8879 20.7226C18.2748 23.5053 18.9704 26.4154 20.7746 28.6215C21.129 29.0662 21.129 29.6968 20.7746 30.1422C17.9666 33.5731 17.9666 38.5085 20.7746 41.9394C21.1257 42.4055 21.1101 43.0512 20.7376 43.4998C18.5036 46.2649 18.0375 50.0599 19.5348 53.2834C21.0321 56.5069 24.2329 58.5985 27.7866 58.6752L29.5375 70.9256C30.2813 76.1178 34.7291 79.9739 39.9739 79.9739C45.2195 79.9739 49.6672 76.1178 50.411 70.9256L52.1619 58.6752C55.7163 58.5985 58.9177 56.5063 60.4151 53.2815C61.9117 50.056 61.4436 46.2604 59.2084 43.4959C58.8358 43.0473 58.8202 42.401 59.1707 41.9355C61.9794 38.5046 61.9794 33.5692 59.1707 30.1376C58.817 29.6929 58.817 29.0623 59.1707 28.6175C60.5308 26.9538 61.2752 24.8726 61.2785 22.7238ZM57.1135 31.8287C58.0836 33.0178 58.6141 34.5048 58.6154 36.0392C58.6213 37.5755 58.0894 39.0657 57.1122 40.2509C55.9569 41.693 55.9673 43.7475 57.1376 45.1778C58.7454 47.1732 59.0653 49.9143 57.96 52.2263C56.8548 54.5382 54.5207 56.0102 51.9577 56.0121C51.7003 56.0043 51.4428 55.9796 51.1886 55.9393C50.8408 55.8912 50.489 55.9842 50.2095 56.1961C49.9305 56.4087 49.7478 56.7234 49.701 57.0706L47.7759 70.5511C47.2187 74.4319 43.8944 77.3134 39.9739 77.3134C36.0541 77.3134 32.7292 74.4319 32.1726 70.5511L30.254 57.0778C30.1207 56.41 29.5284 55.9335 28.8477 55.9458C28.7879 55.9458 28.7287 55.9497 28.6696 55.9575C26.5526 56.1929 24.4526 55.3886 23.0346 53.799C20.854 51.3706 20.7616 47.7174 22.8175 45.1817C23.9877 43.7514 23.9981 41.6975 22.8428 40.2548C21.8617 39.0696 21.3279 37.5781 21.3325 36.0392C21.3344 34.5048 21.8643 33.0178 22.8344 31.8287C23.9955 30.4042 23.9955 28.3594 22.8344 26.9343C21.5464 25.3589 21.0503 23.281 21.4885 21.2935C21.9261 19.3066 23.2498 17.6292 25.0807 16.7417C26.9479 15.8555 27.8218 13.684 27.0877 11.7523C26.682 10.6854 26.5604 9.53138 26.7334 8.40335C27.1976 5.46461 29.5427 3.18254 32.4938 2.80025C34.2805 2.57399 36.0827 3.08502 37.4858 4.21565C38.9421 5.37554 41.0064 5.37554 42.4628 4.21565C43.8645 3.08307 45.6668 2.57009 47.4547 2.79504C50.4052 3.17929 52.7503 5.45941 53.2165 8.39814C53.3881 9.52618 53.2659 10.6796 52.8608 11.7465C52.1268 13.6788 53 15.8503 54.8672 16.7358C56.6981 17.624 58.0218 19.3014 58.46 21.2883C58.8976 23.2752 58.4015 25.3537 57.1135 26.9291C55.9497 28.3549 55.9497 30.4029 57.1135 31.8287Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M0.282215 25.6892L2.51162 74.7173C2.64101 77.6645 5.06806 79.9869 8.0172 79.9869C10.967 79.9869 13.3934 77.6645 13.5234 74.7173L15.7522 25.6892C15.8413 23.8714 15.1768 22.0977 13.9148 20.7864C13.7601 20.6238 13.5793 20.5003 13.4116 20.3553L14.6749 0.170343L12.0118 0.0052013L10.8285 18.9821C10.3454 18.8508 9.84936 18.7747 9.34873 18.7546V0.087772H6.68567V18.7546C6.21235 18.7721 5.74228 18.8404 5.28392 18.9581L4.0226 0L1.35953 0.175544L2.69107 20.1485L2.87636 20.1368C2.60785 20.3345 2.35428 20.5516 2.11762 20.7864C0.856309 22.0984 0.192493 23.872 0.282215 25.6892ZM4.04536 22.627C4.79695 21.8351 5.84176 21.3884 6.93338 21.3923H9.10102C10.1926 21.391 11.2375 21.837 11.9916 22.6257C12.7465 23.4143 13.1457 24.478 13.0956 25.5683L12.4955 38.7022H8.0172V41.3653H12.3739L11.4045 62.6698H8.0172V65.3329H11.2836L10.863 74.5977C10.7966 76.1217 9.54248 77.3225 8.0172 77.3225C6.49257 77.3225 5.23776 76.1217 5.17209 74.5977L4.14548 52.0176H8.0172V49.3545H4.0226L3.17739 30.713H8.0172V28.05H3.05581L2.94268 25.5683C2.88872 24.4773 3.28792 23.413 4.04536 22.627Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M63.9417 69.3275C63.941 70.6382 64.4241 71.9028 65.2985 72.8787L67.2828 71.1024C66.6905 70.4406 66.4675 69.5271 66.6879 68.6669C66.9077 67.8061 67.5423 67.1124 68.3797 66.8165L67.4928 64.305C65.3668 65.0598 63.9449 67.0708 63.9417 69.3275Z\" fill=\"#3BB77E\"/>\r\n    </svg>\r\n)\r\n\r\nexport const Category6 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0)\">\r\n    <path d=\"M31.0001 31.5C30.6001 31.9 30.5001 34 30.5001 35C30.5001 35.1667 30.9001 35.4 32.5001 35C34.5001 34.5 33.5001 34.5 34.5001 33.5C35.5001 32.5 35.0001 33.5 37.0001 34C39.0001 34.5 38.0001 35 39.0001 35.5C40.0001 36 40.0001 35.5 40.5001 35.5C41.0001 35.5 42.0001 34.5 43.0001 34C44.0001 33.5 44.0001 33.5 44.5001 33C44.9001 32.6 45.0001 32.1667 45.0001 32C45.0001 31.6667 44.9001 30.8 44.5001 30C44.0001 29 43.5001 28.5 43.0001 28C42.5001 27.5 41.5001 27.5 40.5001 27C39.5001 26.5 38.5001 27 37.5001 27C36.5001 27 34.5001 27.5 34.0001 27.5C33.5001 27.5 32.5001 29 32.0001 29.5C31.5001 30 31.5001 31 31.0001 31.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M55.5001 21.5C55.0001 22 52.0001 33 52.0001 33.5C52.3334 33.8333 53.5001 34.7 55.5001 35.5C57.5001 36 56.5001 35 58.0001 34.5C59.5001 34 59.0001 34 60.5001 34C62.0001 34 61.5001 34 63.0001 35C64.5001 36 64.0001 35 65.0001 35C65.8001 35 66.3334 34 66.5001 33.5L68.5001 29.5L72.5001 20.5L75.5001 9L71.5001 8.5C68.1667 8.33333 61.4001 8 61.0001 8C60.6001 8 59.8334 10.6667 59.5001 12C58.3334 15 55.9001 21.1 55.5001 21.5Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M25.0001 68C19.0001 69.6 16.8334 64 16.5001 61H15.5001C15.1667 60.8333 14.4 60.5 14 60.5C13.5 60.5 10.5 60 10.0001 60C9.50011 60 7 60.5 7 61C7 61.5 5.00005 64 4.50005 64.5C4.00005 65 4.50005 69 4.50005 69.5C4.50005 70 5.50005 72.5 5.50005 73C5.50005 73.5 6.00005 74.5 6.50005 75.5C7.00005 76.5 7.50005 77 8.50005 78C9.50005 79 8.50005 78.5 10.0001 78.5C11.5001 78.5 11.5001 78.5 12.5001 78C13.5001 77.5 15.0001 77.5 15.5001 77.5C16.0001 77.5 16.5001 78.5 17.5001 78.5C18.5001 78.5 18.5001 79 19.5001 78.5C20.5001 78 21.0001 78 22.0001 77.5C23.0001 77 24.0001 74 24.0001 73.5C24.0001 73.1 24.6667 69.6667 25.0001 68Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M63.9731 12.4121L66.509 11.5866L69.1131 19.5872L66.5773 20.4121L63.9731 12.4121Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M60.0649 21.7467L62.6008 20.9212L65.2056 28.9206L62.6698 29.7467L60.0649 21.7467Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M15.104 25.6361C14.8228 27.6732 15.4172 29.7344 16.7414 31.3079L18.6665 33.7227V56H21.3332V35.8255L23.2596 37.1094C23.7082 37.4082 24.2915 37.4082 24.7401 37.1094L27.9998 34.9336L31.2596 37.1068C31.7082 37.4056 32.2915 37.4056 32.7401 37.1068L35.9998 34.9336L39.2596 37.1068C39.7082 37.4056 40.2915 37.4056 40.7401 37.1068L43.9998 34.9336L47.2596 37.1068C47.7082 37.4056 48.2915 37.4056 48.7401 37.1068L51.9998 34.9336L54.6665 36.7109V77.3333H25.3332V80H62.6665C66.3468 79.9954 69.3286 77.0137 69.3332 73.3333V33.3333C69.3299 33.0404 69.229 32.7565 69.0467 32.5267L76.7518 12.0137C77.7889 9.25782 77.4093 6.16928 75.7362 3.74675C74.1463 1.39649 71.4914 -0.00845603 68.6548 7.50484e-06C65.0389 0.0338617 61.8182 2.29298 60.5558 5.68165L58.4653 11.2468L55.9998 8.78126V4.00001C55.9998 3.26368 55.4028 2.66667 54.6665 2.66667H39.9998C39.2635 2.66667 38.6665 3.26368 38.6665 4.00001V6.28777C37.1593 4.92188 34.8859 4.84441 33.2889 6.10548V4.00001C33.2889 1.81772 31.52 0.0481845 29.3371 0.0481845C27.1548 0.0481845 25.3853 1.81772 25.3853 4.00001V6.10678C24.6554 5.50196 23.7368 5.17123 22.7889 5.17318C21.6886 5.17058 20.634 5.61459 19.8664 6.4043C18.285 8.03386 18.2752 10.6224 19.8436 12.2643L21.0851 13.5456C20.6333 13.7526 20.2231 14.0404 19.8748 14.3945L19.8664 14.3997L19.8534 14.4134C19.5428 14.7324 19.2856 15.0996 19.0929 15.5013L17.5734 12.6947L15.2277 13.9642L18.6756 20.3281C18.5213 20.416 18.3664 20.5013 18.2199 20.6016C18.1652 20.6387 18.117 20.6816 18.0636 20.7188L12.9041 15.9642L11.0962 17.9251L16.2212 22.6504C15.6326 23.5508 15.2511 24.5703 15.104 25.6361ZM43.2596 32.224L39.9998 34.3997L36.7401 32.2266C36.2915 31.9277 35.7082 31.9277 35.2596 32.2266L32.0304 34.3802C32.0226 34.2467 31.9998 34.1309 31.9998 34.0026C31.9914 31.0723 34.1066 28.5664 36.9966 28.0833C39.8872 27.5996 42.7023 29.2806 43.6476 32.0547C43.5103 32.0905 43.3794 32.1471 43.2596 32.224ZM46.6665 33.5091L46.6411 33.4922C46.481 30.6895 44.9712 28.1387 42.591 26.6497C40.2114 25.1608 37.257 24.9186 34.6665 26V17.3333H46.6665V33.5091ZM66.6665 73.3333C66.6665 75.5423 64.8755 77.3333 62.6665 77.3333H57.3332V36.7135L59.9998 34.9336L63.2596 37.1068C63.7082 37.4056 64.2915 37.4056 64.7401 37.1068L66.6665 35.8255V73.3333ZM63.0519 6.6185C63.9211 4.26824 66.1489 2.69727 68.6548 2.66667C70.6144 2.66277 72.4471 3.63477 73.5441 5.25847C74.7212 6.96355 74.9868 9.13738 74.2557 11.0762L65.9998 33.0664L63.9998 34.3997L60.7401 32.2266C60.2915 31.9277 59.7082 31.9277 59.2596 32.2266L55.9998 34.3997L53.2948 32.5964L63.0519 6.6185ZM57.436 13.9883L50.3599 32.8242L49.3332 33.5091V16.5521L54.6665 11.2188L57.436 13.9883ZM41.3332 5.33334H53.3332V8.00001H41.3332V5.33334ZM40.5519 10.6667H51.4477L47.4478 14.6667H36.5519L40.5519 10.6667ZM21.7694 8.27475C22.0369 7.9987 22.4048 7.84245 22.7889 7.84245C23.1737 7.84311 23.5415 7.9987 23.8091 8.27475L25.7668 10.2747C26.147 10.6628 26.7244 10.7806 27.2264 10.5742C27.7283 10.3672 28.0552 9.87631 28.0519 9.33334V4.00001C28.0304 3.5267 28.2707 3.08009 28.6769 2.83725C29.0838 2.59376 29.591 2.59376 29.9972 2.83725C30.4041 3.08009 30.6444 3.5267 30.6222 4.00001V9.33334C30.6229 9.87436 30.9504 10.3613 31.4517 10.5658C31.9523 10.7708 32.5272 10.6524 32.9067 10.2669L34.8703 8.26693C35.4328 7.7129 36.3351 7.7129 36.897 8.26693C37.4764 8.86003 37.4764 9.80665 36.897 10.3997L32.9692 14.3997L33.0089 14.4401L32.3905 15.0586C32.283 15.1693 32.1964 15.2982 32.1333 15.4388C32.1144 15.4798 32.104 15.5215 32.089 15.5638C32.0493 15.6777 32.0252 15.7962 32.0174 15.916C32.0174 15.9453 32.0011 15.9694 32.0011 15.9987V27.7598C31.6978 28.0501 31.4158 28.362 31.1587 28.6934L28.6398 23.3333C27.7101 21.4837 26.0298 20.1231 24.0265 19.6003C23.5604 19.4798 23.0825 19.4069 22.6014 19.3841L22.2596 18.9837C21.9933 18.6784 21.7922 18.4401 21.7596 18.4069C21.4152 18.0462 21.2661 17.541 21.3599 17.0508C21.4093 16.7721 21.5376 16.5143 21.729 16.3066L21.7531 16.2839L21.7863 16.2481C22.2694 15.7747 23.0174 15.7051 23.5799 16.0801C24.1457 16.4583 24.9048 16.3496 25.3423 15.8288C25.7798 15.3073 25.7544 14.541 25.2837 14.0495L21.7596 10.4121C21.1873 9.81316 21.1919 8.8685 21.7694 8.27475ZM17.7466 26C17.9204 24.7077 18.6359 23.5501 19.7147 22.8171C20.7843 22.0938 22.1131 21.8646 23.3638 22.1882C24.6138 22.5124 25.6645 23.3581 26.2479 24.5104L29.6463 31.7494C29.5623 32.0612 29.4959 32.3776 29.4478 32.6973L28.7453 32.2279C28.2974 31.929 27.7134 31.929 27.2655 32.2279L23.9998 34.3997L21.0428 32.4264L20.757 32.0684L24.1945 29.4108L22.5623 27.3014L19.0962 29.9824L18.8 29.6133C17.9517 28.6133 17.5688 27.2995 17.7466 26Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M5.51375 76.6744C6.52677 78.718 8.61401 80.0078 10.8946 80C11.8289 79.9986 12.7494 79.7812 13.5854 79.3652L14.6667 78.8242L15.7494 79.3652C16.5847 79.7812 17.5053 79.9986 18.4389 80C20.7201 80.0078 22.8067 78.718 23.8204 76.6744L24.2852 75.7415C25.8464 72.6087 26.6615 69.1575 26.6667 65.6575C26.6622 61.7981 23.5352 58.6712 19.6759 58.6666C18.3751 58.6705 17.101 59.0397 16.0001 59.733V58.6666C16.0001 55.7213 13.6121 53.3333 10.6667 53.3333V55.9999C12.1394 55.9999 13.3334 57.194 13.3334 58.6666V59.733C12.2325 59.0397 10.9584 58.6705 9.65763 58.6666C5.79826 58.6712 2.67131 61.7981 2.66675 65.6575C2.67131 69.1582 3.48641 72.6106 5.04826 75.7441L5.51375 76.6744ZM9.65763 61.3333C10.8048 61.33 11.9057 61.7864 12.7149 62.6002L13.724 63.6093C14.2449 64.1295 15.0886 64.1295 15.6095 63.6093L16.6186 62.6002C17.8556 61.3632 19.7149 60.9934 21.3308 61.6627C22.9467 62.332 24.0001 63.9088 24.0001 65.6575C23.9968 68.7447 23.2781 71.789 21.8998 74.552L21.435 75.4856C20.8692 76.6217 19.7078 77.3378 18.4389 77.3333C17.9194 77.3326 17.407 77.2115 16.9415 76.9798L15.2631 76.1399C14.8875 75.9524 14.446 75.9524 14.071 76.1399L12.3933 76.9798C11.9278 77.2115 11.4148 77.3326 10.8946 77.3333C9.62508 77.3372 8.46297 76.6191 7.89852 75.4811L7.43368 74.5481C6.05607 71.7864 5.33732 68.7434 5.33341 65.6575C5.33667 63.2708 7.27092 61.3365 9.65763 61.3333Z\" fill=\"#3BB77E\"/>\r\n    </g>\r\n    <defs>\r\n    <clipPath id=\"clip0\">\r\n    <rect width=\"80\" height=\"80\" fill=\"white\"/>\r\n    </clipPath>\r\n    </defs>\r\n    </svg>\r\n)\r\n\r\nexport const Category7 = () => (\r\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0)\">\r\n    <path d=\"M28.475 41.8208C23.115 41.8208 14.5166 47.125 10.8875 49.7771L12.1437 51.4521L14.2375 52.7083L16.75 55.6396L19.2625 58.1521L21.3562 62.3396L24.7062 64.8521C27.0791 65.1312 31.9087 65.6896 32.2437 65.6896C32.5787 65.6896 37.6875 65.1312 40.2 64.8521L44.8062 63.5958C45.2249 62.7583 46.2299 60.9996 46.9 60.6646C47.57 60.3296 47.7374 58.85 47.7374 58.1521L50.6687 55.6396C51.227 54.9416 52.0087 53.5458 50.6687 53.5458C49.3287 53.5458 44.2479 45.7291 41.875 41.8208H38.1062H28.475Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M53.1812 27.5833C53.4604 26.4666 54.0187 24.0658 54.0187 23.3958L55.6937 25.4896L58.625 26.3271H62.8125L64.9062 29.2583V32.6083V33.8646H62.8125H59.8812H55.6937H51.9249L48.9937 32.6083L50.6687 31.3521L53.1812 30.0958V27.5833Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M54.7167 22H50.9201C49.4027 21.9989 47.9114 22.398 46.5974 23.157C46.4109 23.2077 46.2413 23.307 46.105 23.4438L46.0412 23.5076C45.1285 24.1341 44.3444 24.9302 43.7321 25.8527C43.4137 26.3304 43.5091 26.9716 43.9529 27.3352C44.3968 27.6995 45.0445 27.6679 45.4507 27.2616L47.1143 25.5981L52.4746 28.278V29.224L48.9098 31.6034C47.8242 32.3237 46.3809 32.1814 45.4573 31.2616C45.177 30.9715 44.7615 30.8548 44.3711 30.9573C43.9807 31.0593 43.676 31.3641 43.574 31.7545C43.4715 32.1449 43.5882 32.5604 43.8782 32.8406C45.514 34.4851 47.7397 35.4071 50.0592 35.4H55.8333V37.6333H53.6C50.5068 37.6432 47.7097 39.4763 46.4665 42.3088C45.4851 41.9212 44.4867 41.5864 43.4753 41.2903C44.8101 40.1677 45.0598 38.2086 44.05 36.7871C43.0402 35.3651 41.1084 34.9556 39.6084 35.846C38.109 36.7364 37.5436 38.629 38.3085 40.196C35.1123 39.7467 31.8681 39.7571 28.6751 40.2276C28.9074 39.7696 29.0301 39.2636 29.0333 38.75C29.0431 37.1851 27.9679 35.822 26.4434 35.4665C24.9189 35.1116 23.3524 35.8591 22.6692 37.2675C21.986 38.6759 22.3693 40.3688 23.5918 41.3465C22.5722 41.6534 21.5705 42.016 20.5765 42.4173C19.3606 39.5275 16.5352 37.6442 13.4 37.6333H11.1667V35.4H16.9408C19.2609 35.4071 21.4871 34.4845 23.1229 32.8395C23.546 32.4011 23.54 31.7049 23.1092 31.2741C22.6785 30.8434 21.9822 30.8374 21.5438 31.2605C20.6202 32.1803 19.1764 32.3237 18.0902 31.6034L14.5167 29.2191V28.2736L19.8764 25.5932L21.5405 27.2573C21.9468 27.6629 22.594 27.6951 23.0383 27.3309C23.4822 26.9672 23.5776 26.3255 23.2592 25.8478C22.6469 24.9258 21.8628 24.1297 20.95 23.5032L20.8862 23.4395C20.7499 23.3026 20.5798 23.2034 20.3939 23.1527C19.0815 22.3969 17.594 21.9995 16.0799 22H12.2833C5.50264 22.0082 0.00817872 27.5026 0 34.2833V38.75C0.00490722 43.0651 3.50158 46.5618 7.81667 46.5667H13.038L9.42787 48.9887C9.12362 49.1931 8.93933 49.5334 8.93388 49.8998C8.92843 50.2662 9.10291 50.6113 9.40116 50.8245L9.69286 51.0333H6.0457L1.90618 46.8938L0.327148 48.4729L4.79382 52.9395C5.00319 53.1489 5.28726 53.2667 5.58333 53.2667H12.8182L14.1426 54.2127C14.6879 54.6074 15.207 55.0371 15.696 55.5H12.2833C12.1634 55.5 12.0445 55.5191 11.9306 55.5567L5.88486 57.567L1.90618 53.5938L0.327148 55.1729L4.79382 59.6395C5.00319 59.8489 5.28726 59.9667 5.58333 59.9667C5.70329 59.9667 5.82215 59.9471 5.93611 59.91L12.4644 57.7333H17.6835C18.0635 58.2491 18.4119 58.7879 18.7265 59.3456L19.0706 59.9667H15.6333C15.5134 59.9667 15.3945 59.9858 15.2806 60.0234L8.58056 62.2567C8.27904 62.3587 8.03531 62.5839 7.91045 62.8767L4.56045 70.6933L6.61276 71.5734L9.76538 64.218L15.8144 62.2H20.311L20.5602 62.6466C20.9293 63.3058 21.3922 63.9077 21.9348 64.4333H16.75C13.6677 64.4372 11.1705 66.9344 11.1667 70.0167V73.3667C11.1705 77.0656 14.1677 80.0629 17.8667 80.0667C20.3334 80.0667 22.3333 78.0667 22.3333 75.6C22.3333 73.1333 20.3334 71.1333 17.8667 71.1333H21.2167C23.8846 71.1295 26.1773 69.2386 26.6882 66.6198C26.9205 66.64 27.1528 66.6667 27.3883 66.6667H40.0233C40.1209 66.6667 40.2147 66.6476 40.3107 66.6443C40.8347 69.2517 43.1236 71.129 45.7833 71.1333H49.1333C46.6666 71.1333 44.6667 73.1333 44.6667 75.6C44.6667 78.0667 46.6666 80.0667 49.1333 80.0667C52.8323 80.0629 55.8295 77.0656 55.8333 73.3667V70.0167C55.8295 66.9344 53.3323 64.4372 50.25 64.4333H45.4731C46.1307 63.7889 46.6683 63.0326 47.0608 62.2H51.1856L57.2379 64.218L60.3905 71.5734L62.4428 70.6933L59.0928 62.8767C58.968 62.5839 58.7242 62.3587 58.4227 62.2567L51.7227 60.0234C51.6082 59.9852 51.4877 59.9661 51.3667 59.9667H48.0712C48.4676 59.1848 48.9294 58.4373 49.4518 57.7333H54.5356L61.0639 59.91C61.1778 59.9471 61.2967 59.9667 61.4167 59.9667C61.7127 59.9667 61.9968 59.8489 62.2062 59.6395L66.6729 55.1729L65.0938 53.5938L61.1151 57.5725L55.0694 55.5627C54.956 55.5229 54.8366 55.5016 54.7167 55.5H51.4915C51.8492 55.1761 52.2167 54.8626 52.6082 54.5709L54.3437 53.2667H61.4167C61.7127 53.2667 61.9968 53.1489 62.2062 52.9395L66.6729 48.4729L65.0938 46.8938L60.9543 51.0333H57.3219L57.6201 50.8098C57.9042 50.5971 58.0705 50.2618 58.0672 49.9063C58.0639 49.5514 57.8922 49.2188 57.6043 49.011L54.2221 46.5667H59.1833C63.4984 46.5618 66.9951 43.0651 67 38.75V34.2833C66.9918 27.5026 61.4974 22.0082 54.7167 22ZM14.5167 24.2333H16.0799C16.5079 24.2333 16.9348 24.2759 17.3541 24.3604L14.5167 25.7764V24.2333ZM13.4 70.0167C13.4016 68.5974 14.2958 67.3324 15.6333 66.8575V71.1333H13.4V70.0167ZM20.1 75.6C20.1 76.8334 19.1 77.8334 17.8667 77.8334C15.4 77.8334 13.4 75.8334 13.4 73.3667H17.8667C19.1 73.3667 20.1 74.3667 20.1 75.6ZM41.3167 37.6333C41.9333 37.6333 42.4333 38.1333 42.4333 38.75C42.4333 39.3667 41.9333 39.8667 41.3167 39.8667C40.7 39.8667 40.2 39.3667 40.2 38.75C40.2 38.1333 40.7 37.6333 41.3167 37.6333ZM25.6833 37.6333C26.3 37.6333 26.8 38.1333 26.8 38.75C26.8 39.3667 26.3 39.8667 25.6833 39.8667C25.0667 39.8667 24.5667 39.3667 24.5667 38.75C24.5667 38.1333 25.0667 37.6333 25.6833 37.6333ZM8.93333 38.75V44.3333H7.81667C4.73438 44.3295 2.23715 41.8323 2.23333 38.75V35.4H8.93333V38.75ZM2.29495 33.1667C2.86964 28.0828 7.16728 24.2393 12.2833 24.2333V29.8167C12.2833 30.1902 12.4698 30.5386 12.7801 30.7458L16.4152 33.1667H2.29495ZM11.1667 44.3333V39.8667H13.4C15.6513 39.8727 17.6791 41.2298 18.5422 43.3094C17.8765 43.6289 17.2211 43.9702 16.5761 44.3333H11.1667ZM21.2167 68.9H17.8667V66.6667H24.3758C23.9009 68.0042 22.6359 68.8984 21.2167 68.9ZM51.3667 70.0167V66.8575C52.7042 67.3324 53.5984 68.5974 53.6 70.0167V71.1333H51.3667V70.0167ZM53.6 73.3667C53.6 75.8334 51.6 77.8334 49.1333 77.8334C47.9 77.8334 46.9 76.8334 46.9 75.6C46.9 74.3667 47.9 73.3667 49.1333 73.3667H53.6ZM49.1333 66.6667V68.9H45.7833C44.3641 68.8984 43.0991 68.0042 42.6242 66.6667H49.1333ZM55.0662 49.9336L51.2696 52.7841C48.539 54.8304 46.4518 57.6156 45.255 60.8107C44.4317 62.9868 42.3499 64.4279 40.0233 64.4333H27.3916C25.3644 64.4328 23.4963 63.3336 22.5122 61.5615L20.6785 58.2606C19.3868 55.9428 17.5979 53.9401 15.4403 52.3959L12.0107 49.9456L15.4414 47.6441C26.8044 40.0193 41.7142 40.28 52.8039 48.2973L55.0662 49.9336ZM55.8333 44.3333H50.6966C49.9774 43.9304 49.2478 43.5536 48.5068 43.202C49.3956 41.1813 51.3923 39.8738 53.6 39.8667H55.8333V44.3333ZM49.6513 24.3604C50.0712 24.2759 50.4975 24.2333 50.9256 24.2333H52.4833V25.7764L49.6513 24.3604ZM64.7667 38.75C64.7628 41.8323 62.2656 44.3295 59.1833 44.3333H58.0667V35.4H64.7667V38.75ZM56.95 33.1667H50.5848L54.2161 30.7458C54.528 30.5391 54.7161 30.1907 54.7167 29.8167V24.2333C59.8327 24.2393 64.1304 28.0828 64.7051 33.1667H56.95Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M27.5895 49.1272L26.0105 50.7062L28.571 53.2667L26.0105 55.8272L27.5895 57.4062L30.9395 54.0562C31.3752 53.62 31.3752 52.9134 30.9395 52.4772L27.5895 49.1272Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M39.4106 49.1272L36.0606 52.4772C35.625 52.9134 35.625 53.62 36.0606 54.0562L39.4106 57.4062L40.9897 55.8272L38.4292 53.2667L40.9897 50.7062L39.4106 49.1272Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M26.2183 12.7063L22.2688 8.01378L24.6537 8.27002L26.5898 8.38526L27.9103 7.32093L29.8207 5.94884L31.449 5.4743L32.0646 6.65386L32.0903 8.14119L32.7059 9.32075L36.1551 10.8976L38.7067 12.1924L40.5018 12.7564L41.8482 13.1794L42.1559 13.7692L41.7329 15.1155L41.3099 16.4618L41.0279 17.3594L39.6816 16.9364L38.0017 14.4362L26.2183 12.7063Z\" fill=\"#FDC040\"/>\r\n    <path d=\"M46.8434 10.3013C45.6469 10.1505 44.4396 10.4845 43.4907 11.2291L41.9009 12.4698C41.3495 12.4002 40.8041 12.2887 40.2697 12.1365L41.2407 10.3726C41.3291 10.2121 41.3322 10.0179 41.2484 9.85457C41.1646 9.69149 41.0052 9.58067 40.8232 9.55876C39.3587 9.37813 37.5462 10.2425 36.8599 10.609C35.6138 9.91624 34.2965 9.36065 32.931 8.95159L32.4038 5.58945C32.3593 5.30371 32.1016 5.101 31.8132 5.12485C29.3458 5.30886 27.1445 7.06206 26.4034 7.71429C19.6352 7.14781 14.2424 8.83618 13.8835 11.7461C13.5018 14.8407 18.9724 17.9761 26.3379 18.8846C27.1207 18.9811 27.8954 19.0412 28.6609 19.08C30.0597 20.4259 31.8672 21.2674 33.7976 21.4715C33.9877 21.4961 34.1767 21.4201 34.2971 21.2711C34.4175 21.1221 34.4518 20.9209 34.3878 20.7405L33.7281 18.881C34.1285 18.8235 34.5154 18.7556 34.8883 18.6774C35.9151 19.8947 37.2067 20.8608 38.6645 21.5018C38.8357 21.5677 39.0288 21.5441 39.1791 21.4386C39.3294 21.3332 39.4175 21.1601 39.4138 20.9765L39.3557 17.8445C39.9214 17.8307 40.4877 17.8563 41.0503 17.9211L41.2259 17.9428L42.4666 19.5326C43.2061 20.4855 44.296 21.1028 45.4933 21.2472C45.7956 21.2845 46.0709 21.0697 46.1081 20.7674L47.3232 10.9161C47.3605 10.6139 47.1457 10.3386 46.8434 10.3013ZM39.8032 10.6926L39.2046 11.7799C38.8158 11.6286 38.428 11.4554 38.0413 11.2604C38.6041 11.0021 39.1955 10.8116 39.8032 10.6926ZM31.3948 6.28894L31.76 8.6205C30.5101 8.29732 29.2414 8.05185 27.9612 7.88581C28.9761 7.11027 30.1477 6.56541 31.3948 6.28894ZM30.4689 19.1236C31.2045 19.1159 31.9137 19.0739 32.6009 19.0103L33.0284 20.216C32.118 20.0045 31.2517 19.6347 30.4689 19.1236ZM36.1047 18.3703C36.1822 18.347 36.2667 18.3284 36.3424 18.3044C36.9634 18.1124 37.6015 17.9808 38.2479 17.9116L38.2899 20.1065C37.4827 19.6344 36.7469 19.0499 36.1047 18.3703ZM41.0402 16.8086C39.3501 16.5985 37.6347 16.75 36.0076 17.253C33.5903 18.0246 30.1912 18.2231 26.66 17.8087C27.1425 17.6097 27.5851 17.3254 27.9665 16.9696L28.7631 16.2228C28.9204 16.0761 28.978 15.8515 28.9106 15.6473C28.8436 15.4432 28.6638 15.2968 28.4504 15.2721L24.072 14.732L23.937 15.8266L27.1446 16.2223C25.9919 17.2556 24.263 17.3104 23.0472 16.3517L22.5267 17.0171C22.0162 16.8803 21.5156 16.7309 21.0305 16.5704L22.0528 15.457C23.0923 14.3252 23.3614 12.6848 22.7381 11.2804L22.3137 10.3241L21.3063 10.771L21.7301 11.7277C22.1753 12.7308 21.9833 13.9028 21.2409 14.7111L19.9028 16.1674C16.9252 15.0155 14.7845 13.4503 14.9781 11.8811C14.9949 11.7709 15.0238 11.6624 15.0645 11.5583L16.7117 13.1413L17.4766 12.3466L15.7212 10.6578C17.409 9.16789 21.8177 8.23307 27.5643 8.94186C31.0961 9.37747 34.3796 10.3869 36.5734 11.7104C38.0621 12.6293 39.7182 13.2446 41.4457 13.5206L41.0402 16.8086ZM45.9586 12.9703L44.3167 12.7678L44.1817 13.8624L45.8236 14.0649L45.6886 15.1595L44.0467 14.957L43.9117 16.0516L45.5536 16.2541L45.4186 17.3487L43.7767 17.1461L43.6417 18.2407L45.2836 18.4433L45.0864 20.0418C44.3919 19.8412 43.7793 19.4254 43.3359 18.8542L42.0952 17.2643L42.5794 13.3392L44.1692 12.0985C44.7381 11.6523 45.4333 11.3979 46.1558 11.3717L45.9586 12.9703Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M19.5532 10.8248C19.4786 11.4292 18.9281 11.8589 18.3236 11.7843C17.7191 11.7098 17.2895 11.1592 17.364 10.5547C17.4386 9.95025 17.9891 9.52059 18.5936 9.59515C19.1981 9.66971 19.6278 10.2203 19.5532 10.8248Z\" fill=\"#3BB77E\"/>\r\n    <path d=\"M24.4114 11.9796L39.1884 13.8022L39.0534 14.8968L24.2764 13.0742L24.4114 11.9796Z\" fill=\"#3BB77E\"/>\r\n    </g>\r\n    <defs>\r\n    <clipPath id=\"clip0\">\r\n    <rect width=\"80\" height=\"80\" fill=\"white\"/>\r\n    </clipPath>\r\n    </defs>\r\n    </svg>\r\n)", "import type { ActionArgs } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport { logout } from \"~/session.server\";\r\n\r\nexport const action = async ({ request }: ActionArgs) => logout(request);\r\n\r\nexport const loader = async () => redirect(\"/\");\r\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\n\r\n// Models\r\nimport {\r\n  createUser,\r\n  getUserByUsername,\r\n} from \"~/models/user.server\";\r\n\r\n// Helpers\r\nimport { createUserSession, getUserId } from \"~/session.server\";\r\nimport { safeRedirect, validateUsername } from \"~/utils\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({language});\r\n};\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const formData = await request.formData();\r\n  const username = formData.get(\"username\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\r\n  const remember = formData.get(\"remember\");\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  if (!validateUsername(username)) {\r\n    return json(\r\n      { errors: { username: lang.errorLogin.error1[`error1${language}`], password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json(\r\n      { errors: { username: null, password: lang.errorLogin.error3[`error3${language}`] } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json(\r\n      { errors: { username: null, password: lang.errorLogin.error4[`error4${language}`] } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const userExists = await getUserByUsername(username);\r\n  if (userExists) {\r\n    return json(\r\n      {\r\n        errors: {\r\n          username: `${lang.errorLogin.error51[`error51${language}`]} ${username} ${lang.errorLogin.error52[`error52${language}`]}`,\r\n          password: null,\r\n        },\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await createUser({ username, password });\r\n  if (!user) {\r\n    return json(\r\n      {\r\n        errors: {\r\n          username: null,\r\n          password: lang.errorLogin.error6[`error6${language}`],\r\n        },\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession({\r\n    redirectTo,\r\n    remember: remember === \"on\" ? true : false,\r\n    request,\r\n    userId: user.id,\r\n  });\r\n};\r\n\r\nexport const meta: V2_MetaFunction<typeof loader> = ({data}) => [{ title: `${lang.signup[`signup${data?.language as Language}`]}` }];\r\n\r\nexport default function SignUpPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\r\n  const {language} = useLoaderData<typeof loader>();\r\n  const actionData = useActionData<typeof action>();\r\n  const usernameRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (actionData?.errors?.username) {\r\n      usernameRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col items-center justify-center bg-[#e5eeec]\">\r\n      <div className=\"mx-auto w-full max-w-md p-2\">\r\n        <div className=\"bg-white p-8 rounded-2xl\">\r\n          <h3 className=\"font-bold mb-4 text-xl text-[#1ec28b]\">{lang.signupTitle[`signupTitle${language}`]}</h3>\r\n          <Form method=\"post\" className=\"space-y-6\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"username\"\r\n                className=\"block text-sm font-semibold text-gray-700\"\r\n              >\r\n                {lang.username[`username${language}`]}\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  ref={usernameRef}\r\n                  id=\"username\"\r\n                  required\r\n                  autoFocus={true}\r\n                  name=\"username\"\r\n                  type=\"username\"\r\n                  autoComplete=\"username\"\r\n                  aria-invalid={actionData?.errors?.username ? true : undefined}\r\n                  aria-describedby=\"username-error\"\r\n                  className=\"w-full rounded outline-none border border-gray-500 px-2 py-1 text-lg focus:border-[#0ea16f]\"\r\n                />\r\n                {actionData?.errors?.username && (\r\n                  <div className=\"pt-1 text-red-700\" id=\"username-error\">\r\n                    {actionData.errors.username}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-semibold text-gray-700\"\r\n              >\r\n                {lang.password[`password${language}`]}\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"password\"\r\n                  ref={passwordRef}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                  aria-describedby=\"password-error\"\r\n                  className=\"w-full rounded outline-none border border-gray-500 px-2 py-1 text-lg focus:border-[#0ea16f]\"\r\n                />\r\n                {actionData?.errors?.password && (\r\n                  <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                    {actionData.errors.password}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n            <button type=\"submit\" className=\"w-full justify-center p-2 rounded-2xl text-white uppercase font-bold bg-[#1ec28b] hover:scale-105 hover:bg-[#0ea16f] transition-all\">\r\n              {lang.signup[`signup${language}`]}\r\n            </button>\r\n          </Form>\r\n          <div className=\"mt-3 text-sm\">\r\n            <span>{lang.signupSubTitle[`signupSubTitle${language}`]}?</span>\r\n            <Link to='/login' className=\"ml-2 text-[#1ec28b] font-semibold hover:text-[#0ea16f]\">{lang.login[`login${language}`]}</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { User } from \"@prisma/client\";\r\nimport { useMatches } from \"@remix-run/react\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst DEFAULT_REDIRECT = \"/\";\r\n\r\n/**\r\n * This should be used any time the redirect path is user-provided\r\n * (Like the query string on our login/signup pages). This avoids\r\n * open-redirect vulnerabilities.\r\n * @param {string} to The redirect destination\r\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\r\n */\r\nexport function safeRedirect(\r\n  to: FormDataEntryValue | string | null | undefined,\r\n  defaultRedirect: string = DEFAULT_REDIRECT\r\n) {\r\n  if (!to || typeof to !== \"string\") {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  return to;\r\n}\r\n\r\nexport function validateUsername(username: unknown): username is string {\r\n  return typeof username === \"string\" && username.length > 6;\r\n}\r\n\r\n/**\r\n * This base hook is used in other hooks to quickly search for specific data\r\n * across all loader data using useMatches.\r\n * @param {string} id The route id\r\n * @returns {JSON|undefined} The router data or undefined if not found\r\n */\r\nexport function useMatchesData(\r\n  id: string\r\n): Record<string, unknown> | undefined {\r\n  const matchingRoutes = useMatches();\r\n  const route = useMemo(\r\n    () => matchingRoutes.find((route) => route.id === id),\r\n    [matchingRoutes, id]\r\n  );\r\n  return route?.data;\r\n}\r\n\r\nfunction isUser(user: any): user is User {\r\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\r\n}\r\n\r\nexport function useOptionalUser(): User | undefined {\r\n  const data = useMatchesData(\"root\");\r\n  if (!data || !isUser(data.user)) {\r\n    return undefined;\r\n  }\r\n  return data.user;\r\n}\r\n\r\nexport const convertTextToSlug = (text: string) => {\r\n  return text.toLowerCase()\r\n    .normalize('NFD')\r\n    // Vietnamese characters\r\n    .replace(/\u00E1|\u00E0|\u1EA3|\u1EA1|\u00E3|\u0103|\u1EAF|\u1EB1|\u1EB3|\u1EB5|\u1EB7|\u00E2|\u1EA5|\u1EA7|\u1EA9|\u1EAB|\u1EAD/gi, 'a')\r\n    .replace(/\u00E9|\u00E8|\u1EBB|\u1EBD|\u1EB9|\u00EA|\u1EBF|\u1EC1|\u1EC3|\u1EC5|\u1EC7/gi, 'e')\r\n    .replace(/i|\u00ED|\u00EC|\u1EC9|\u0129|\u1ECB/gi, 'i')\r\n    .replace(/\u00F3|\u00F2|\u1ECF|\u00F5|\u1ECD|\u00F4|\u1ED1|\u1ED3|\u1ED5|\u1ED7|\u1ED9|\u01A1|\u1EDB|\u1EDD|\u1EDF|\u1EE1|\u1EE3/gi, 'o')\r\n    .replace(/\u00FA|\u00F9|\u1EE7|\u0169|\u1EE5|\u01B0|\u1EE9|\u1EEB|\u1EED|\u1EEF|\u1EF1/gi, 'u')\r\n    .replace(/\u00FD|\u1EF3|\u1EF7|\u1EF9|\u1EF5/gi, 'y')\r\n    .replace(/\u0111/gi, 'd')\r\n    // Special symbol\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .trim()\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/[^\\w-]+/g, '')\r\n    .replace(/--+/g, '-');\r\n}", "import type { User } from \"@prisma/client\";\nimport { json, type V2_MetaFunction, type LoaderArgs } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"~/components/Container\";\nimport { ItemRestaurant } from \"~/components/ItemRestaurant\";\nimport Sidebar from \"~/components/Sidebar\";\nimport SimpleSlider from \"~/components/Slide\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport { createRestaurantSlug } from \"~/helpers/slug\";\nimport { BuildingIcon } from \"~/icons/BuildingIcon\";\nimport {\n  getRestaurantsList,\n  getTopRestaurantsByRating,\n} from \"~/models/restaurants.server\";\nimport { getUser } from \"~/session.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await getUser(request);\n\n  const topRestaurants = await getTopRestaurantsByRating({});\n\n  const listRestaurants = await getRestaurantsList();\n\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  return json({ user, language, topRestaurants, listRestaurants });\n};\n\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\n  // { title: ${lang.homePage[homePage${data?.language as Language}`]}` },\n  {\n    name: \"description\",\n    content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng H\u00E0n Qu\u1ED1c v\u00E0 Vi\u1EC7t Nam t\u1EA1i \u0110\u00E0 N\u1EB5ng\",\n  },\n];\n\nexport default function HomePage() {\n  const { user, language, topRestaurants, listRestaurants } =\n    useLoaderData<typeof loader>();\n  const [data, setData] = useState<any>([]);\n\n  useEffect(() => {\n    if (user) {\n      fetch(`http://127.0.0.1:8080/${user.id}`)\n        .then((response) => response.json())\n        .then((data) => setData(data))\n        .catch((error) => console.error(error));\n    }\n  });\n\n  const predictRes = listRestaurants.filter((item) => data?.includes(item?.id));\n\n  console.log(\"topRestaurants\", topRestaurants);\n\n  return (\n    <Container customClass=\"flex\">\n      <Sidebar user={user as unknown as User} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:overflow-y-auto md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"flex flex-col lg:w-[60%]\">\n            <div className=\"mb-6 md:mb-6\">\n              <div className=\"flex items-end\">\n                <h1 className=\"text-4xl font-bold\">\n                  {lang.hello[`hello${language}`]}\n                </h1>\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/7496/7496766.png\"\n                  alt=\"Hand Wave\"\n                  className=\"ml-2 w-12 h-12\"\n                />\n              </div>\n              <p className=\"text-gray-500\">\n                {lang.welcome[`welcome${language}`]}\n              </p>\n            </div>\n            <SimpleSlider restaurants={topRestaurants} language={language} />\n            <div className=\"flex pt-6 pb-4 md:flex-1\">\n              <div className=\"p-1 w-full\">\n                <Link\n                  to=\"/viet-nam\"\n                  title={lang.countryVN[`countryVN${language}`]}\n                  className=\"flex flex-col justify-start p-2 h-[180px] rounded-xl bg-cover bg-center bg-no-repeat w-full bg-[url('../app/assets/images/BanhMy.jpg')] md:h-[200px] lg:h-full\"\n                >\n                  <p className=\"text-[14px] text-gray-200\">\n                    {lang.titleToCountry[`titleToCountry${language}`]}\n                  </p>\n                  <h4 className=\"text-xl font-semibold text-slate-300\">\n                    {lang.countryVN[`countryVN${language}`]}\n                  </h4>\n                </Link>\n              </div>\n              <div className=\"p-1 w-full\">\n                <Link\n                  to=\"/korea\"\n                  title={lang.countryKO[`countryKO${language}`]}\n                  className=\"flex flex-col justify-start p-2 h-[180px] rounded-xl bg-cover bg-center bg-no-repeat w-full bg-[url('../app/assets/images/ChaCa.jpg')] md:h-[200px] lg:h-full\"\n                >\n                  <p className=\"text-[14px] text-gray-200\">\n                    {lang.titleToCountry[`titleToCountry${language}`]}\n                  </p>\n                  <h4 className=\"text-xl font-semibold text-slate-300\">\n                    {lang.countryKO[`countryKO${language}`]}\n                  </h4>\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"w-full\">\n            <div className=\"w-full py-4 px-1 lg:px-6 lg:h-[50%]\">\n              <div className=\"bg-white rounded-2xl md:max-h-[calc(100%)] md:overflow-hidden md:overflow-y-auto\">\n                <div>\n                  <div className=\"p-5\">\n                    <div className=\"flex items-center\">\n                      <h2 className=\"text-xl font-bold mr-2\">\n                        {lang.bestResttaurant[`bestResttaurant${language}`]}\n                      </h2>\n                      <span className=\"text-[#1ec28b]\">\n                        <BuildingIcon />\n                      </span>\n                    </div>\n                    <p className=\"text-sm\">\n                      {lang.subBestResttaurant[`subBestResttaurant${language}`]}\n                    </p>\n                  </div>\n                  {topRestaurants.map((restaurant) => (\n                    <ItemRestaurant\n                      url={createRestaurantSlug({\n                        countrySlug: restaurant.countryType.country.slug,\n                        typeSlug: restaurant.countryType.type.slug,\n                        id: restaurant.id,\n                      })}\n                      key={restaurant.id}\n                      name={restaurant[`name${language}`]}\n                      image={restaurant.images[0]?.url || undefined}\n                      rating={restaurant.rating || 0}\n                      address={restaurant[`address${language}`]}\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n            {user && (\n              <div className=\"w-full py-4 px-1 lg:px-6 lg:h-[50%]\">\n                <div className=\"bg-white rounded-2xl md:max-h-[calc(100%)] md:overflow-hidden md:overflow-y-auto\">\n                  <div>\n                    <div className=\"p-5\">\n                      <div className=\"flex items-center\">\n                        <h2 className=\"text-xl font-bold mr-2\">\n                          {lang.predictResttaurant[`predictResttaurant${language}`]}\n                        </h2>\n                        <span className=\"text-[#1ec28b]\">\n                          <BuildingIcon />\n                        </span>\n                      </div>\n                      <p className=\"text-sm\">\n                        {\n                          lang.subPredictResttaurant[\n                            `subPredictResttaurant${language}`\n                          ]\n                        }\n                      </p>\n                    </div>\n                    {predictRes?.map((restaurant: any) => (\n                      <ItemRestaurant\n                        url={createRestaurantSlug({\n                          countrySlug: restaurant.countryType.country.slug,\n                          typeSlug: restaurant.countryType.type.slug,\n                          id: restaurant.id,\n                        })}\n                        key={restaurant.id}\n                        name={restaurant[`name${language}`]}\n                        image={restaurant.images[0]?.url || undefined}\n                        rating={restaurant.rating || 0}\n                        address={restaurant[`address${language}`]}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport Slider from \"react-slick\";\nimport \"../assets/css/slied.css?__remix_sideEffect__\";\nimport { createRestaurantSlug } from \"~/helpers/slug\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\n// import { LikeIcon } from \"~/icons/LikeIcon\";\nimport { MapPinIcon } from \"~/icons/MapPinIcon\";\nimport { ClockIcon } from \"~/icons/ClockIcon\";\n\ntype SimpleSlider = {\n  restaurants?: any;\n  language: Language;\n};\n\nexport default function SimpleSlider({ restaurants, language }: SimpleSlider) {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Slider {...settings} className=\"\">\n      {restaurants &&\n      restaurants.map((restaurant: any) =>\n      <Link\n        key={restaurant.id}\n        to={createRestaurantSlug({\n          countrySlug: restaurant.countryType.country.slug,\n          typeSlug: restaurant.countryType.type.slug,\n          id: restaurant.id\n        })}\n        className=\"h-[200px] md:h-[340px] rounded-2xl\">\n\n            <div\n          style={{\n            backgroundImage: `url(${restaurant.images[0]?.url || \"\"})`,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            borderRadius: \"10px\",\n            position: \"relative\"\n          }}>\n\n              <div className=\"absolute z-10 bg-white left-1 right-1 bottom-1 py-2 px-4 rounded-xl lg:inline-block lg:right-[60%] md:p-3\">\n                <div className=\"flex items-center\">\n                  <img\n                src=\"https://www.svgrepo.com/show/2732/restaurant.svg\"\n                alt=\"Restaurant\"\n                className=\"w-6 h-6\" />\n\n                  <div className=\"ml-2 flex-1\">\n                    <p className=\"uppercase text-xs font-bold\">{`${\n                  lang.restaurant[`restaurant${language}`]\n                  }`}</p>\n                    <h3 className=\"font-bold\">\n                      {restaurant[`name${language}`]}\n                    </h3>\n                  </div>\n                  {/* <span className=\"flex items-center text-sm\">\n                 <span className=\"text-[#1ec28b] mr-1\">\n                   <LikeIcon />\n                 </span>\n                 <span>{restaurant.rating}</span>\n                </span> */}\n                </div>\n                <span className=\"hidden items-center text-sm mb-1 md:flex\">\n                  <span className=\"text-[#1ec28b] mr-1\">\n                    <MapPinIcon />\n                  </span>\n                  <span>{restaurant[`address${language}`]}</span>\n                </span>\n                <span className=\"hidden items-center text-xs font-semibold md:flex\">\n                  <span className=\"text-[#1ec28b] mr-1\">\n                    <ClockIcon />\n                  </span>\n                  <span>{`${lang.open[`open${language}`]}: ${\n                restaurant.openingTime\n                }H - ${lang.close[`close${language}`]}: ${\n                restaurant.closingTime\n                }H`}</span>\n                </span>\n              </div>\n            </div>\n          </Link>\n      )}\n    </Slider>);\n\n}", "export const BuildingIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008z\"\r\n    />\r\n  </svg>\r\n);\r\n", "import type { LoaderArgs, LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\nimport type { User } from \"@prisma/client\";\r\n\r\n// Helpers\r\nimport { getUser, requireManagerUser } from \"~/session.server\";\r\n\r\n// Icons\r\nimport { BriefcaseIcon } from \"~/icons/BriefcaseIcon\";\r\nimport { RestaurantIcon } from \"~/icons/RestaurantIcon\";\r\nimport { Container } from \"~/components/Container\";\r\nimport Sidebar from \"~/components/Sidebar\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\nimport { PhotoIcon } from \"~/icons/PhotoIcon\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\r\n  await requireManagerUser(request);\r\n  const user = await getUser(request);\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({ user, language });\r\n};\r\n\r\nexport default function AdminPage() {\r\n  const { user, language } = useLoaderData<typeof loader>();\r\n  const userRole = user.role;\r\n\r\n  const SIDEBAR_LIST = [\r\n    {\r\n      name: \"Lo\u1EA1i nh\u00E0 h\u00E0ng\",\r\n      url: \"category\",\r\n      Icon: BriefcaseIcon,\r\n      isShow: userRole > 1,\r\n    },\r\n    {\r\n      name: \"Nh\u00E0 h\u00E0ng\",\r\n      url: \"restaurant\",\r\n      Icon: RestaurantIcon,\r\n      isShow: userRole > 0,\r\n    },\r\n    {\r\n      name: \"\u1EA2nh\",\r\n      url: \"images\",\r\n      Icon: PhotoIcon,\r\n      isShow: userRole > 0,\r\n    },\r\n  ].filter((it) => it.isShow);\r\n\r\n  return (\r\n    <Container customClass=\"flex\">\r\n      <Sidebar user={user as unknown as User} langType={language} />\r\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\r\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\r\n          <div className=\"lg:w-[20%]\">\r\n            {SIDEBAR_LIST.map(({ name, url, Icon }) => (\r\n              <NavLink\r\n                key={url}\r\n                to={url}\r\n                className={({ isActive }) =>\r\n                  `flex p-3 mb-1 rounded-md hover:no-underline hover:bg-[#1ec28b] hover:text-white ${\r\n                    isActive ? \"bg-[#1ec28b] text-white\" : \"\"\r\n                  }`\r\n                }\r\n              >\r\n                <Icon />\r\n                <span className=\"ml-2\">{name}</span>\r\n              </NavLink>\r\n            ))}\r\n          </div>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n", "export const BriefcaseIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 00.75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 00-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0112 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 01-.673-.38m0 0A2.18 2.18 0 013 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 013.413-.387m7.5 0V5.25A2.25 2.25 0 0013.5 3h-3a2.25 2.25 0 00-2.25 2.25v.894m7.5 0a48.667 48.667 0 00-7.5 0M12 12.75h.008v.008H12v-.008z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const RestaurantIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M13.5 21v-7.5a.75.75 0 01.75-.75h3a.75.75 0 01.75.75V21m-4.5 0H2.36m11.14 0H18m0 0h3.64m-1.39 0V9.349m-16.5 11.65V9.35m0 0a3.001 3.001 0 003.75-.615A2.993 2.993 0 009.75 9.75c.896 0 1.7-.393 2.25-1.016a2.993 2.993 0 002.25 1.016c.896 0 1.7-.393 2.25-1.016a3.001 3.001 0 003.75.614m-16.5 0a3.004 3.004 0 01-.621-4.72L4.318 3.44A1.5 1.5 0 015.378 3h13.243a1.5 1.5 0 011.06.44l1.19 1.189a3 3 0 01-.621 4.72m-13.5 8.65h3.75a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.75c0 .415.336.75.75.75z\"\r\n    />\r\n  </svg>\r\n);\r\n", "export const PhotoIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"1.5\"\r\n    stroke=\"currentColor\"\r\n    className=\"w-6 h-6\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z\"\r\n    />\r\n  </svg>\r\n);\r\n", "import type { User } from \"@prisma/client\";\nimport { json, type V2_MetaFunction, type LoaderArgs } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { Category } from \"~/components/Category\";\nimport { Container } from \"~/components/Container\";\nimport Sidebar from \"~/components/Sidebar\";\nimport { lang } from \"~/constants/lang\";\nimport type { Language } from \"~/constants/langType\";\nimport { getLanguageCookie } from \"~/helpers/cookies\";\nimport {\n  type TypeWithRestaurantCount,\n  getTypeWithRestaurantCount,\n} from \"~/models/type.server\";\nimport { getUser } from \"~/session.server\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await getUser(request);\n\n  const cookieHeader = request.headers.get(\"Cookie\");\n  const language: Language = await getLanguageCookie(cookieHeader);\n\n  const types = await getTypeWithRestaurantCount({ countryId: \"2\" }); //default 1 is VN\n  return json({ user, types, language });\n};\n\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\n  {\n    title: `${\n      lang.restaurantKor[`restaurantKor${data?.language as Language}`]\n    }`,\n  },\n  {\n    name: \"description\",\n    content: \"Gi\u1EDBi thi\u1EC7u v\u1EC1 nh\u00E0 h\u00E0ng H\u00E0n Qu\u1ED1c t\u1EA1i \u0110\u00E0 N\u1EB5ng\",\n  },\n];\n\nexport default function KoreaIndexPage() {\n  const { user, types, language } = useLoaderData<typeof loader>();\n\n  return (\n    <Container customClass=\"flex\">\n      <Sidebar user={user as unknown as User} langType={language} />\n      <div className=\"w-full md:w-[calc(100%-200px)] md:px-4\">\n        <div className=\"h-full rounded-[10px] p-2 bg-[#f5f9f8] md:p-6 md:rounded-[40px] lg:flex\">\n          <div className=\"lg:w-[30%] overflow-y-scroll\">\n            <Category\n              countrySlug=\"korea\"\n              language={language}\n              categorys={types as unknown as TypeWithRestaurantCount[]}\n            />\n          </div>\n          <Outlet />\n        </div>\n      </div>\n    </Container>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\n\r\n// Models\r\nimport { verifyLogin } from \"~/models/user.server\";\r\n\r\n// Helpers\r\nimport { createUserSession, getUserId } from \"~/session.server\";\r\nimport { safeRedirect, validateUsername } from \"~/utils\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({language});\r\n};\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const formData = await request.formData();\r\n  const username = formData.get(\"username\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\r\n  const remember = formData.get(\"remember\");\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  if (!validateUsername(username)) {\r\n    return json(\r\n      { errors: { username: lang.errorLogin.error1[`error1${language}`], password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json(\r\n      { errors: { username: null, password: lang.errorLogin.error3[`error3${language}`] } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await verifyLogin(username, password);\r\n\r\n  if (!user) {\r\n    return json(\r\n      { errors: { username: lang.errorLogin.error2[`error2${language}`], password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession({\r\n    redirectTo,\r\n    remember: remember === \"on\" ? true : false,\r\n    request,\r\n    userId: user.id,\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const meta: V2_MetaFunction<typeof loader> = ({data}) => [{ title: `${lang.login[`login${data?.language as Language}`]}` }];\r\n\r\nexport default function LoginPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\r\n  const actionData = useActionData<typeof action>();\r\n  const {language} = useLoaderData<typeof loader>();\r\n  const usernameRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (actionData?.errors?.username) {\r\n      usernameRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col items-center justify-center bg-[#e5eeec]\">\r\n      <div className=\"mx-auto w-full max-w-md p-2\">\r\n        <div className=\"bg-white p-8 rounded-2xl\">\r\n          <h3 className=\"font-bold mb-4 text-xl text-[#1ec28b]\">{lang.loginTitle[`loginTitle${language}`]}</h3>\r\n          <Form method=\"post\" className=\"space-y-6\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"username\"\r\n                className=\"block text-sm font-semibold text-gray-700\"\r\n              >\r\n                {lang.username[`username${language}`]}\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  ref={usernameRef}\r\n                  id=\"username\"\r\n                  required\r\n                  autoFocus={true}\r\n                  name=\"username\"\r\n                  type=\"username\"\r\n                  autoComplete=\"username\"\r\n                  aria-invalid={actionData?.errors?.username ? true : undefined}\r\n                  aria-describedby=\"username-error\"\r\n                  className=\"w-full rounded outline-none border border-gray-500 px-2 py-1 text-lg focus:border-[#0ea16f]\"\r\n                />\r\n                {actionData?.errors?.username && (\r\n                  <div className=\"pt-1 text-red-700\" id=\"username-error\">\r\n                    {actionData.errors.username}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-semibold text-gray-700\"\r\n              >\r\n                {lang.password[`password${language}`]}\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"password\"\r\n                  ref={passwordRef}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                  aria-describedby=\"password-error\"\r\n                  className=\"w-full rounded outline-none border border-gray-500 px-2 py-1 text-lg focus:border-[#0ea16f]\"\r\n                />\r\n                {actionData?.errors?.password && (\r\n                  <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                    {actionData.errors.password}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  id=\"remember\"\r\n                  name=\"remember\"\r\n                  type=\"checkbox\"\r\n                  className=\"h-3.5 w-3.5 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                />\r\n                <label\r\n                  htmlFor=\"remember\"\r\n                  className=\"ml-2 block text-sm text-gray-900\"\r\n                >\r\n                  {lang.remember[`remember${language}`]}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n            <button type=\"submit\" className=\"w-full justify-center p-2 rounded-2xl text-white uppercase font-bold bg-[#1ec28b] hover:scale-105 hover:bg-[#0ea16f] transition-all\">\r\n              {lang.login[`login${language}`]}\r\n            </button>\r\n          </Form>\r\n          <div className=\"mt-3 text-sm\">\r\n            <span>{lang.loginSubTitle[`loginSubTitle${language}`]}?</span>\r\n            <Link to='/signup' className=\"ml-2 text-[#1ec28b] font-semibold hover:text-[#0ea16f]\">{lang.signup[`signup${language}`]}</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { json, type LoaderArgs, type V2_MetaFunction } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { useEffect } from \"react\";\r\nimport { lang } from \"~/constants/lang\";\r\nimport type { Language } from \"~/constants/langType\";\r\nimport { getLanguageCookie } from \"~/helpers/cookies\";\r\n\r\n// Components\r\nimport { ArrowLongLeft } from \"~/icons/ArrowLongLeft\";\r\nimport { ExclamationIcon } from \"~/icons/ExclamationIcon\";\r\nimport { getUser } from \"~/session.server\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const user = await getUser(request);\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const language: Language = await getLanguageCookie(cookieHeader);\r\n\r\n  return json({ user, language });\r\n};\r\n\r\nexport const meta: V2_MetaFunction<typeof loader> = ({ data }) => [\r\n  { title: `${lang.page404Title[`page404Title${data?.language as Language}`]}` },\r\n];\r\n\r\nconst goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\nexport default function Page404() {\r\n  const { language } = useLoaderData<typeof loader>();\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      window.location.href = \"/\";\r\n    }, 60000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container h-screen flex items-center px-6 py-24 mx-auto\">\r\n        <div className=\"flex flex-col items-center max-w-sm mx-auto text-center\">\r\n          <p className=\"p-3 text-sm font-medium text-yellow-500 rounded-full bg-yellow-100 dark:bg-gray-800\">\r\n            <ExclamationIcon />\r\n          </p>\r\n          <h1 className=\"mt-3 text-2xl font-semibold text-gray-800 dark:text-white md:text-3xl\">\r\n            {lang.page404Title[`page404Title${language}`]}\r\n          </h1>\r\n          <p className=\"mt-4 text-gray-500 dark:text-gray-400\">\r\n            {lang.page404SubTitle[`page404SubTitle${language}`]}\r\n          </p>\r\n          <div className=\"flex items-center w-full mt-6 gap-x-3 shrink-0 sm:w-auto\">\r\n            <button\r\n              onClick={goBack}\r\n              className=\"flex items-center justify-center w-1/2 px-5 py-2 text-sm text-gray-700 transition-colors duration-200 bg-white border rounded-lg gap-x-2 sm:w-auto dark:hover:bg-gray-800 dark:bg-gray-900 hover:bg-gray-100 dark:text-gray-200 dark:border-gray-700\"\r\n            >\r\n              <ArrowLongLeft />\r\n              <span>{lang.back[`back${language}`]}</span>\r\n            </button>\r\n            <Link\r\n              to=\"/\"\r\n              className=\"w-1/2 px-5 py-2 text-sm tracking-wide text-white transition-colors duration-200 bg-blue-500 rounded-lg shrink-0 sm:w-auto hover:bg-blue-600 dark:hover:bg-blue-500 dark:bg-blue-600\"\r\n            >\r\n              {lang.home[`home${language}`]}\r\n            </Link>\r\n          </div>\r\n          <p className=\"mt-4 text-gray-500 dark:text-gray-400\">\r\n            {lang.page404TimeTitle[`page404TimeTitle${language}`]}\r\n            <span className=\"font-medium text-blue-500 dark:text-blue-400\">\r\n              {\" \"}\r\n              1 {lang.minute[`minute${language}`]}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n", "export const ArrowLongLeft = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-5 h-5 rtl:rotate-180\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18\" />\r\n    </svg>\r\n)\r\n", "export const ExclamationIcon = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-8 h-8\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n  </svg>\r\n)\r\n", "import { redirect } from \"@remix-run/node\";\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\n\r\nexport const loader = async ({ params }: LoaderArgs) => {\r\n  return redirect(\"/404\");\r\n};\r\n", "export default {'entry':{'module':'/build/entry.client-XAVVGZAW.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-PZYABHQ3.js','/build/_shared/chunk-2IE37JYB.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-L7JTN6AT.js','imports':['/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-WRAZZB3G.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/404':{'id':'routes/404','parentId':'root','path':'404','index':undefined,'caseSensitive':undefined,'module':'/build/routes/404-IT4OTSX3.js','imports':['/build/_shared/chunk-WLICR2AU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-2HWKTGV4.js','imports':['/build/_shared/chunk-76C3YBRW.js','/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-DQ7TSKHG.js','/build/_shared/chunk-P4TKK2KA.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-WLICR2AU.js','/build/_shared/chunk-66C4EUGW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-4PKUSFUA.js','imports':['/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-WLICR2AU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.category':{'id':'routes/admin.category','parentId':'routes/admin','path':'category','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.category-LSOVV4YB.js','imports':['/build/_shared/chunk-2ESX57M3.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-PF4WACFH.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.category.$slug':{'id':'routes/admin.category.$slug','parentId':'routes/admin.category','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.category.$slug-PK3YZYGD.js','imports':['/build/_shared/chunk-V7DWSR4B.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.images':{'id':'routes/admin.images','parentId':'routes/admin','path':'images','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.images-P5OX7NRP.js','imports':['/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.images.$restId':{'id':'routes/admin.images.$restId','parentId':'routes/admin.images','path':':restId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.images.$restId-WVHON7H6.js','imports':['/build/_shared/chunk-O5QR3QFV.js','/build/_shared/chunk-PF4WACFH.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.images.$restId.$id':{'id':'routes/admin.images.$restId.$id','parentId':'routes/admin.images.$restId','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.images.$restId.$id-3YHABVH3.js','imports':['/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-V7DWSR4B.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.restaurant':{'id':'routes/admin.restaurant','parentId':'routes/admin','path':'restaurant','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.restaurant-XEO247VQ.js','imports':['/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-PF4WACFH.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.restaurant.$id':{'id':'routes/admin.restaurant.$id','parentId':'routes/admin.restaurant','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.restaurant.$id-JN3RSQFP.js','imports':['/build/_shared/chunk-V7DWSR4B.js','/build/_shared/chunk-2ESX57M3.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/favorite':{'id':'routes/favorite','parentId':'root','path':'favorite','index':undefined,'caseSensitive':undefined,'module':'/build/routes/favorite-W3HO2VVF.js','imports':['/build/_shared/chunk-76C3YBRW.js','/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-P4TKK2KA.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-WLICR2AU.js','/build/_shared/chunk-66C4EUGW.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/korea':{'id':'routes/korea','parentId':'root','path':'korea','index':undefined,'caseSensitive':undefined,'module':'/build/routes/korea-TONSGCUB.js','imports':['/build/_shared/chunk-RY55SJEH.js','/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-WLICR2AU.js','/build/_shared/chunk-2ESX57M3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/korea.$slug.$restaurant':{'id':'routes/korea.$slug.$restaurant','parentId':'routes/korea','path':':slug/:restaurant','index':undefined,'caseSensitive':undefined,'module':'/build/routes/korea.$slug.$restaurant-42QMGDVA.js','imports':['/build/_shared/chunk-WVSGDVWZ.js','/build/_shared/chunk-DQ7TSKHG.js','/build/_shared/chunk-P4TKK2KA.js','/build/_shared/chunk-3VOIM7E7.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/korea.$slug._index':{'id':'routes/korea.$slug._index','parentId':'routes/korea','path':':slug','index':true,'caseSensitive':undefined,'module':'/build/routes/korea.$slug._index-554R36FJ.js','imports':['/build/_shared/chunk-3VOIM7E7.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-LG35DIEV.js','imports':['/build/_shared/chunk-G3ACJGOK.js','/build/_shared/chunk-WLICR2AU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-GGSXPJWV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/schedule':{'id':'routes/schedule','parentId':'root','path':'schedule','index':undefined,'caseSensitive':undefined,'module':'/build/routes/schedule-CSA6KDHC.js','imports':['/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-P4TKK2KA.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-WLICR2AU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings':{'id':'routes/settings','parentId':'root','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings-L52Z5D4N.js','imports':['/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-WLICR2AU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-QJ3FZVPH.js','imports':['/build/_shared/chunk-G3ACJGOK.js','/build/_shared/chunk-WLICR2AU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/viet-nam':{'id':'routes/viet-nam','parentId':'root','path':'viet-nam','index':undefined,'caseSensitive':undefined,'module':'/build/routes/viet-nam-3MXINNVG.js','imports':['/build/_shared/chunk-RY55SJEH.js','/build/_shared/chunk-AHWWUA6F.js','/build/_shared/chunk-WLICR2AU.js','/build/_shared/chunk-2ESX57M3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/viet-nam.$slug.$restaurant':{'id':'routes/viet-nam.$slug.$restaurant','parentId':'routes/viet-nam','path':':slug/:restaurant','index':undefined,'caseSensitive':undefined,'module':'/build/routes/viet-nam.$slug.$restaurant-4KXJEMBA.js','imports':['/build/_shared/chunk-WVSGDVWZ.js','/build/_shared/chunk-DQ7TSKHG.js','/build/_shared/chunk-P4TKK2KA.js','/build/_shared/chunk-3VOIM7E7.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/viet-nam.$slug._index':{'id':'routes/viet-nam.$slug._index','parentId':'routes/viet-nam','path':':slug','index':true,'caseSensitive':undefined,'module':'/build/routes/viet-nam.$slug._index-EK6CXHFL.js','imports':['/build/_shared/chunk-3VOIM7E7.js','/build/_shared/chunk-UTNS66SI.js','/build/_shared/chunk-Y6KR4CRJ.js','/build/_shared/chunk-66C4EUGW.js','/build/_shared/chunk-DMZCSMEQ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'0e2622f1','hmr':{'runtime':'/build/_shared\\\\chunk-2IE37JYB.js','timestamp':1704855972242},'url':'/build/manifest-0E2622F1.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\haseong\\\\Desktop\\\\final\\\\danang-restaurant\\\\danang-restaurant\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/viet-nam.$slug.$restaurant.tsx\";\nimport * as route2 from \"./routes/admin.images.$restId.$id.tsx\";\nimport * as route3 from \"./routes/korea.$slug.$restaurant.tsx\";\nimport * as route4 from \"./routes/viet-nam.$slug._index.tsx\";\nimport * as route5 from \"./routes/admin.category.$slug.tsx\";\nimport * as route6 from \"./routes/admin.images.$restId.tsx\";\nimport * as route7 from \"./routes/admin.restaurant.$id.tsx\";\nimport * as route8 from \"./routes/korea.$slug._index.tsx\";\nimport * as route9 from \"./routes/admin.restaurant.tsx\";\nimport * as route10 from \"./routes/admin.category.tsx\";\nimport * as route11 from \"./routes/admin.images.tsx\";\nimport * as route12 from \"./routes/favorite.tsx\";\nimport * as route13 from \"./routes/schedule.tsx\";\nimport * as route14 from \"./routes/settings.tsx\";\nimport * as route15 from \"./routes/viet-nam.tsx\";\nimport * as route16 from \"./routes/logout.tsx\";\nimport * as route17 from \"./routes/signup.tsx\";\nimport * as route18 from \"./routes/_index.tsx\";\nimport * as route19 from \"./routes/admin.tsx\";\nimport * as route20 from \"./routes/korea.tsx\";\nimport * as route21 from \"./routes/login.tsx\";\nimport * as route22 from \"./routes/404.tsx\";\nimport * as route23 from \"./routes/$.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/viet-nam.$slug.$restaurant\": {\n      id: \"routes/viet-nam.$slug.$restaurant\",\n      parentId: \"routes/viet-nam\",\n      path: \":slug/:restaurant\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admin.images.$restId.$id\": {\n      id: \"routes/admin.images.$restId.$id\",\n      parentId: \"routes/admin.images.$restId\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/korea.$slug.$restaurant\": {\n      id: \"routes/korea.$slug.$restaurant\",\n      parentId: \"routes/korea\",\n      path: \":slug/:restaurant\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/viet-nam.$slug._index\": {\n      id: \"routes/viet-nam.$slug._index\",\n      parentId: \"routes/viet-nam\",\n      path: \":slug\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/admin.category.$slug\": {\n      id: \"routes/admin.category.$slug\",\n      parentId: \"routes/admin.category\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/admin.images.$restId\": {\n      id: \"routes/admin.images.$restId\",\n      parentId: \"routes/admin.images\",\n      path: \":restId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/admin.restaurant.$id\": {\n      id: \"routes/admin.restaurant.$id\",\n      parentId: \"routes/admin.restaurant\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/korea.$slug._index\": {\n      id: \"routes/korea.$slug._index\",\n      parentId: \"routes/korea\",\n      path: \":slug\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/admin.restaurant\": {\n      id: \"routes/admin.restaurant\",\n      parentId: \"routes/admin\",\n      path: \"restaurant\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/admin.category\": {\n      id: \"routes/admin.category\",\n      parentId: \"routes/admin\",\n      path: \"category\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/admin.images\": {\n      id: \"routes/admin.images\",\n      parentId: \"routes/admin\",\n      path: \"images\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/favorite\": {\n      id: \"routes/favorite\",\n      parentId: \"root\",\n      path: \"favorite\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/schedule\": {\n      id: \"routes/schedule\",\n      parentId: \"root\",\n      path: \"schedule\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/settings\": {\n      id: \"routes/settings\",\n      parentId: \"root\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/viet-nam\": {\n      id: \"routes/viet-nam\",\n      parentId: \"root\",\n      path: \"viet-nam\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/korea\": {\n      id: \"routes/korea\",\n      parentId: \"root\",\n      path: \"korea\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/404\": {\n      id: \"routes/404\",\n      parentId: \"root\",\n      path: \"404\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_node", "import_react", "import_node", "bcrypt", "invariant", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "Slider", "import_node", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "invariant", "data", "restaurant", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "invariant", "action", "action", "RestaurantKoreaPage", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_fa", "import_react", "import_jsx_dev_runtime", "loader", "action", "invariant", "meta", "RestaurantKoreaPage", "data", "restaurant", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "_a", "_b", "_c", "_d", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "meta", "action", "AdminSymbolDetailPage", "loader", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "invariant", "action", "AdminSymbolDetailPage", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "CategoryKoreaPage", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "CategoryKoreaPage", "AdminRestaurantsListPage", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "meta", "AdminRestaurantsListPage", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "meta", "AdminRestaurantsListPage", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "meta", "AdminRestaurantsListPage", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "meta", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "meta", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "meta", "action", "loader", "import_node", "action", "loader", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "meta", "import_node", "import_react", "import_react", "import_react_slick", "import_jsx_dev_runtime", "Slider", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "meta", "data", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "KoreaIndexPage", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "meta", "KoreaIndexPage", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "meta", "__exports", "loader", "import_node", "__exports"]
}
